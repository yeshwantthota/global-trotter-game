(window["webpackJsonpBottomSticky"] = window["webpackJsonpBottomSticky"] || []).push([[6],{

/***/ "./node_modules/@practo/practo-ai/dist/bundle-CzgB87O4-KLZEOica.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@practo/practo-ai/dist/bundle-CzgB87O4-KLZEOica.js ***!
  \*************************************************************************/
/*! exports provided: downsampleToWav, encodeMp3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"downsampleToWav\", function() { return downsampleToWav; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeMp3\", function() { return encodeMp3; });\n/* harmony import */ var _index_DknuPJHO_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index-DknuPJHO.js */ \"./node_modules/@practo/practo-ai/dist/index-DknuPJHO.js\");\n\nfunction a(e5) {\n  return new Int16Array(e5);\n}\nfunction t(e5) {\n  return new Int32Array(e5);\n}\nfunction s(e5) {\n  return new Float32Array(e5);\n}\nvar n = { fill: function(e5, a2, t2, s2) {\n  if (2 == arguments.length) for (var n2 = 0; n2 < e5.length; n2++) e5[n2] = arguments[1];\n  else for (n2 = a2; n2 < t2; n2++) e5[n2] = s2;\n} }, r = { arraycopy: function(e5, a2, t2, s2, n2) {\n  for (var r2 = a2 + n2; a2 < r2; ) t2[s2++] = e5[a2++];\n}, out: {} };\nr.out.println = function(e5) {\n  console.log(e5);\n}, r.out.printf = function() {\n  console.log.apply(console, arguments);\n};\nvar _ = {};\nfunction i(e5) {\n  this.ordinal = e5;\n}\n_.SQRT2 = 1.4142135623730951, _.FAST_LOG10 = function(e5) {\n  return Math.log10(e5);\n}, _.FAST_LOG10_X = function(e5, a2) {\n  return Math.log10(e5) * a2;\n}, i.short_block_allowed = new i(0), i.short_block_coupled = new i(1), i.short_block_dispensed = new i(2), i.short_block_forced = new i(3);\nvar o = {};\nfunction l(e5) {\n  this.ordinal = e5;\n}\no.MAX_VALUE = 34028235e31, l.vbr_off = new l(0), l.vbr_mt = new l(1), l.vbr_rh = new l(2), l.vbr_abr = new l(3), l.vbr_mtrh = new l(4), l.vbr_default = l.vbr_mtrh;\nvar f, c, h, u, b, m, p = { System: r, VbrMode: l, Float: o, ShortBlock: i, Util: _, Arrays: n, new_array_n: function e(a2) {\n  if (1 == a2.length) return new Array(a2[0]);\n  var t2 = a2[0];\n  a2 = a2.slice(1);\n  for (var s2 = [], n2 = 0; n2 < t2; n2++) s2.push(e(a2));\n  return s2;\n}, new_byte: function(e5) {\n  return new Int8Array(e5);\n}, new_double: function(e5) {\n  return new Float64Array(e5);\n}, new_float: s, new_float_n: function e2(a2) {\n  if (1 == a2.length) return s(a2[0]);\n  var t2 = a2[0];\n  a2 = a2.slice(1);\n  for (var n2 = [], r2 = 0; r2 < t2; r2++) n2.push(e2(a2));\n  return n2;\n}, new_int: t, new_int_n: function e3(a2) {\n  if (1 == a2.length) return t(a2[0]);\n  var s2 = a2[0];\n  a2 = a2.slice(1);\n  for (var n2 = [], r2 = 0; r2 < s2; r2++) n2.push(e3(a2));\n  return n2;\n}, new_short_n: function e4(t2) {\n  if (1 == t2.length) return a(t2[0]);\n  var s2 = t2[0];\n  t2 = t2.slice(1);\n  for (var n2 = [], r2 = 0; r2 < s2; r2++) n2.push(e4(t2));\n  return n2;\n}, assert: function(e5) {\n} };\nfunction v() {\n  if (u) return h;\n  u = 1;\n  var e5 = A(), a2 = p, t2 = a2.System, s2 = a2.new_float, n2 = a2.new_float_n;\n  return h = function() {\n    this.l = s2(e5.SBMAX_l), this.s = n2([e5.SBMAX_s, 3]);\n    var a3 = this;\n    this.assign = function(s3) {\n      t2.arraycopy(s3.l, 0, a3.l, 0, e5.SBMAX_l);\n      for (var n3 = 0; n3 < e5.SBMAX_s; n3++) for (var r2 = 0; r2 < 3; r2++) a3.s[n3][r2] = s3.s[n3][r2];\n    };\n  };\n}\nfunction d(e5) {\n  var a2 = e5;\n  this.ordinal = function() {\n    return a2;\n  };\n}\nd.STEREO = new d(0), d.JOINT_STEREO = new d(1), d.DUAL_CHANNEL = new d(2), d.MONO = new d(3), d.NOT_SET = new d(4);\nvar g, S, R = d;\nfunction A() {\n  if (S) return g;\n  S = 1;\n  var e5 = p, a2 = e5.System, t2 = e5.VbrMode, s2 = e5.new_array_n, n2 = e5.new_float, r2 = e5.new_float_n, _2 = e5.new_int, i2 = e5.assert;\n  function o2() {\n    var e6 = function() {\n      if (c) return f;\n      c = 1;\n      var e7 = p, a3 = e7.System, t3 = e7.Util, s3 = e7.Arrays, n3 = e7.new_float, r3 = A();\n      return f = function() {\n        var e8 = [-0.1482523854003001, 32.308141959636465, 296.40344946382766, 883.1344870032432, 11113.947376231741, 1057.2713659324597, 305.7402417275812, 30.825928907280012, 3.8533188138216365, 59.42900443849514, 709.5899960123345, 5281.91112291017, -5829.66483675846, -817.6293103748613, -76.91656988279972, -4.594269939176596, 0.9063471690191471, 0.1960342806591213, -0.15466694054279598, 34.324387823855965, 301.8067566458425, 817.599602898885, 11573.795901679885, 1181.2520595540152, 321.59731579894424, 31.232021761053772, 3.7107095756221318, 53.650946155329365, 684.167428119626, 5224.56624370173, -6366.391851890084, -908.9766368219582, -89.83068876699639, -5.411397422890401, 0.8206787908286602, 0.3901806440322567, -0.16070888947830023, 36.147034243915876, 304.11815768187864, 732.7429163887613, 11989.60988270091, 1300.012278487897, 335.28490093152146, 31.48816102859945, 3.373875931311736, 47.232241542899175, 652.7371796173471, 5132.414255594984, -6909.087078780055, -1001.9990371107289, -103.62185754286375, -6.104916304710272, 0.7416505462720353, 0.5805693545089249, -0.16636367662261495, 37.751650073343995, 303.01103387567713, 627.9747488785183, 12358.763425278165, 1412.2779918482834, 346.7496836825721, 31.598286663170416, 3.1598635433980946, 40.57878626349686, 616.1671130880391, 5007.833007176154, -7454.040671756168, -1095.7960341867115, -118.24411666465777, -6.818469345853504, 0.6681786379192989, 0.7653668647301797, -0.1716176790982088, 39.11551877123304, 298.3413246578966, 503.5259106886539, 12679.589408408976, 1516.5821921214542, 355.9850766329023, 31.395241710249053, 2.9164211881972335, 33.79716964664243, 574.8943997801362, 4853.234992253242, -7997.57021486075, -1189.7624067269965, -133.6444792601766, -7.7202770609839915, 0.5993769336819237, 0.9427934736519954, -0.17645823955292173, 40.21879108166477, 289.9982036694474, 359.3226160751053, 12950.259102786438, 1612.1013903507662, 362.85067106591504, 31.045922092242872, 2.822222032597987, 26.988862316190684, 529.8996541764288, 4671.371946949588, -8535.899136645805, -1282.5898586244496, -149.58553632943463, -8.643494270763135, 0.5345111359507916, 1.111140466039205, -0.36174739330527045, 41.04429910497807, 277.5463268268618, 195.6386023135583, 13169.43812144731, 1697.6433561479398, 367.40983966190305, 30.557037410382826, 2.531473372857427, 20.070154905927314, 481.50208566532336, 4464.970341588308, -9065.36882077239, -1373.62841526722, -166.1660487028118, -9.58289321133207, 0.4729647758913199, 1.268786568327291, -0.36970682634889585, 41.393213350082036, 261.2935935556502, 12.935476055240873, 13336.131683328815, 1772.508612059496, 369.76534388639965, 29.751323653701338, 2.4023193045459172, 13.304795348228817, 430.5615775526625, 4237.0568611071185, -9581.931701634761, -1461.6913552409758, -183.12733958476446, -10.718010163869403, 0.41421356237309503, 1.414213562373095, -0.37677560326535325, 41.619486213528496, 241.05423794991074, -187.94665032361226, 13450.063605744153, 1836.153896465782, 369.4908799925761, 29.001847876923147, 2.0714759319987186, 6.779591200894186, 377.7767837205709, 3990.386575512536, -10081.709459700915, -1545.947424837898, -200.3762958015653, -11.864482073055006, 0.3578057213145241, 1.546020906725474, -0.3829366947518991, 41.1516456456653, 216.47684307105183, -406.1569483347166, 13511.136535077321, 1887.8076599260432, 367.3025214564151, 28.136213436723654, 1.913880671464418, 0.3829366947518991, 323.85365704338597, 3728.1472257487526, -10561.233882199509, -1625.2025997821418, -217.62525175416, -13.015432208941645, 0.3033466836073424, 1.66293922460509, -0.5822628872992417, 40.35639251440489, 188.20071124269245, -640.2706748618148, 13519.21490106562, 1927.6022433578062, 362.8197642637487, 26.968821921868447, 1.7463817695935329, -5.62650678237171, 269.3016715297017, 3453.386536448852, -11016.145278780888, -1698.6569643425091, -234.7658734267683, -14.16351421663124, 0.2504869601913055, 1.76384252869671, -0.5887180101749253, 39.23429103868072, 155.76096234403798, -889.2492977967378, 13475.470561874661, 1955.0535223723712, 356.4450994756727, 25.894952980042156, 1.5695032905781554, -11.181939564328772, 214.80884394039484, 3169.1640829158237, -11443.321309975563, -1765.1588461316153, -251.68908574481912, -15.49755935939164, 0.198912367379658, 1.847759065022573, -0.7912582233652842, 37.39369355329111, 119.699486012458, -1151.0956593239027, 13380.446257078214, 1970.3952110853447, 348.01959814116185, 24.731487364283044, 1.3850130831637748, -16.421408865300393, 161.05030052864092, 2878.3322807850063, -11838.991423510031, -1823.985884688674, -268.2854986386903, -16.81724543849939, 0.1483359875383474, 1.913880671464418, -0.7960642926861912, 35.2322109610459, 80.01928065061526, -1424.0212633405113, 13235.794061869668, 1973.804052543835, 337.9908651258184, 23.289159354463873, 1.3934255946442087, -21.099669467133474, 108.48348407242611, 2583.700758091299, -12199.726194855148, -1874.2780658979746, -284.2467154529415, -18.11369784385905, 0.09849140335716425, 1.961570560806461, -0.998795456205172, 32.56307803611191, 36.958364584370486, -1706.075448829146, 13043.287458812016, 1965.3831106103316, 326.43182772364605, 22.175018750622293, 1.198638339011324, -25.371248002043963, 57.53505923036915, 2288.41886619975, -12522.674544337233, -1914.8400385312243, -299.26241273417224, -19.37805630698734, 0.04912684976946725, 1.990369453344394, 0.035780907 * t3.SQRT2 * 0.5 / 2384e-9, 0.017876148 * t3.SQRT2 * 0.5 / 2384e-9, 3134727e-9 * t3.SQRT2 * 0.5 / 2384e-9, 2457142e-9 * t3.SQRT2 * 0.5 / 2384e-9, 971317e-9 * t3.SQRT2 * 0.5 / 2384e-9, 218868e-9 * t3.SQRT2 * 0.5 / 2384e-9, 101566e-9 * t3.SQRT2 * 0.5 / 2384e-9, 13828e-9 * t3.SQRT2 * 0.5 / 2384e-9, 12804.797818791945, 1945.5515939597317, 313.4244966442953, 20.801593959731544, 1995.1556208053692, 9.000838926174497, -29.20218120805369], _3 = [[2382191739347913e-28, 6423305872147834e-28, 9400849094049688e-28, 1122435026096556e-27, 1183840321267481e-27, 1122435026096556e-27, 940084909404969e-27, 6423305872147839e-28, 2382191739347918e-28, 5456116108943412e-27, 4878985199565852e-27, 4240448995017367e-27, 3559909094758252e-27, 2858043359288075e-27, 2156177623817898e-27, 1475637723558783e-27, 8371015190102974e-28, 2599706096327376e-28, -5456116108943412e-27, -4878985199565852e-27, -4240448995017367e-27, -3559909094758252e-27, -2858043359288076e-27, -2156177623817898e-27, -1475637723558783e-27, -8371015190102975e-28, -2599706096327376e-28, -2382191739347923e-28, -6423305872147843e-28, -9400849094049696e-28, -1122435026096556e-27, -1183840321267481e-27, -1122435026096556e-27, -9400849094049694e-28, -642330587214784e-27, -2382191739347918e-28], [2382191739347913e-28, 6423305872147834e-28, 9400849094049688e-28, 1122435026096556e-27, 1183840321267481e-27, 1122435026096556e-27, 9400849094049688e-28, 6423305872147841e-28, 2382191739347918e-28, 5456116108943413e-27, 4878985199565852e-27, 4240448995017367e-27, 3559909094758253e-27, 2858043359288075e-27, 2156177623817898e-27, 1475637723558782e-27, 8371015190102975e-28, 2599706096327376e-28, -5461314069809755e-27, -4921085770524055e-27, -4343405037091838e-27, -3732668368707687e-27, -3093523840190885e-27, -2430835727329465e-27, -1734679010007751e-27, -974825365660928e-27, -2797435120168326e-28, 0, 0, 0, 0, 0, 0, -2283748241799531e-28, -4037858874020686e-28, -2146547464825323e-28], [0.1316524975873958, 0.414213562373095, 0.7673269879789602, 1.091308501069271, 1.303225372841206, 1.56968557711749, 1.920982126971166, 2.414213562373094, 3.171594802363212, 4.510708503662055, 7.595754112725146, 22.90376554843115, 0.984807753012208, 0.6427876096865394, 0.3420201433256688, 0.9396926207859084, -0.1736481776669303, -0.7660444431189779, 0.8660254037844387, 0.5, -0.5144957554275265, -0.4717319685649723, -0.3133774542039019, -0.1819131996109812, -0.09457419252642064, -0.04096558288530405, -0.01419856857247115, -0.003699974673760037, 0.8574929257125442, 0.8817419973177052, 0.9496286491027329, 0.9833145924917901, 0.9955178160675857, 0.9991605581781475, 0.999899195244447, 0.9999931550702802], [0, 0, 0, 0, 0, 0, 2283748241799531e-28, 4037858874020686e-28, 2146547464825323e-28, 5461314069809755e-27, 4921085770524055e-27, 4343405037091838e-27, 3732668368707687e-27, 3093523840190885e-27, 2430835727329466e-27, 1734679010007751e-27, 974825365660928e-27, 2797435120168326e-28, -5456116108943413e-27, -4878985199565852e-27, -4240448995017367e-27, -3559909094758253e-27, -2858043359288075e-27, -2156177623817898e-27, -1475637723558782e-27, -8371015190102975e-28, -2599706096327376e-28, -2382191739347913e-28, -6423305872147834e-28, -9400849094049688e-28, -1122435026096556e-27, -1183840321267481e-27, -1122435026096556e-27, -9400849094049688e-28, -6423305872147841e-28, -2382191739347918e-28]], i3 = _3[r3.SHORT_TYPE], o3 = _3[r3.SHORT_TYPE], l3 = _3[r3.SHORT_TYPE], f2 = _3[r3.SHORT_TYPE], c2 = [0, 1, 16, 17, 8, 9, 24, 25, 4, 5, 20, 21, 12, 13, 28, 29, 2, 3, 18, 19, 10, 11, 26, 27, 6, 7, 22, 23, 14, 15, 30, 31];\n        function h3(a4, s4, n4) {\n          for (var r4, _4, i4, o4 = 10, l4 = s4 + 238 - 14 - 286, f3 = -15; f3 < 0; f3++) {\n            var c3, h4, u4;\n            c3 = e8[o4 + -10], h4 = a4[l4 + -224] * c3, u4 = a4[s4 + 224] * c3, c3 = e8[o4 + -9], h4 += a4[l4 + -160] * c3, u4 += a4[s4 + 160] * c3, c3 = e8[o4 + -8], h4 += a4[l4 + -96] * c3, u4 += a4[s4 + 96] * c3, c3 = e8[o4 + -7], h4 += a4[l4 + -32] * c3, u4 += a4[s4 + 32] * c3, c3 = e8[o4 + -6], h4 += a4[l4 + 32] * c3, u4 += a4[s4 + -32] * c3, c3 = e8[o4 + -5], h4 += a4[l4 + 96] * c3, u4 += a4[s4 + -96] * c3, c3 = e8[o4 + -4], h4 += a4[l4 + 160] * c3, u4 += a4[s4 + -160] * c3, c3 = e8[o4 + -3], h4 += a4[l4 + 224] * c3, u4 += a4[s4 + -224] * c3, c3 = e8[o4 + -2], h4 += a4[s4 + -256] * c3, u4 -= a4[l4 + 256] * c3, c3 = e8[o4 + -1], h4 += a4[s4 + -192] * c3, u4 -= a4[l4 + 192] * c3, c3 = e8[o4 + 0], h4 += a4[s4 + -128] * c3, u4 -= a4[l4 + 128] * c3, c3 = e8[o4 + 1], h4 += a4[s4 + -64] * c3, u4 -= a4[l4 + 64] * c3, c3 = e8[o4 + 2], h4 += a4[s4 + 0] * c3, u4 -= a4[l4 + 0] * c3, c3 = e8[o4 + 3], h4 += a4[s4 + 64] * c3, u4 -= a4[l4 + -64] * c3, c3 = e8[o4 + 4], h4 += a4[s4 + 128] * c3, u4 -= a4[l4 + -128] * c3, c3 = e8[o4 + 5], h4 += a4[s4 + 192] * c3, c3 = (u4 -= a4[l4 + -192] * c3) - (h4 *= e8[o4 + 6]), n4[30 + 2 * f3] = u4 + h4, n4[31 + 2 * f3] = e8[o4 + 7] * c3, o4 += 18, s4--, l4++;\n          }\n          u4 = a4[s4 + -16] * e8[o4 + -10], h4 = a4[s4 + -32] * e8[o4 + -2], u4 += (a4[s4 + -48] - a4[s4 + 16]) * e8[o4 + -9], h4 += a4[s4 + -96] * e8[o4 + -1], u4 += (a4[s4 + -80] + a4[s4 + 48]) * e8[o4 + -8], h4 += a4[s4 + -160] * e8[o4 + 0], u4 += (a4[s4 + -112] - a4[s4 + 80]) * e8[o4 + -7], h4 += a4[s4 + -224] * e8[o4 + 1], u4 += (a4[s4 + -144] + a4[s4 + 112]) * e8[o4 + -6], h4 -= a4[s4 + 32] * e8[o4 + 2], u4 += (a4[s4 + -176] - a4[s4 + 144]) * e8[o4 + -5], h4 -= a4[s4 + 96] * e8[o4 + 3], u4 += (a4[s4 + -208] + a4[s4 + 176]) * e8[o4 + -4], h4 -= a4[s4 + 160] * e8[o4 + 4], u4 += (a4[s4 + -240] - a4[s4 + 208]) * e8[o4 + -3], r4 = (h4 -= a4[s4 + 224]) - u4, _4 = h4 + u4, u4 = n4[14], h4 = n4[15] - u4, n4[31] = _4 + u4, n4[30] = r4 + h4, n4[15] = r4 - h4, n4[14] = _4 - u4, i4 = n4[28] - n4[0], n4[0] += n4[28], n4[28] = i4 * e8[o4 + -36 + 7], i4 = n4[29] - n4[1], n4[1] += n4[29], n4[29] = i4 * e8[o4 + -36 + 7], i4 = n4[26] - n4[2], n4[2] += n4[26], n4[26] = i4 * e8[o4 + -72 + 7], i4 = n4[27] - n4[3], n4[3] += n4[27], n4[27] = i4 * e8[o4 + -72 + 7], i4 = n4[24] - n4[4], n4[4] += n4[24], n4[24] = i4 * e8[o4 + -108 + 7], i4 = n4[25] - n4[5], n4[5] += n4[25], n4[25] = i4 * e8[o4 + -108 + 7], i4 = n4[22] - n4[6], n4[6] += n4[22], n4[22] = i4 * t3.SQRT2, i4 = n4[23] - n4[7], n4[7] += n4[23], n4[23] = i4 * t3.SQRT2 - n4[7], n4[7] -= n4[6], n4[22] -= n4[7], n4[23] -= n4[22], i4 = n4[6], n4[6] = n4[31] - i4, n4[31] = n4[31] + i4, i4 = n4[7], n4[7] = n4[30] - i4, n4[30] = n4[30] + i4, i4 = n4[22], n4[22] = n4[15] - i4, n4[15] = n4[15] + i4, i4 = n4[23], n4[23] = n4[14] - i4, n4[14] = n4[14] + i4, i4 = n4[20] - n4[8], n4[8] += n4[20], n4[20] = i4 * e8[o4 + -180 + 7], i4 = n4[21] - n4[9], n4[9] += n4[21], n4[21] = i4 * e8[o4 + -180 + 7], i4 = n4[18] - n4[10], n4[10] += n4[18], n4[18] = i4 * e8[o4 + -216 + 7], i4 = n4[19] - n4[11], n4[11] += n4[19], n4[19] = i4 * e8[o4 + -216 + 7], i4 = n4[16] - n4[12], n4[12] += n4[16], n4[16] = i4 * e8[o4 + -252 + 7], i4 = n4[17] - n4[13], n4[13] += n4[17], n4[17] = i4 * e8[o4 + -252 + 7], i4 = -n4[20] + n4[24], n4[20] += n4[24], n4[24] = i4 * e8[o4 + -216 + 7], i4 = -n4[21] + n4[25], n4[21] += n4[25], n4[25] = i4 * e8[o4 + -216 + 7], i4 = n4[4] - n4[8], n4[4] += n4[8], n4[8] = i4 * e8[o4 + -216 + 7], i4 = n4[5] - n4[9], n4[5] += n4[9], n4[9] = i4 * e8[o4 + -216 + 7], i4 = n4[0] - n4[12], n4[0] += n4[12], n4[12] = i4 * e8[o4 + -72 + 7], i4 = n4[1] - n4[13], n4[1] += n4[13], n4[13] = i4 * e8[o4 + -72 + 7], i4 = n4[16] - n4[28], n4[16] += n4[28], n4[28] = i4 * e8[o4 + -72 + 7], i4 = -n4[17] + n4[29], n4[17] += n4[29], n4[29] = i4 * e8[o4 + -72 + 7], i4 = t3.SQRT2 * (n4[2] - n4[10]), n4[2] += n4[10], n4[10] = i4, i4 = t3.SQRT2 * (n4[3] - n4[11]), n4[3] += n4[11], n4[11] = i4, i4 = t3.SQRT2 * (-n4[18] + n4[26]), n4[18] += n4[26], n4[26] = i4 - n4[18], i4 = t3.SQRT2 * (-n4[19] + n4[27]), n4[19] += n4[27], n4[27] = i4 - n4[19], i4 = n4[2], n4[19] -= n4[3], n4[3] -= i4, n4[2] = n4[31] - i4, n4[31] += i4, i4 = n4[3], n4[11] -= n4[19], n4[18] -= i4, n4[3] = n4[30] - i4, n4[30] += i4, i4 = n4[18], n4[27] -= n4[11], n4[19] -= i4, n4[18] = n4[15] - i4, n4[15] += i4, i4 = n4[19], n4[10] -= i4, n4[19] = n4[14] - i4, n4[14] += i4, i4 = n4[10], n4[11] -= i4, n4[10] = n4[23] - i4, n4[23] += i4, i4 = n4[11], n4[26] -= i4, n4[11] = n4[22] - i4, n4[22] += i4, i4 = n4[26], n4[27] -= i4, n4[26] = n4[7] - i4, n4[7] += i4, i4 = n4[27], n4[27] = n4[6] - i4, n4[6] += i4, i4 = t3.SQRT2 * (n4[0] - n4[4]), n4[0] += n4[4], n4[4] = i4, i4 = t3.SQRT2 * (n4[1] - n4[5]), n4[1] += n4[5], n4[5] = i4, i4 = t3.SQRT2 * (n4[16] - n4[20]), n4[16] += n4[20], n4[20] = i4, i4 = t3.SQRT2 * (n4[17] - n4[21]), n4[17] += n4[21], n4[21] = i4, i4 = -t3.SQRT2 * (n4[8] - n4[12]), n4[8] += n4[12], n4[12] = i4 - n4[8], i4 = -t3.SQRT2 * (n4[9] - n4[13]), n4[9] += n4[13], n4[13] = i4 - n4[9], i4 = -t3.SQRT2 * (n4[25] - n4[29]), n4[25] += n4[29], n4[29] = i4 - n4[25], i4 = -t3.SQRT2 * (n4[24] + n4[28]), n4[24] -= n4[28], n4[28] = i4 - n4[24], i4 = n4[24] - n4[16], n4[24] = i4, i4 = n4[20] - i4, n4[20] = i4, i4 = n4[28] - i4, n4[28] = i4, i4 = n4[25] - n4[17], n4[25] = i4, i4 = n4[21] - i4, n4[21] = i4, i4 = n4[29] - i4, n4[29] = i4, i4 = n4[17] - n4[1], n4[17] = i4, i4 = n4[9] - i4, n4[9] = i4, i4 = n4[25] - i4, n4[25] = i4, i4 = n4[5] - i4, n4[5] = i4, i4 = n4[21] - i4, n4[21] = i4, i4 = n4[13] - i4, n4[13] = i4, i4 = n4[29] - i4, n4[29] = i4, i4 = n4[1] - n4[0], n4[1] = i4, i4 = n4[16] - i4, n4[16] = i4, i4 = n4[17] - i4, n4[17] = i4, i4 = n4[8] - i4, n4[8] = i4, i4 = n4[9] - i4, n4[9] = i4, i4 = n4[24] - i4, n4[24] = i4, i4 = n4[25] - i4, n4[25] = i4, i4 = n4[4] - i4, n4[4] = i4, i4 = n4[5] - i4, n4[5] = i4, i4 = n4[20] - i4, n4[20] = i4, i4 = n4[21] - i4, n4[21] = i4, i4 = n4[12] - i4, n4[12] = i4, i4 = n4[13] - i4, n4[13] = i4, i4 = n4[28] - i4, n4[28] = i4, i4 = n4[29] - i4, n4[29] = i4, i4 = n4[0], n4[0] += n4[31], n4[31] -= i4, i4 = n4[1], n4[1] += n4[30], n4[30] -= i4, i4 = n4[16], n4[16] += n4[15], n4[15] -= i4, i4 = n4[17], n4[17] += n4[14], n4[14] -= i4, i4 = n4[8], n4[8] += n4[23], n4[23] -= i4, i4 = n4[9], n4[9] += n4[22], n4[22] -= i4, i4 = n4[24], n4[24] += n4[7], n4[7] -= i4, i4 = n4[25], n4[25] += n4[6], n4[6] -= i4, i4 = n4[4], n4[4] += n4[27], n4[27] -= i4, i4 = n4[5], n4[5] += n4[26], n4[26] -= i4, i4 = n4[20], n4[20] += n4[11], n4[11] -= i4, i4 = n4[21], n4[21] += n4[10], n4[10] -= i4, i4 = n4[12], n4[12] += n4[19], n4[19] -= i4, i4 = n4[13], n4[13] += n4[18], n4[18] -= i4, i4 = n4[28], n4[28] += n4[3], n4[3] -= i4, i4 = n4[29], n4[29] += n4[2], n4[2] -= i4;\n        }\n        function u3(e9, a4) {\n          for (var t4 = 0; t4 < 3; t4++) {\n            var s4, n4, i4, o4, l4, f3;\n            n4 = (o4 = e9[a4 + 6] * _3[r3.SHORT_TYPE][0] - e9[a4 + 15]) + (s4 = e9[a4 + 0] * _3[r3.SHORT_TYPE][2] - e9[a4 + 9]), i4 = o4 - s4, l4 = (o4 = e9[a4 + 15] * _3[r3.SHORT_TYPE][0] + e9[a4 + 6]) + (s4 = e9[a4 + 9] * _3[r3.SHORT_TYPE][2] + e9[a4 + 0]), f3 = -o4 + s4, s4 = 2069978111953089e-26 * (e9[a4 + 3] * _3[r3.SHORT_TYPE][1] - e9[a4 + 12]), o4 = 2069978111953089e-26 * (e9[a4 + 12] * _3[r3.SHORT_TYPE][1] + e9[a4 + 3]), e9[a4 + 0] = 190752519173728e-25 * n4 + s4, e9[a4 + 15] = 190752519173728e-25 * -l4 + o4, i4 = 0.8660254037844387 * i4 * 1907525191737281e-26, l4 = 0.5 * l4 * 1907525191737281e-26 + o4, e9[a4 + 3] = i4 - l4, e9[a4 + 6] = i4 + l4, n4 = 0.5 * n4 * 1907525191737281e-26 - s4, f3 = 0.8660254037844387 * f3 * 1907525191737281e-26, e9[a4 + 9] = n4 + f3, e9[a4 + 12] = n4 - f3, a4++;\n          }\n        }\n        this.mdct_sub48 = function(e9, t4, b2) {\n          for (var m2, p2, v2, d3, g3, S3, R2, A2, M3, B3, w3, T2, E2, k2, y2, x2, P2, I2, H2, V2, L2, N2 = t4, O2 = 286, X2 = 0; X2 < e9.channels_out; X2++) {\n            for (var D2 = 0; D2 < e9.mode_gr; D2++) {\n              for (var Y2, q2 = e9.l3_side.tt[D2][X2], F2 = q2.xr, C2 = 0, j2 = e9.sb_sample[X2][1 - D2], G2 = 0, z2 = 0; z2 < 9; z2++) for (h3(N2, O2, j2[G2]), h3(N2, O2 + 32, j2[G2 + 1]), G2 += 2, O2 += 64, Y2 = 1; Y2 < 32; Y2 += 2) j2[G2 - 1][Y2] *= -1;\n              for (Y2 = 0; Y2 < 32; Y2++, C2 += 18) {\n                var K2 = q2.block_type, Z2 = e9.sb_sample[X2][D2], U2 = e9.sb_sample[X2][1 - D2];\n                if (0 != q2.mixed_block_flag && Y2 < 2 && (K2 = 0), e9.amp_filter[Y2] < 1e-12) s3.fill(F2, C2 + 0, C2 + 18, 0);\n                else {\n                  if (e9.amp_filter[Y2] < 1) for (z2 = 0; z2 < 18; z2++) U2[z2][c2[Y2]] *= e9.amp_filter[Y2];\n                  if (K2 == r3.SHORT_TYPE) {\n                    for (z2 = -3; z2 < 0; z2++) {\n                      var Q2 = _3[r3.SHORT_TYPE][z2 + 3];\n                      F2[C2 + 3 * z2 + 9] = Z2[9 + z2][c2[Y2]] * Q2 - Z2[8 - z2][c2[Y2]], F2[C2 + 3 * z2 + 18] = Z2[14 - z2][c2[Y2]] * Q2 + Z2[15 + z2][c2[Y2]], F2[C2 + 3 * z2 + 10] = Z2[15 + z2][c2[Y2]] * Q2 - Z2[14 - z2][c2[Y2]], F2[C2 + 3 * z2 + 19] = U2[2 - z2][c2[Y2]] * Q2 + U2[3 + z2][c2[Y2]], F2[C2 + 3 * z2 + 11] = U2[3 + z2][c2[Y2]] * Q2 - U2[2 - z2][c2[Y2]], F2[C2 + 3 * z2 + 20] = U2[8 - z2][c2[Y2]] * Q2 + U2[9 + z2][c2[Y2]];\n                    }\n                    u3(F2, C2);\n                  } else {\n                    var W2 = n3(18);\n                    for (z2 = -9; z2 < 0; z2++) {\n                      var J2, $2;\n                      J2 = _3[K2][z2 + 27] * U2[z2 + 9][c2[Y2]] + _3[K2][z2 + 36] * U2[8 - z2][c2[Y2]], $2 = _3[K2][z2 + 9] * Z2[z2 + 9][c2[Y2]] - _3[K2][z2 + 18] * Z2[8 - z2][c2[Y2]], W2[z2 + 9] = J2 - $2 * i3[3 + z2 + 9], W2[z2 + 18] = J2 * i3[3 + z2 + 9] + $2;\n                    }\n                    m2 = F2, p2 = C2, d3 = void 0, g3 = void 0, S3 = void 0, R2 = void 0, A2 = void 0, M3 = void 0, B3 = void 0, w3 = void 0, T2 = void 0, E2 = void 0, k2 = void 0, y2 = void 0, x2 = void 0, P2 = void 0, I2 = void 0, H2 = void 0, V2 = void 0, L2 = void 0, S3 = (v2 = W2)[17] - v2[9], A2 = v2[15] - v2[11], M3 = v2[14] - v2[12], B3 = v2[0] + v2[8], w3 = v2[1] + v2[7], T2 = v2[2] + v2[6], E2 = v2[3] + v2[5], m2[p2 + 17] = B3 + T2 - E2 - (w3 - v2[4]), g3 = (B3 + T2 - E2) * o3[19] + (w3 - v2[4]), d3 = (S3 - A2 - M3) * o3[18], m2[p2 + 5] = d3 + g3, m2[p2 + 6] = d3 - g3, R2 = (v2[16] - v2[10]) * o3[18], w3 = w3 * o3[19] + v2[4], d3 = S3 * o3[12] + R2 + A2 * o3[13] + M3 * o3[14], g3 = -B3 * o3[16] + w3 - T2 * o3[17] + E2 * o3[15], m2[p2 + 1] = d3 + g3, m2[p2 + 2] = d3 - g3, d3 = S3 * o3[13] - R2 - A2 * o3[14] + M3 * o3[12], g3 = -B3 * o3[17] + w3 - T2 * o3[15] + E2 * o3[16], m2[p2 + 9] = d3 + g3, m2[p2 + 10] = d3 - g3, d3 = S3 * o3[14] - R2 + A2 * o3[12] - M3 * o3[13], g3 = B3 * o3[15] - w3 + T2 * o3[16] - E2 * o3[17], m2[p2 + 13] = d3 + g3, m2[p2 + 14] = d3 - g3, k2 = v2[8] - v2[0], x2 = v2[6] - v2[2], P2 = v2[5] - v2[3], I2 = v2[17] + v2[9], H2 = v2[16] + v2[10], V2 = v2[15] + v2[11], L2 = v2[14] + v2[12], m2[p2 + 0] = I2 + V2 + L2 + (H2 + v2[13]), d3 = (I2 + V2 + L2) * o3[19] - (H2 + v2[13]), g3 = (k2 - x2 + P2) * o3[18], m2[p2 + 11] = d3 + g3, m2[p2 + 12] = d3 - g3, y2 = (v2[7] - v2[1]) * o3[18], H2 = v2[13] - H2 * o3[19], d3 = I2 * o3[15] - H2 + V2 * o3[16] + L2 * o3[17], g3 = k2 * o3[14] + y2 + x2 * o3[12] + P2 * o3[13], m2[p2 + 3] = d3 + g3, m2[p2 + 4] = d3 - g3, d3 = -I2 * o3[17] + H2 - V2 * o3[15] - L2 * o3[16], g3 = k2 * o3[13] + y2 - x2 * o3[14] - P2 * o3[12], m2[p2 + 7] = d3 + g3, m2[p2 + 8] = d3 - g3, d3 = -I2 * o3[16] + H2 - V2 * o3[17] - L2 * o3[15], g3 = k2 * o3[12] - y2 + x2 * o3[13] - P2 * o3[14], m2[p2 + 15] = d3 + g3, m2[p2 + 16] = d3 - g3;\n                  }\n                }\n                if (K2 != r3.SHORT_TYPE && 0 != Y2) for (z2 = 7; z2 >= 0; --z2) {\n                  var ee2, ae2;\n                  ee2 = F2[C2 + z2] * l3[20 + z2] + F2[C2 + -1 - z2] * f2[28 + z2], ae2 = F2[C2 + z2] * f2[28 + z2] - F2[C2 + -1 - z2] * l3[20 + z2], F2[C2 + -1 - z2] = ee2, F2[C2 + z2] = ae2;\n                }\n              }\n            }\n            if (N2 = b2, O2 = 286, 1 == e9.mode_gr) for (var te2 = 0; te2 < 18; te2++) a3.arraycopy(e9.sb_sample[X2][1][te2], 0, e9.sb_sample[X2][0][te2], 0, 32);\n          }\n        };\n      };\n    }(), l2 = function() {\n      if (m) return b;\n      m = 1;\n      var e7 = v();\n      return b = function() {\n        this.thm = new e7(), this.en = new e7();\n      };\n    }(), h2 = R, u2 = o2.FFTOFFSET, d2 = o2.MPG_MD_MS_LR, g2 = null;\n    this.psy = null;\n    var S2 = null, M2 = null, B2 = null;\n    this.setModules = function(e7, a3, t3, s3) {\n      g2 = e7, this.psy = a3, S2 = a3, M2 = s3, B2 = t3;\n    };\n    var w2 = new e6();\n    this.lame_encode_mp3_frame = function(e7, f2, c2, b2, m2, p2) {\n      var v2, R2 = s2([2, 2]);\n      R2[0][0] = new l2(), R2[0][1] = new l2(), R2[1][0] = new l2(), R2[1][1] = new l2();\n      var A2, T2 = s2([2, 2]);\n      T2[0][0] = new l2(), T2[0][1] = new l2(), T2[1][0] = new l2(), T2[1][1] = new l2();\n      var E2, k2, y2, x2 = [null, null], P2 = e7.internal_flags, I2 = r2([2, 4]), H2 = [0.5, 0.5], V2 = [[0, 0], [0, 0]], L2 = [[0, 0], [0, 0]];\n      if (x2[0] = f2, x2[1] = c2, 0 == P2.lame_encode_frame_init && function(e8, a3) {\n        var t3, s3, r3 = e8.internal_flags;\n        if (0 == r3.lame_encode_frame_init) {\n          var _3, l3, f3 = n2(2014), c3 = n2(2014);\n          for (r3.lame_encode_frame_init = 1, _3 = 0, l3 = 0; _3 < 286 + 576 * (1 + r3.mode_gr); ++_3) _3 < 576 * r3.mode_gr ? (f3[_3] = 0, 2 == r3.channels_out && (c3[_3] = 0)) : (f3[_3] = a3[0][l3], 2 == r3.channels_out && (c3[_3] = a3[1][l3]), ++l3);\n          for (s3 = 0; s3 < r3.mode_gr; s3++) for (t3 = 0; t3 < r3.channels_out; t3++) r3.l3_side.tt[s3][t3].block_type = o2.SHORT_TYPE;\n          w2.mdct_sub48(r3, f3, c3), i2(576 >= o2.FFTOFFSET), i2(r3.mf_size >= o2.BLKSIZE + e8.framesize - o2.FFTOFFSET), i2(r3.mf_size >= 512 + e8.framesize - 32);\n        }\n      }(e7, x2), P2.padding = 0, (P2.slot_lag -= P2.frac_SpF) < 0 && (P2.slot_lag += e7.out_samplerate, P2.padding = 1), 0 != P2.psymodel) {\n        var N2 = [null, null], O2 = 0, X2 = _2(2);\n        for (y2 = 0; y2 < P2.mode_gr; y2++) {\n          for (k2 = 0; k2 < P2.channels_out; k2++) N2[k2] = x2[k2], O2 = 576 + 576 * y2 - o2.FFTOFFSET;\n          if (0 != (e7.VBR == t2.vbr_mtrh || e7.VBR == t2.vbr_mt ? S2.L3psycho_anal_vbr(e7, N2, O2, y2, R2, T2, V2[y2], L2[y2], I2[y2], X2) : S2.L3psycho_anal_ns(e7, N2, O2, y2, R2, T2, V2[y2], L2[y2], I2[y2], X2))) return -4;\n          for (e7.mode == h2.JOINT_STEREO && (H2[y2] = I2[y2][2] + I2[y2][3], H2[y2] > 0 && (H2[y2] = I2[y2][3] / H2[y2])), k2 = 0; k2 < P2.channels_out; k2++) {\n            var D2 = P2.l3_side.tt[y2][k2];\n            D2.block_type = X2[k2], D2.mixed_block_flag = 0;\n          }\n        }\n      } else for (y2 = 0; y2 < P2.mode_gr; y2++) for (k2 = 0; k2 < P2.channels_out; k2++) P2.l3_side.tt[y2][k2].block_type = o2.NORM_TYPE, P2.l3_side.tt[y2][k2].mixed_block_flag = 0, L2[y2][k2] = V2[y2][k2] = 700;\n      if (function(e8) {\n        var a3, t3;\n        if (0 != e8.ATH.useAdjust) if (t3 = e8.loudness_sq[0][0], a3 = e8.loudness_sq[1][0], 2 == e8.channels_out ? (t3 += e8.loudness_sq[0][1], a3 += e8.loudness_sq[1][1]) : (t3 += t3, a3 += a3), 2 == e8.mode_gr && (t3 = Math.max(t3, a3)), t3 *= 0.5, (t3 *= e8.ATH.aaSensitivityP) > 0.03125) e8.ATH.adjust >= 1 ? e8.ATH.adjust = 1 : e8.ATH.adjust < e8.ATH.adjustLimit && (e8.ATH.adjust = e8.ATH.adjustLimit), e8.ATH.adjustLimit = 1;\n        else {\n          var s3 = 31.98 * t3 + 625e-6;\n          e8.ATH.adjust >= s3 ? (e8.ATH.adjust *= 0.075 * s3 + 0.925, e8.ATH.adjust < s3 && (e8.ATH.adjust = s3)) : e8.ATH.adjustLimit >= s3 ? e8.ATH.adjust = s3 : e8.ATH.adjust < e8.ATH.adjustLimit && (e8.ATH.adjust = e8.ATH.adjustLimit), e8.ATH.adjustLimit = s3;\n        }\n        else e8.ATH.adjust = 1;\n      }(P2), w2.mdct_sub48(P2, x2[0], x2[1]), P2.mode_ext = o2.MPG_MD_LR_LR, e7.force_ms) P2.mode_ext = o2.MPG_MD_MS_LR;\n      else if (e7.mode == h2.JOINT_STEREO) {\n        var Y2 = 0, q2 = 0;\n        for (y2 = 0; y2 < P2.mode_gr; y2++) for (k2 = 0; k2 < P2.channels_out; k2++) Y2 += L2[y2][k2], q2 += V2[y2][k2];\n        if (Y2 <= 1 * q2) {\n          var F2 = P2.l3_side.tt[0], C2 = P2.l3_side.tt[P2.mode_gr - 1];\n          F2[0].block_type == F2[1].block_type && C2[0].block_type == C2[1].block_type && (P2.mode_ext = o2.MPG_MD_MS_LR);\n        }\n      }\n      if (P2.mode_ext == d2 ? (A2 = T2, E2 = L2) : (A2 = R2, E2 = V2), e7.analysis && null != P2.pinfo) for (y2 = 0; y2 < P2.mode_gr; y2++) for (k2 = 0; k2 < P2.channels_out; k2++) P2.pinfo.ms_ratio[y2] = P2.ms_ratio[y2], P2.pinfo.ms_ener_ratio[y2] = H2[y2], P2.pinfo.blocktype[y2][k2] = P2.l3_side.tt[y2][k2].block_type, P2.pinfo.pe[y2][k2] = E2[y2][k2], a2.arraycopy(P2.l3_side.tt[y2][k2].xr, 0, P2.pinfo.xr[y2][k2], 0, 576), P2.mode_ext == d2 && (P2.pinfo.ers[y2][k2] = P2.pinfo.ers[y2][k2 + 2], a2.arraycopy(P2.pinfo.energy[y2][k2 + 2], 0, P2.pinfo.energy[y2][k2], 0, P2.pinfo.energy[y2][k2].length));\n      if (e7.VBR == t2.vbr_off || e7.VBR == t2.vbr_abr) {\n        var j2, G2;\n        for (j2 = 0; j2 < 18; j2++) P2.nsPsy.pefirbuf[j2] = P2.nsPsy.pefirbuf[j2 + 1];\n        for (G2 = 0, y2 = 0; y2 < P2.mode_gr; y2++) for (k2 = 0; k2 < P2.channels_out; k2++) G2 += E2[y2][k2];\n        for (P2.nsPsy.pefirbuf[18] = G2, G2 = P2.nsPsy.pefirbuf[9], j2 = 0; j2 < 9; j2++) G2 += (P2.nsPsy.pefirbuf[j2] + P2.nsPsy.pefirbuf[18 - j2]) * o2.fircoef[j2];\n        for (G2 = 3350 * P2.mode_gr * P2.channels_out / G2, y2 = 0; y2 < P2.mode_gr; y2++) for (k2 = 0; k2 < P2.channels_out; k2++) E2[y2][k2] *= G2;\n      }\n      if (P2.iteration_loop.iteration_loop(e7, E2, H2, A2), g2.format_bitstream(e7), v2 = g2.copy_buffer(P2, b2, m2, p2, 1), e7.bWriteVbrTag && M2.addVbrFrame(e7), e7.analysis && null != P2.pinfo) {\n        for (k2 = 0; k2 < P2.channels_out; k2++) {\n          var z2;\n          for (z2 = 0; z2 < u2; z2++) P2.pinfo.pcmdata[k2][z2] = P2.pinfo.pcmdata[k2][z2 + e7.framesize];\n          for (z2 = u2; z2 < 1600; z2++) P2.pinfo.pcmdata[k2][z2] = x2[k2][z2 - u2];\n        }\n        B2.set_frame_pinfo(e7, A2);\n      }\n      return function(e8) {\n        var a3, t3;\n        for (i2(0 <= e8.bitrate_index && e8.bitrate_index < 16), i2(0 <= e8.mode_ext && e8.mode_ext < 4), e8.bitrate_stereoMode_Hist[e8.bitrate_index][4]++, e8.bitrate_stereoMode_Hist[15][4]++, 2 == e8.channels_out && (e8.bitrate_stereoMode_Hist[e8.bitrate_index][e8.mode_ext]++, e8.bitrate_stereoMode_Hist[15][e8.mode_ext]++), a3 = 0; a3 < e8.mode_gr; ++a3) for (t3 = 0; t3 < e8.channels_out; ++t3) {\n          var s3 = 0 | e8.l3_side.tt[a3][t3].block_type;\n          0 != e8.l3_side.tt[a3][t3].mixed_block_flag && (s3 = 4), e8.bitrate_blockType_Hist[e8.bitrate_index][s3]++, e8.bitrate_blockType_Hist[e8.bitrate_index][5]++, e8.bitrate_blockType_Hist[15][s3]++, e8.bitrate_blockType_Hist[15][5]++;\n        }\n      }(P2), v2;\n    };\n  }\n  return o2.ENCDELAY = 576, o2.POSTDELAY = 1152, o2.MDCTDELAY = 48, o2.FFTOFFSET = 224 + o2.MDCTDELAY, o2.DECDELAY = 528, o2.SBLIMIT = 32, o2.CBANDS = 64, o2.SBPSY_l = 21, o2.SBPSY_s = 12, o2.SBMAX_l = 22, o2.SBMAX_s = 13, o2.PSFB21 = 6, o2.PSFB12 = 6, o2.BLKSIZE = 1024, o2.HBLKSIZE = o2.BLKSIZE / 2 + 1, o2.BLKSIZE_s = 256, o2.HBLKSIZE_s = o2.BLKSIZE_s / 2 + 1, o2.NORM_TYPE = 0, o2.START_TYPE = 1, o2.SHORT_TYPE = 2, o2.STOP_TYPE = 3, o2.MPG_MD_LR_LR = 0, o2.MPG_MD_LR_I = 1, o2.MPG_MD_MS_LR = 2, o2.MPG_MD_MS_I = 3, o2.fircoef = [-0.1039435, -0.1892065, 5 * -0.0432472, -0.155915, 3898045e-23, 0.0467745 * 5, 0.50455, 0.756825, 0.187098 * 5], g = o2;\n}\nvar M = p, B = M.Util, w = M.new_float, T = A();\nvar E = function() {\n  var e5 = w(T.BLKSIZE), a2 = w(T.BLKSIZE_s / 2), t2 = [0.9238795325112867, 0.3826834323650898, 0.9951847266721969, 0.0980171403295606, 0.9996988186962042, 0.02454122852291229, 0.9999811752826011, 0.006135884649154475];\n  function s2(e6, a3, s3) {\n    var n3, r2, _2, i2 = 0, o2 = a3 + (s3 <<= 1);\n    n3 = 4;\n    do {\n      var l2, f2, c2, h2, u2, b2, m2;\n      m2 = n3 >> 1, b2 = (u2 = n3 << 1) + (h2 = n3), n3 = u2 << 1, _2 = (r2 = a3) + m2;\n      do {\n        A2 = e6[r2 + 0] - e6[r2 + h2], R2 = e6[r2 + 0] + e6[r2 + h2], E2 = e6[r2 + u2] - e6[r2 + b2], w2 = e6[r2 + u2] + e6[r2 + b2], e6[r2 + u2] = R2 - w2, e6[r2 + 0] = R2 + w2, e6[r2 + b2] = A2 - E2, e6[r2 + h2] = A2 + E2, A2 = e6[_2 + 0] - e6[_2 + h2], R2 = e6[_2 + 0] + e6[_2 + h2], E2 = B.SQRT2 * e6[_2 + b2], w2 = B.SQRT2 * e6[_2 + u2], e6[_2 + u2] = R2 - w2, e6[_2 + 0] = R2 + w2, e6[_2 + b2] = A2 - E2, e6[_2 + h2] = A2 + E2, _2 += n3, r2 += n3;\n      } while (r2 < o2);\n      for (f2 = t2[i2 + 0], l2 = t2[i2 + 1], c2 = 1; c2 < m2; c2++) {\n        var p2, v2;\n        p2 = 1 - 2 * l2 * l2, v2 = 2 * l2 * f2, r2 = a3 + c2, _2 = a3 + h2 - c2;\n        do {\n          var d2, g2, S2, R2, A2, M2, w2, T2, E2, k2;\n          g2 = v2 * e6[r2 + h2] - p2 * e6[_2 + h2], d2 = p2 * e6[r2 + h2] + v2 * e6[_2 + h2], A2 = e6[r2 + 0] - d2, R2 = e6[r2 + 0] + d2, M2 = e6[_2 + 0] - g2, S2 = e6[_2 + 0] + g2, g2 = v2 * e6[r2 + b2] - p2 * e6[_2 + b2], d2 = p2 * e6[r2 + b2] + v2 * e6[_2 + b2], E2 = e6[r2 + u2] - d2, w2 = e6[r2 + u2] + d2, k2 = e6[_2 + u2] - g2, T2 = e6[_2 + u2] + g2, g2 = l2 * w2 - f2 * k2, d2 = f2 * w2 + l2 * k2, e6[r2 + u2] = R2 - d2, e6[r2 + 0] = R2 + d2, e6[_2 + b2] = M2 - g2, e6[_2 + h2] = M2 + g2, g2 = f2 * T2 - l2 * E2, d2 = l2 * T2 + f2 * E2, e6[_2 + u2] = S2 - d2, e6[_2 + 0] = S2 + d2, e6[r2 + b2] = A2 - g2, e6[r2 + h2] = A2 + g2, _2 += n3, r2 += n3;\n        } while (r2 < o2);\n        f2 = (p2 = f2) * t2[i2 + 0] - l2 * t2[i2 + 1], l2 = p2 * t2[i2 + 1] + l2 * t2[i2 + 0];\n      }\n      i2 += 2;\n    } while (n3 < s3);\n  }\n  var n2 = [0, 128, 64, 192, 32, 160, 96, 224, 16, 144, 80, 208, 48, 176, 112, 240, 8, 136, 72, 200, 40, 168, 104, 232, 24, 152, 88, 216, 56, 184, 120, 248, 4, 132, 68, 196, 36, 164, 100, 228, 20, 148, 84, 212, 52, 180, 116, 244, 12, 140, 76, 204, 44, 172, 108, 236, 28, 156, 92, 220, 60, 188, 124, 252, 2, 130, 66, 194, 34, 162, 98, 226, 18, 146, 82, 210, 50, 178, 114, 242, 10, 138, 74, 202, 42, 170, 106, 234, 26, 154, 90, 218, 58, 186, 122, 250, 6, 134, 70, 198, 38, 166, 102, 230, 22, 150, 86, 214, 54, 182, 118, 246, 14, 142, 78, 206, 46, 174, 110, 238, 30, 158, 94, 222, 62, 190, 126, 254];\n  this.fft_short = function(e6, t3, r2, _2, i2) {\n    for (var o2 = 0; o2 < 3; o2++) {\n      var l2 = T.BLKSIZE_s / 2, f2 = 65535 & 192 * (o2 + 1), c2 = T.BLKSIZE_s / 8 - 1;\n      do {\n        var h2, u2, b2, m2, p2, v2 = 255 & n2[c2 << 2];\n        u2 = (h2 = a2[v2] * _2[r2][i2 + v2 + f2]) - (p2 = a2[127 - v2] * _2[r2][i2 + v2 + f2 + 128]), h2 += p2, m2 = (b2 = a2[v2 + 64] * _2[r2][i2 + v2 + f2 + 64]) - (p2 = a2[63 - v2] * _2[r2][i2 + v2 + f2 + 192]), b2 += p2, l2 -= 4, t3[o2][l2 + 0] = h2 + b2, t3[o2][l2 + 2] = h2 - b2, t3[o2][l2 + 1] = u2 + m2, t3[o2][l2 + 3] = u2 - m2, u2 = (h2 = a2[v2 + 1] * _2[r2][i2 + v2 + f2 + 1]) - (p2 = a2[126 - v2] * _2[r2][i2 + v2 + f2 + 129]), h2 += p2, m2 = (b2 = a2[v2 + 65] * _2[r2][i2 + v2 + f2 + 65]) - (p2 = a2[62 - v2] * _2[r2][i2 + v2 + f2 + 193]), b2 += p2, t3[o2][l2 + T.BLKSIZE_s / 2 + 0] = h2 + b2, t3[o2][l2 + T.BLKSIZE_s / 2 + 2] = h2 - b2, t3[o2][l2 + T.BLKSIZE_s / 2 + 1] = u2 + m2, t3[o2][l2 + T.BLKSIZE_s / 2 + 3] = u2 - m2;\n      } while (--c2 >= 0);\n      s2(t3[o2], l2, T.BLKSIZE_s / 2);\n    }\n  }, this.fft_long = function(a3, t3, r2, _2, i2) {\n    var o2 = T.BLKSIZE / 8 - 1, l2 = T.BLKSIZE / 2;\n    do {\n      var f2, c2, h2, u2, b2, m2 = 255 & n2[o2];\n      c2 = (f2 = e5[m2] * _2[r2][i2 + m2]) - (b2 = e5[m2 + 512] * _2[r2][i2 + m2 + 512]), f2 += b2, u2 = (h2 = e5[m2 + 256] * _2[r2][i2 + m2 + 256]) - (b2 = e5[m2 + 768] * _2[r2][i2 + m2 + 768]), h2 += b2, t3[(l2 -= 4) + 0] = f2 + h2, t3[l2 + 2] = f2 - h2, t3[l2 + 1] = c2 + u2, t3[l2 + 3] = c2 - u2, c2 = (f2 = e5[m2 + 1] * _2[r2][i2 + m2 + 1]) - (b2 = e5[m2 + 513] * _2[r2][i2 + m2 + 513]), f2 += b2, u2 = (h2 = e5[m2 + 257] * _2[r2][i2 + m2 + 257]) - (b2 = e5[m2 + 769] * _2[r2][i2 + m2 + 769]), h2 += b2, t3[l2 + T.BLKSIZE / 2 + 0] = f2 + h2, t3[l2 + T.BLKSIZE / 2 + 2] = f2 - h2, t3[l2 + T.BLKSIZE / 2 + 1] = c2 + u2, t3[l2 + T.BLKSIZE / 2 + 3] = c2 - u2;\n    } while (--o2 >= 0);\n    s2(t3, l2, T.BLKSIZE / 2);\n  }, this.init_fft = function(t3) {\n    for (var s3 = 0; s3 < T.BLKSIZE; s3++) e5[s3] = 0.42 - 0.5 * Math.cos(2 * Math.PI * (s3 + 0.5) / T.BLKSIZE) + 0.08 * Math.cos(4 * Math.PI * (s3 + 0.5) / T.BLKSIZE);\n    for (s3 = 0; s3 < T.BLKSIZE_s / 2; s3++) a2[s3] = 0.5 * (1 - Math.cos(2 * Math.PI * (s3 + 0.5) / T.BLKSIZE_s));\n  };\n}, k = p, y = k.VbrMode, x = k.Float, P = k.ShortBlock, I = k.Util, H = k.Arrays, V = k.new_float, L = k.new_float_n, N = k.new_int, O = k.assert, X = E, D = A();\nvar Y = function() {\n  var e5 = R, a2 = new X(), t2 = 2.302585092994046, s2 = 1 / 217621504 / (D.BLKSIZE / 2), n2 = 0.3, r2 = 21, _2 = 0.2302585093;\n  function i2(e6, a3) {\n    for (var t3 = 0, n3 = 0; n3 < D.BLKSIZE / 2; ++n3) t3 += e6[n3] * a3.ATH.eql_w[n3];\n    return t3 *= s2;\n  }\n  function o2(e6, t3, s3, n3, r3, _3, o3, l3, f3, c3, h3) {\n    var u3 = e6.internal_flags;\n    if (f3 < 2) a2.fft_long(u3, n3[r3], f3, c3, h3), a2.fft_short(u3, _3[o3], f3, c3, h3);\n    else if (2 == f3) {\n      for (var b3 = D.BLKSIZE - 1; b3 >= 0; --b3) {\n        var m3 = n3[r3 + 0][b3], p3 = n3[r3 + 1][b3];\n        n3[r3 + 0][b3] = (m3 + p3) * I.SQRT2 * 0.5, n3[r3 + 1][b3] = (m3 - p3) * I.SQRT2 * 0.5;\n      }\n      for (var v3 = 2; v3 >= 0; --v3) for (b3 = D.BLKSIZE_s - 1; b3 >= 0; --b3) {\n        m3 = _3[o3 + 0][v3][b3], p3 = _3[o3 + 1][v3][b3];\n        _3[o3 + 0][v3][b3] = (m3 + p3) * I.SQRT2 * 0.5, _3[o3 + 1][v3][b3] = (m3 - p3) * I.SQRT2 * 0.5;\n      }\n    }\n    t3[0] = n3[r3 + 0][0], t3[0] *= t3[0];\n    for (b3 = D.BLKSIZE / 2 - 1; b3 >= 0; --b3) {\n      var d3 = n3[r3 + 0][D.BLKSIZE / 2 - b3], g3 = n3[r3 + 0][D.BLKSIZE / 2 + b3];\n      t3[D.BLKSIZE / 2 - b3] = 0.5 * (d3 * d3 + g3 * g3);\n    }\n    for (v3 = 2; v3 >= 0; --v3) {\n      s3[v3][0] = _3[o3 + 0][v3][0], s3[v3][0] *= s3[v3][0];\n      for (b3 = D.BLKSIZE_s / 2 - 1; b3 >= 0; --b3) {\n        d3 = _3[o3 + 0][v3][D.BLKSIZE_s / 2 - b3], g3 = _3[o3 + 0][v3][D.BLKSIZE_s / 2 + b3];\n        s3[v3][D.BLKSIZE_s / 2 - b3] = 0.5 * (d3 * d3 + g3 * g3);\n      }\n    }\n    var S3 = 0;\n    for (b3 = 11; b3 < D.HBLKSIZE; b3++) S3 += t3[b3];\n    if (u3.tot_ener[f3] = S3, e6.analysis) {\n      for (b3 = 0; b3 < D.HBLKSIZE; b3++) u3.pinfo.energy[l3][f3][b3] = u3.pinfo.energy_save[f3][b3], u3.pinfo.energy_save[f3][b3] = t3[b3];\n      u3.pinfo.pe[l3][f3] = u3.pe[f3];\n    }\n    2 == e6.athaa_loudapprox && f3 < 2 && (u3.loudness_sq[l3][f3] = u3.loudness_sq_save[f3], u3.loudness_sq_save[f3] = i2(t3, u3));\n  }\n  var l2, f2, c2, h2 = [1, 0.79433, 0.63096, 0.63096, 0.63096, 0.63096, 0.63096, 0.25119, 0.11749], u2 = [3.3246 * 3.3246, 3.23837 * 3.23837, 9.9500500969, 9.0247369744, 8.1854926609, 7.0440875649, 2.46209 * 2.46209, 2.284 * 2.284, 4.4892710641, 1.96552 * 1.96552, 1.82335 * 1.82335, 1.69146 * 1.69146, 2.4621061921, 2.1508568964, 1.37074 * 1.37074, 1.31036 * 1.31036, 1.5691069696, 1.4555939904, 1.16203 * 1.16203, 1.2715945225, 1.09428 * 1.09428, 1.0659 * 1.0659, 1.0779838276, 1.0382591025, 1], b2 = [1.7782755904, 1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497, 1.40548 * 1.40548, 1.3537 * 1.3537, 1.6999465924, 1.22321 * 1.22321, 1.3169398564, 1], m2 = [5.5396212496, 2.29259 * 2.29259, 4.9868695969, 2.12675 * 2.12675, 2.02545 * 2.02545, 1.87894 * 1.87894, 1.74303 * 1.74303, 1.61695 * 1.61695, 2.2499700001, 1.39148 * 1.39148, 1.29083 * 1.29083, 1.19746 * 1.19746, 1.2339655056, 1.0779838276];\n  function p2(e6, a3, t3, s3, n3, r3) {\n    var _3;\n    if (a3 > e6) {\n      if (!(a3 < e6 * f2)) return e6 + a3;\n      _3 = a3 / e6;\n    } else {\n      if (e6 >= a3 * f2) return e6 + a3;\n      _3 = e6 / a3;\n    }\n    if (e6 += a3, s3 + 3 <= 6) {\n      if (_3 >= l2) return e6;\n      var i3 = 0 | I.FAST_LOG10_X(_3, 16);\n      return e6 * b2[i3];\n    }\n    var o3, h3;\n    i3 = 0 | I.FAST_LOG10_X(_3, 16);\n    return a3 = n3.ATH.cb_l[t3] * n3.ATH.adjust, e6 < c2 * a3 ? e6 > a3 ? (o3 = 1, i3 <= 13 && (o3 = m2[i3]), h3 = I.FAST_LOG10_X(e6 / a3, 10 / 15), e6 * ((u2[i3] - o3) * h3 + o3)) : i3 > 13 ? e6 : e6 * m2[i3] : e6 * u2[i3];\n  }\n  var v2 = [1.7782755904, 1.35879 * 1.35879, 1.38454 * 1.38454, 1.39497 * 1.39497, 1.40548 * 1.40548, 1.3537 * 1.3537, 1.6999465924, 1.22321 * 1.22321, 1.3169398564, 1];\n  function d2(e6, a3, t3) {\n    var s3;\n    if (e6 < 0 && (e6 = 0), a3 < 0 && (a3 = 0), e6 <= 0) return a3;\n    if (a3 <= 0) return e6;\n    if (s3 = a3 > e6 ? a3 / e6 : e6 / a3, -2 <= t3 && t3 <= 2) {\n      if (s3 >= l2) return e6 + a3;\n      var n3 = 0 | I.FAST_LOG10_X(s3, 16);\n      return (e6 + a3) * v2[n3];\n    }\n    return s3 < f2 ? e6 + a3 : (e6 < a3 && (e6 = a3), e6);\n  }\n  function g2(e6, a3, t3, s3, n3) {\n    var r3, _3, i3 = 0, o3 = 0;\n    for (r3 = _3 = 0; r3 < D.SBMAX_s; ++_3, ++r3) {\n      for (var l3 = e6.bo_s[r3], f3 = e6.npart_s, c3 = l3 < f3 ? l3 : f3; _3 < c3; ) O(a3[_3] >= 0), O(t3[_3] >= 0), i3 += a3[_3], o3 += t3[_3], _3++;\n      if (e6.en[s3].s[r3][n3] = i3, e6.thm[s3].s[r3][n3] = o3, _3 >= f3) {\n        ++r3;\n        break;\n      }\n      O(a3[_3] >= 0), O(t3[_3] >= 0);\n      var h3 = e6.PSY.bo_s_weight[r3], u3 = 1 - h3;\n      i3 = h3 * a3[_3], o3 = h3 * t3[_3], e6.en[s3].s[r3][n3] += i3, e6.thm[s3].s[r3][n3] += o3, i3 = u3 * a3[_3], o3 = u3 * t3[_3];\n    }\n    for (; r3 < D.SBMAX_s; ++r3) e6.en[s3].s[r3][n3] = 0, e6.thm[s3].s[r3][n3] = 0;\n  }\n  function S2(e6, a3, t3, s3) {\n    var n3, r3, _3 = 0, i3 = 0;\n    for (n3 = r3 = 0; n3 < D.SBMAX_l; ++r3, ++n3) {\n      for (var o3 = e6.bo_l[n3], l3 = e6.npart_l, f3 = o3 < l3 ? o3 : l3; r3 < f3; ) O(a3[r3] >= 0), O(t3[r3] >= 0), _3 += a3[r3], i3 += t3[r3], r3++;\n      if (e6.en[s3].l[n3] = _3, e6.thm[s3].l[n3] = i3, r3 >= l3) {\n        ++n3;\n        break;\n      }\n      O(a3[r3] >= 0), O(t3[r3] >= 0);\n      var c3 = e6.PSY.bo_l_weight[n3], h3 = 1 - c3;\n      _3 = c3 * a3[r3], i3 = c3 * t3[r3], e6.en[s3].l[n3] += _3, e6.thm[s3].l[n3] += i3, _3 = h3 * a3[r3], i3 = h3 * t3[r3];\n    }\n    for (; n3 < D.SBMAX_l; ++n3) e6.en[s3].l[n3] = 0, e6.thm[s3].l[n3] = 0;\n  }\n  function A2(e6, a3, t3, s3, n3, r3) {\n    var _3, i3, o3 = e6.internal_flags;\n    for (i3 = _3 = 0; i3 < o3.npart_s; ++i3) {\n      for (var l3 = 0, f3 = o3.numlines_s[i3], c3 = 0; c3 < f3; ++c3, ++_3) {\n        l3 += a3[r3][_3];\n      }\n      t3[i3] = l3;\n    }\n    for (O(i3 == o3.npart_s), _3 = i3 = 0; i3 < o3.npart_s; i3++) {\n      var h3 = o3.s3ind_s[i3][0], u3 = o3.s3_ss[_3++] * t3[h3];\n      for (++h3; h3 <= o3.s3ind_s[i3][1]; ) u3 += o3.s3_ss[_3] * t3[h3], ++_3, ++h3;\n      var b3 = 2 * o3.nb_s1[n3][i3];\n      if (s3[i3] = Math.min(u3, b3), o3.blocktype_old[1 & n3] == D.SHORT_TYPE) {\n        b3 = 16 * o3.nb_s2[n3][i3];\n        var m3 = s3[i3];\n        s3[i3] = Math.min(b3, m3);\n      }\n      o3.nb_s2[n3][i3] = o3.nb_s1[n3][i3], o3.nb_s1[n3][i3] = u3, O(s3[i3] >= 0);\n    }\n    for (; i3 <= D.CBANDS; ++i3) t3[i3] = 0, s3[i3] = 0;\n  }\n  function M2(e6, a3, t3) {\n    return t3 >= 1 ? e6 : t3 <= 0 ? a3 : a3 > 0 ? Math.pow(e6 / a3, t3) * a3 : 0;\n  }\n  var B2 = [11.8, 13.6, 17.2, 32, 46.5, 51.3, 57.5, 67.1, 71.5, 84.6, 97.6, 130];\n  function w2(e6, a3) {\n    for (var s3 = 309.07, n3 = 0; n3 < D.SBMAX_s - 1; n3++) for (var r3 = 0; r3 < 3; r3++) {\n      var _3 = e6.thm.s[n3][r3];\n      if (_3 > 0) {\n        var i3 = _3 * a3, o3 = e6.en.s[n3][r3];\n        o3 > i3 && (s3 += o3 > 1e10 * i3 ? B2[n3] * (10 * t2) : B2[n3] * I.FAST_LOG10(o3 / i3));\n      }\n    }\n    return s3;\n  }\n  var T2 = [6.8, 5.8, 5.8, 6.4, 6.5, 9.9, 12.1, 14.4, 15, 18.9, 21.6, 26.9, 34.2, 40.2, 46.8, 56.5, 60.7, 73.9, 85.7, 93.4, 126.1];\n  function E2(e6, a3) {\n    for (var s3 = 281.0575, n3 = 0; n3 < D.SBMAX_l - 1; n3++) {\n      var r3 = e6.thm.l[n3];\n      if (r3 > 0) {\n        var _3 = r3 * a3, i3 = e6.en.l[n3];\n        i3 > _3 && (s3 += i3 > 1e10 * _3 ? T2[n3] * (10 * t2) : T2[n3] * I.FAST_LOG10(i3 / _3));\n      }\n    }\n    return s3;\n  }\n  function k2(e6, a3, t3, s3, n3) {\n    var r3, _3;\n    for (r3 = _3 = 0; r3 < e6.npart_l; ++r3) {\n      var i3, o3 = 0, l3 = 0;\n      for (i3 = 0; i3 < e6.numlines_l[r3]; ++i3, ++_3) {\n        var f3 = a3[_3];\n        o3 += f3, l3 < f3 && (l3 = f3);\n      }\n      t3[r3] = o3, s3[r3] = l3, n3[r3] = o3 * e6.rnumlines_l[r3], O(e6.rnumlines_l[r3] >= 0), O(t3[r3] >= 0), O(s3[r3] >= 0), O(n3[r3] >= 0);\n    }\n  }\n  function Y2(e6, a3, t3, s3) {\n    var n3 = h2.length - 1, r3 = 0, _3 = t3[r3] + t3[r3 + 1];\n    _3 > 0 ? ((i3 = a3[r3]) < a3[r3 + 1] && (i3 = a3[r3 + 1]), O(e6.numlines_l[r3] + e6.numlines_l[r3 + 1] - 1 > 0), (o3 = 0 | (_3 = 20 * (2 * i3 - _3) / (_3 * (e6.numlines_l[r3] + e6.numlines_l[r3 + 1] - 1)))) > n3 && (o3 = n3), s3[r3] = o3) : s3[r3] = 0;\n    for (r3 = 1; r3 < e6.npart_l - 1; r3++) {\n      var i3, o3;\n      if ((_3 = t3[r3 - 1] + t3[r3] + t3[r3 + 1]) > 0) (i3 = a3[r3 - 1]) < a3[r3] && (i3 = a3[r3]), i3 < a3[r3 + 1] && (i3 = a3[r3 + 1]), O(e6.numlines_l[r3 - 1] + e6.numlines_l[r3] + e6.numlines_l[r3 + 1] - 1 > 0), (o3 = 0 | (_3 = 20 * (3 * i3 - _3) / (_3 * (e6.numlines_l[r3 - 1] + e6.numlines_l[r3] + e6.numlines_l[r3 + 1] - 1)))) > n3 && (o3 = n3), s3[r3] = o3;\n      else s3[r3] = 0;\n    }\n    (O(r3 == e6.npart_l - 1), (_3 = t3[r3 - 1] + t3[r3]) > 0) ? ((i3 = a3[r3 - 1]) < a3[r3] && (i3 = a3[r3]), O(e6.numlines_l[r3 - 1] + e6.numlines_l[r3] - 1 > 0), (o3 = 0 | (_3 = 20 * (2 * i3 - _3) / (_3 * (e6.numlines_l[r3 - 1] + e6.numlines_l[r3] - 1)))) > n3 && (o3 = n3), s3[r3] = o3) : s3[r3] = 0;\n    O(r3 == e6.npart_l - 1);\n  }\n  var q2 = [-1730326e-23, -0.01703172, -1349528e-23, 0.0418072, -673278e-22, -0.0876324, -30835e-21, 0.1863476, -1104424e-22, -0.627638];\n  function F2(e6, t3, s3, n3, r3, _3, i3, o3) {\n    var l3 = e6.internal_flags;\n    if (n3 < 2) a2.fft_long(l3, i3[o3], n3, t3, s3);\n    else if (2 == n3) for (var f3 = D.BLKSIZE - 1; f3 >= 0; --f3) {\n      var c3 = i3[o3 + 0][f3], h3 = i3[o3 + 1][f3];\n      i3[o3 + 0][f3] = (c3 + h3) * I.SQRT2 * 0.5, i3[o3 + 1][f3] = (c3 - h3) * I.SQRT2 * 0.5;\n    }\n    _3[0] = i3[o3 + 0][0], _3[0] *= _3[0];\n    for (f3 = D.BLKSIZE / 2 - 1; f3 >= 0; --f3) {\n      var u3 = i3[o3 + 0][D.BLKSIZE / 2 - f3], b3 = i3[o3 + 0][D.BLKSIZE / 2 + f3];\n      _3[D.BLKSIZE / 2 - f3] = 0.5 * (u3 * u3 + b3 * b3);\n    }\n    var m3 = 0;\n    for (f3 = 11; f3 < D.HBLKSIZE; f3++) m3 += _3[f3];\n    if (l3.tot_ener[n3] = m3, e6.analysis) {\n      for (f3 = 0; f3 < D.HBLKSIZE; f3++) l3.pinfo.energy[r3][n3][f3] = l3.pinfo.energy_save[n3][f3], l3.pinfo.energy_save[n3][f3] = _3[f3];\n      l3.pinfo.pe[r3][n3] = l3.pe[n3];\n    }\n  }\n  function C2(e6, t3, s3, n3, r3, _3, i3, o3) {\n    var l3 = e6.internal_flags;\n    if (0 == r3 && n3 < 2 && a2.fft_short(l3, i3[o3], n3, t3, s3), 2 == n3) for (var f3 = D.BLKSIZE_s - 1; f3 >= 0; --f3) {\n      var c3 = i3[o3 + 0][r3][f3], h3 = i3[o3 + 1][r3][f3];\n      i3[o3 + 0][r3][f3] = (c3 + h3) * I.SQRT2 * 0.5, i3[o3 + 1][r3][f3] = (c3 - h3) * I.SQRT2 * 0.5;\n    }\n    _3[r3][0] = i3[o3 + 0][r3][0], _3[r3][0] *= _3[r3][0];\n    for (f3 = D.BLKSIZE_s / 2 - 1; f3 >= 0; --f3) {\n      var u3 = i3[o3 + 0][r3][D.BLKSIZE_s / 2 - f3], b3 = i3[o3 + 0][r3][D.BLKSIZE_s / 2 + f3];\n      _3[r3][D.BLKSIZE_s / 2 - f3] = 0.5 * (u3 * u3 + b3 * b3);\n    }\n  }\n  function j2(e6, a3, t3, s3) {\n    var n3 = e6.internal_flags;\n    2 == e6.athaa_loudapprox && t3 < 2 && (n3.loudness_sq[a3][t3] = n3.loudness_sq_save[t3], n3.loudness_sq_save[t3] = i2(s3, n3));\n  }\n  this.L3psycho_anal_ns = function(a3, t3, s3, _3, i3, l3, f3, c3, u3, b3) {\n    var m3, v3, d3, R2, B3, T3, x2, I2, X2, F3, C3 = a3.internal_flags, j3 = L([2, D.BLKSIZE]), G3 = L([2, 3, D.BLKSIZE_s]), z3 = V(D.CBANDS + 1), K3 = V(D.CBANDS + 1), Z3 = V(D.CBANDS + 2), U3 = N(2), Q3 = N(2), W3 = L([2, 576]), J3 = N(D.CBANDS + 2), $3 = N(D.CBANDS + 2);\n    for (H.fill($3, 0), m3 = C3.channels_out, a3.mode == e5.JOINT_STEREO && (m3 = 4), X2 = a3.VBR == y.vbr_off ? 0 == C3.ResvMax ? 0 : C3.ResvSize / C3.ResvMax * 0.5 : a3.VBR == y.vbr_rh || a3.VBR == y.vbr_mtrh || a3.VBR == y.vbr_mt ? 0.6 : 1, v3 = 0; v3 < C3.channels_out; v3++) {\n      var ee3 = t3[v3], ae3 = s3 + 576 - 350 - r2 + 192;\n      for (R2 = 0; R2 < 576; R2++) {\n        var te3, se3;\n        for (te3 = ee3[ae3 + R2 + 10], se3 = 0, B3 = 0; B3 < 9; B3 += 2) te3 += q2[B3] * (ee3[ae3 + R2 + B3] + ee3[ae3 + R2 + r2 - B3]), se3 += q2[B3 + 1] * (ee3[ae3 + R2 + B3 + 1] + ee3[ae3 + R2 + r2 - B3 - 1]);\n        W3[v3][R2] = te3 + se3;\n      }\n      i3[_3][v3].en.assign(C3.en[v3]), i3[_3][v3].thm.assign(C3.thm[v3]), m3 > 2 && (l3[_3][v3].en.assign(C3.en[v3 + 2]), l3[_3][v3].thm.assign(C3.thm[v3 + 2]));\n    }\n    for (v3 = 0; v3 < m3; v3++) {\n      var ne2, re2 = V(12), _e2 = [0, 0, 0, 0], ie2 = V(12), oe2 = 1, le2 = V(D.CBANDS), fe2 = V(D.CBANDS), ce2 = [0, 0, 0, 0], he2 = V(D.HBLKSIZE), ue2 = L([3, D.HBLKSIZE_s]);\n      for (O(C3.npart_s <= D.CBANDS), O(C3.npart_l <= D.CBANDS), R2 = 0; R2 < 3; R2++) re2[R2] = C3.nsPsy.last_en_subshort[v3][R2 + 6], O(C3.nsPsy.last_en_subshort[v3][R2 + 4] > 0), ie2[R2] = re2[R2] / C3.nsPsy.last_en_subshort[v3][R2 + 4], _e2[0] += re2[R2];\n      if (2 == v3) for (R2 = 0; R2 < 576; R2++) {\n        var be2, me2;\n        be2 = W3[0][R2], me2 = W3[1][R2], W3[0][R2] = be2 + me2, W3[1][R2] = be2 - me2;\n      }\n      var pe2 = W3[1 & v3], ve2 = 0;\n      for (R2 = 0; R2 < 9; R2++) {\n        for (var de2 = ve2 + 64, ge2 = 1; ve2 < de2; ve2++) ge2 < Math.abs(pe2[ve2]) && (ge2 = Math.abs(pe2[ve2]));\n        C3.nsPsy.last_en_subshort[v3][R2] = re2[R2 + 3] = ge2, _e2[1 + R2 / 3] += ge2, ge2 > re2[R2 + 3 - 2] ? (O(re2[R2 + 3 - 2] > 0), ge2 /= re2[R2 + 3 - 2]) : ge2 = re2[R2 + 3 - 2] > 10 * ge2 ? re2[R2 + 3 - 2] / (10 * ge2) : 0, ie2[R2 + 3] = ge2;\n      }\n      if (a3.analysis) {\n        var Se2 = ie2[0];\n        for (R2 = 1; R2 < 12; R2++) Se2 < ie2[R2] && (Se2 = ie2[R2]);\n        C3.pinfo.ers[_3][v3] = C3.pinfo.ers_save[v3], C3.pinfo.ers_save[v3] = Se2;\n      }\n      for (ne2 = 3 == v3 ? C3.nsPsy.attackthre_s : C3.nsPsy.attackthre, R2 = 0; R2 < 12; R2++) 0 == ce2[R2 / 3] && ie2[R2] > ne2 && (ce2[R2 / 3] = R2 % 3 + 1);\n      for (R2 = 1; R2 < 4; R2++) {\n        var Re2;\n        _e2[R2 - 1] > _e2[R2] ? (O(_e2[R2] > 0), Re2 = _e2[R2 - 1] / _e2[R2]) : (O(_e2[R2 - 1] > 0), Re2 = _e2[R2] / _e2[R2 - 1]), Re2 < 1.7 && (ce2[R2] = 0, 1 == R2 && (ce2[0] = 0));\n      }\n      for (0 != ce2[0] && 0 != C3.nsPsy.lastAttacks[v3] && (ce2[0] = 0), 3 != C3.nsPsy.lastAttacks[v3] && ce2[0] + ce2[1] + ce2[2] + ce2[3] == 0 || (oe2 = 0, 0 != ce2[1] && 0 != ce2[0] && (ce2[1] = 0), 0 != ce2[2] && 0 != ce2[1] && (ce2[2] = 0), 0 != ce2[3] && 0 != ce2[2] && (ce2[3] = 0)), v3 < 2 ? Q3[v3] = oe2 : 0 == oe2 && (Q3[0] = Q3[1] = 0), u3[v3] = C3.tot_ener[v3], o2(a3, he2, ue2, j3, 1 & v3, G3, 1 & v3, _3, v3, t3, s3), k2(C3, he2, z3, le2, fe2), Y2(C3, le2, fe2, J3), I2 = 0; I2 < 3; I2++) {\n        var Ae2, Me2;\n        for (A2(a3, ue2, K3, Z3, v3, I2), g2(C3, K3, Z3, v3, I2), x2 = 0; x2 < D.SBMAX_s; x2++) {\n          if (Me2 = C3.thm[v3].s[x2][I2], Me2 *= 0.8, ce2[I2] >= 2 || 1 == ce2[I2 + 1]) {\n            var Be2 = 0 != I2 ? I2 - 1 : 2;\n            ge2 = M2(C3.thm[v3].s[x2][Be2], Me2, 0.6 * X2);\n            Me2 = Math.min(Me2, ge2);\n          }\n          if (1 == ce2[I2]) {\n            Be2 = 0 != I2 ? I2 - 1 : 2, ge2 = M2(C3.thm[v3].s[x2][Be2], Me2, n2 * X2);\n            Me2 = Math.min(Me2, ge2);\n          } else if (0 != I2 && 3 == ce2[I2 - 1] || 0 == I2 && 3 == C3.nsPsy.lastAttacks[v3]) {\n            Be2 = 2 != I2 ? I2 + 1 : 0, ge2 = M2(C3.thm[v3].s[x2][Be2], Me2, n2 * X2);\n            Me2 = Math.min(Me2, ge2);\n          }\n          Ae2 = re2[3 * I2 + 3] + re2[3 * I2 + 4] + re2[3 * I2 + 5], 6 * re2[3 * I2 + 5] < Ae2 && (Me2 *= 0.5, 6 * re2[3 * I2 + 4] < Ae2 && (Me2 *= 0.5)), C3.thm[v3].s[x2][I2] = Me2;\n        }\n      }\n      for (C3.nsPsy.lastAttacks[v3] = ce2[2], T3 = 0, d3 = 0; d3 < C3.npart_l; d3++) {\n        for (var we2 = C3.s3ind[d3][0], Te2 = z3[we2] * h2[J3[we2]], Ee2 = C3.s3_ll[T3++] * Te2; ++we2 <= C3.s3ind[d3][1]; ) Te2 = z3[we2] * h2[J3[we2]], Ee2 = p2(Ee2, C3.s3_ll[T3++] * Te2, we2, we2 - d3, C3);\n        Ee2 *= 0.158489319246111, C3.blocktype_old[1 & v3] == D.SHORT_TYPE ? Z3[d3] = Ee2 : Z3[d3] = M2(Math.min(Ee2, Math.min(2 * C3.nb_1[v3][d3], 16 * C3.nb_2[v3][d3])), Ee2, X2), C3.nb_2[v3][d3] = C3.nb_1[v3][d3], C3.nb_1[v3][d3] = Ee2;\n      }\n      for (; d3 <= D.CBANDS; ++d3) z3[d3] = 0, Z3[d3] = 0;\n      S2(C3, z3, Z3, v3);\n    }\n    (a3.mode != e5.STEREO && a3.mode != e5.JOINT_STEREO || a3.interChRatio > 0 && function(e6, a4) {\n      var t4 = e6.internal_flags;\n      if (t4.channels_out > 1) {\n        for (var s4 = 0; s4 < D.SBMAX_l; s4++) {\n          var n3 = t4.thm[0].l[s4], r3 = t4.thm[1].l[s4];\n          t4.thm[0].l[s4] += r3 * a4, t4.thm[1].l[s4] += n3 * a4;\n        }\n        for (s4 = 0; s4 < D.SBMAX_s; s4++) for (var _4 = 0; _4 < 3; _4++) n3 = t4.thm[0].s[s4][_4], r3 = t4.thm[1].s[s4][_4], t4.thm[0].s[s4][_4] += r3 * a4, t4.thm[1].s[s4][_4] += n3 * a4;\n      }\n    }(a3, a3.interChRatio), a3.mode == e5.JOINT_STEREO) && (!function(e6) {\n      for (var a4 = 0; a4 < D.SBMAX_l; a4++) if (!(e6.thm[0].l[a4] > 1.58 * e6.thm[1].l[a4] || e6.thm[1].l[a4] > 1.58 * e6.thm[0].l[a4])) {\n        var t4 = e6.mld_l[a4] * e6.en[3].l[a4], s4 = Math.max(e6.thm[2].l[a4], Math.min(e6.thm[3].l[a4], t4));\n        t4 = e6.mld_l[a4] * e6.en[2].l[a4];\n        var n3 = Math.max(e6.thm[3].l[a4], Math.min(e6.thm[2].l[a4], t4));\n        e6.thm[2].l[a4] = s4, e6.thm[3].l[a4] = n3;\n      }\n      for (a4 = 0; a4 < D.SBMAX_s; a4++) for (var r3 = 0; r3 < 3; r3++) e6.thm[0].s[a4][r3] > 1.58 * e6.thm[1].s[a4][r3] || e6.thm[1].s[a4][r3] > 1.58 * e6.thm[0].s[a4][r3] || (t4 = e6.mld_s[a4] * e6.en[3].s[a4][r3], s4 = Math.max(e6.thm[2].s[a4][r3], Math.min(e6.thm[3].s[a4][r3], t4)), t4 = e6.mld_s[a4] * e6.en[2].s[a4][r3], n3 = Math.max(e6.thm[3].s[a4][r3], Math.min(e6.thm[2].s[a4][r3], t4)), e6.thm[2].s[a4][r3] = s4, e6.thm[3].s[a4][r3] = n3);\n    }(C3), F3 = a3.msfix, Math.abs(F3) > 0 && function(e6, a4, t4) {\n      var s4 = a4, n3 = Math.pow(10, t4);\n      a4 *= 2, s4 *= 2;\n      for (var r3 = 0; r3 < D.SBMAX_l; r3++) f4 = e6.ATH.cb_l[e6.bm_l[r3]] * n3, (i4 = Math.min(Math.max(e6.thm[0].l[r3], f4), Math.max(e6.thm[1].l[r3], f4))) * a4 < (o3 = Math.max(e6.thm[2].l[r3], f4)) + (l4 = Math.max(e6.thm[3].l[r3], f4)) && (o3 *= c4 = i4 * s4 / (o3 + l4), l4 *= c4), e6.thm[2].l[r3] = Math.min(o3, e6.thm[2].l[r3]), e6.thm[3].l[r3] = Math.min(l4, e6.thm[3].l[r3]);\n      for (n3 *= D.BLKSIZE_s / D.BLKSIZE, r3 = 0; r3 < D.SBMAX_s; r3++) for (var _4 = 0; _4 < 3; _4++) {\n        var i4, o3, l4, f4, c4;\n        f4 = e6.ATH.cb_s[e6.bm_s[r3]] * n3, (i4 = Math.min(Math.max(e6.thm[0].s[r3][_4], f4), Math.max(e6.thm[1].s[r3][_4], f4))) * a4 < (o3 = Math.max(e6.thm[2].s[r3][_4], f4)) + (l4 = Math.max(e6.thm[3].s[r3][_4], f4)) && (o3 *= c4 = i4 * a4 / (o3 + l4), l4 *= c4), e6.thm[2].s[r3][_4] = Math.min(e6.thm[2].s[r3][_4], o3), e6.thm[3].s[r3][_4] = Math.min(e6.thm[3].s[r3][_4], l4);\n      }\n    }(C3, F3, a3.ATHlower * C3.ATH.adjust));\n    for (function(e6, a4, t4, s4) {\n      var n3 = e6.internal_flags;\n      e6.short_blocks != P.short_block_coupled || 0 != a4[0] && 0 != a4[1] || (a4[0] = a4[1] = 0);\n      for (var r3 = 0; r3 < n3.channels_out; r3++) s4[r3] = D.NORM_TYPE, e6.short_blocks == P.short_block_dispensed && (a4[r3] = 1), e6.short_blocks == P.short_block_forced && (a4[r3] = 0), 0 != a4[r3] ? (O(n3.blocktype_old[r3] != D.START_TYPE), n3.blocktype_old[r3] == D.SHORT_TYPE && (s4[r3] = D.STOP_TYPE)) : (s4[r3] = D.SHORT_TYPE, n3.blocktype_old[r3] == D.NORM_TYPE && (n3.blocktype_old[r3] = D.START_TYPE), n3.blocktype_old[r3] == D.STOP_TYPE && (n3.blocktype_old[r3] = D.SHORT_TYPE)), t4[r3] = n3.blocktype_old[r3], n3.blocktype_old[r3] = s4[r3];\n    }(a3, Q3, b3, U3), v3 = 0; v3 < m3; v3++) {\n      var ke2, ye2, xe2, Pe2 = 0;\n      v3 > 1 ? (ke2 = c3, Pe2 = -2, ye2 = D.NORM_TYPE, b3[0] != D.SHORT_TYPE && b3[1] != D.SHORT_TYPE || (ye2 = D.SHORT_TYPE), xe2 = l3[_3][v3 - 2]) : (ke2 = f3, Pe2 = 0, ye2 = b3[v3], xe2 = i3[_3][v3]), ye2 == D.SHORT_TYPE ? ke2[Pe2 + v3] = w2(xe2, C3.masking_lower) : ke2[Pe2 + v3] = E2(xe2, C3.masking_lower), a3.analysis && (C3.pinfo.pe[_3][v3] = ke2[Pe2 + v3]);\n    }\n    return 0;\n  };\n  var G2 = [-1730326e-23, -0.01703172, -1349528e-23, 0.0418072, -673278e-22, -0.0876324, -30835e-21, 0.1863476, -1104424e-22, -0.627638];\n  function z2(e6, a3, t3) {\n    if (0 == t3) for (var s3 = 0; s3 < e6.npart_s; s3++) e6.nb_s2[a3][s3] = e6.nb_s1[a3][s3], e6.nb_s1[a3][s3] = 0;\n  }\n  function K2(e6, a3) {\n    for (var t3 = 0; t3 < e6.npart_l; t3++) e6.nb_2[a3][t3] = e6.nb_1[a3][t3], e6.nb_1[a3][t3] = 0;\n  }\n  function Z2(e6, a3, t3, s3, n3, r3) {\n    var _3, i3, o3, l3 = e6.internal_flags, f3 = new float[D.CBANDS](), c3 = V(D.CBANDS), u3 = new int[D.CBANDS]();\n    for (o3 = i3 = 0; o3 < l3.npart_s; ++o3) {\n      var b3 = 0, m3 = 0, p3 = l3.numlines_s[o3];\n      for (_3 = 0; _3 < p3; ++_3, ++i3) {\n        var v3 = a3[r3][i3];\n        b3 += v3, m3 < v3 && (m3 = v3);\n      }\n      t3[o3] = b3, f3[o3] = m3, c3[o3] = b3 / p3, O(c3[o3] >= 0);\n    }\n    for (O(o3 == l3.npart_s); o3 < D.CBANDS; ++o3) f3[o3] = 0, c3[o3] = 0;\n    for (function(e7, a4, t4, s4) {\n      var n4 = h2.length - 1, r4 = 0, _4 = t4[r4] + t4[r4 + 1];\n      for (_4 > 0 ? ((i4 = a4[r4]) < a4[r4 + 1] && (i4 = a4[r4 + 1]), O(e7.numlines_s[r4] + e7.numlines_s[r4 + 1] - 1 > 0), (o4 = 0 | (_4 = 20 * (2 * i4 - _4) / (_4 * (e7.numlines_s[r4] + e7.numlines_s[r4 + 1] - 1)))) > n4 && (o4 = n4), s4[r4] = o4) : s4[r4] = 0, r4 = 1; r4 < e7.npart_s - 1; r4++) {\n        var i4, o4;\n        _4 = t4[r4 - 1] + t4[r4] + t4[r4 + 1], O(r4 + 1 < e7.npart_s), _4 > 0 ? ((i4 = a4[r4 - 1]) < a4[r4] && (i4 = a4[r4]), i4 < a4[r4 + 1] && (i4 = a4[r4 + 1]), O(e7.numlines_s[r4 - 1] + e7.numlines_s[r4] + e7.numlines_s[r4 + 1] - 1 > 0), (o4 = 0 | (_4 = 20 * (3 * i4 - _4) / (_4 * (e7.numlines_s[r4 - 1] + e7.numlines_s[r4] + e7.numlines_s[r4 + 1] - 1)))) > n4 && (o4 = n4), s4[r4] = o4) : s4[r4] = 0;\n      }\n      O(r4 == e7.npart_s - 1), (_4 = t4[r4 - 1] + t4[r4]) > 0 ? ((i4 = a4[r4 - 1]) < a4[r4] && (i4 = a4[r4]), O(e7.numlines_s[r4 - 1] + e7.numlines_s[r4] - 1 > 0), (o4 = 0 | (_4 = 20 * (2 * i4 - _4) / (_4 * (e7.numlines_s[r4 - 1] + e7.numlines_s[r4] - 1)))) > n4 && (o4 = n4), s4[r4] = o4) : s4[r4] = 0, O(r4 == e7.npart_s - 1);\n    }(l3, f3, c3, u3), i3 = o3 = 0; o3 < l3.npart_s; o3++) {\n      var g3, S3, R2, A3, M3, B3 = l3.s3ind_s[o3][0], w3 = l3.s3ind_s[o3][1];\n      for (g3 = u3[B3], S3 = 1, A3 = l3.s3_ss[i3] * t3[B3] * h2[u3[B3]], ++i3, ++B3; B3 <= w3; ) g3 += u3[B3], S3 += 1, A3 = d2(A3, R2 = l3.s3_ss[i3] * t3[B3] * h2[u3[B3]], B3 - o3), ++i3, ++B3;\n      A3 *= M3 = 0.5 * h2[g3 = (1 + 2 * g3) / (2 * S3)], s3[o3] = A3, l3.nb_s2[n3][o3] = l3.nb_s1[n3][o3], l3.nb_s1[n3][o3] = A3, R2 = f3[o3], R2 *= l3.minval_s[o3], R2 *= M3, s3[o3] > R2 && (s3[o3] = R2), l3.masking_lower > 1 && (s3[o3] *= l3.masking_lower), s3[o3] > t3[o3] && (s3[o3] = t3[o3]), l3.masking_lower < 1 && (s3[o3] *= l3.masking_lower), O(s3[o3] >= 0);\n    }\n    for (; o3 < D.CBANDS; ++o3) t3[o3] = 0, s3[o3] = 0;\n  }\n  function U2(e6, a3, t3, s3, r3) {\n    var _3, i3 = V(D.CBANDS), o3 = V(D.CBANDS), l3 = N(D.CBANDS + 2);\n    k2(e6, a3, t3, i3, o3), Y2(e6, i3, o3, l3);\n    var f3 = 0;\n    for (_3 = 0; _3 < e6.npart_l; _3++) {\n      var c3, u3, b3, m3 = e6.s3ind[_3][0], p3 = e6.s3ind[_3][1], v3 = 0, g3 = 0;\n      for (v3 = l3[m3], g3 += 1, u3 = e6.s3_ll[f3] * t3[m3] * h2[l3[m3]], ++f3, ++m3; m3 <= p3; ) v3 += l3[m3], g3 += 1, u3 = d2(u3, c3 = e6.s3_ll[f3] * t3[m3] * h2[l3[m3]], m3 - _3), ++f3, ++m3;\n      if (u3 *= b3 = 0.5 * h2[v3 = (1 + 2 * v3) / (2 * g3)], e6.blocktype_old[1 & r3] == D.SHORT_TYPE) {\n        var S3 = 2 * e6.nb_1[r3][_3];\n        s3[_3] = S3 > 0 ? Math.min(u3, S3) : Math.min(u3, t3[_3] * n2);\n      } else {\n        var R2 = 16 * e6.nb_2[r3][_3], A3 = 2 * e6.nb_1[r3][_3];\n        R2 <= 0 && (R2 = u3), A3 <= 0 && (A3 = u3), S3 = e6.blocktype_old[1 & r3] == D.NORM_TYPE ? Math.min(A3, R2) : A3, s3[_3] = Math.min(u3, S3);\n      }\n      e6.nb_2[r3][_3] = e6.nb_1[r3][_3], e6.nb_1[r3][_3] = u3, c3 = i3[_3], c3 *= e6.minval_l[_3], c3 *= b3, s3[_3] > c3 && (s3[_3] = c3), e6.masking_lower > 1 && (s3[_3] *= e6.masking_lower), s3[_3] > t3[_3] && (s3[_3] = t3[_3]), e6.masking_lower < 1 && (s3[_3] *= e6.masking_lower), O(s3[_3] >= 0);\n    }\n    for (; _3 < D.CBANDS; ++_3) t3[_3] = 0, s3[_3] = 0;\n  }\n  function Q2(e6, a3, t3, s3, n3, r3, _3) {\n    for (var i3, o3, l3 = 2 * r3, f3 = r3 > 0 ? Math.pow(10, n3) : 1, c3 = 0; c3 < _3; ++c3) {\n      var h3 = e6[2][c3], u3 = e6[3][c3], b3 = a3[0][c3], m3 = a3[1][c3], p3 = a3[2][c3], v3 = a3[3][c3];\n      if (b3 <= 1.58 * m3 && m3 <= 1.58 * b3) {\n        var d3 = t3[c3] * u3, g3 = t3[c3] * h3;\n        o3 = Math.max(p3, Math.min(v3, d3)), i3 = Math.max(v3, Math.min(p3, g3));\n      } else o3 = p3, i3 = v3;\n      if (r3 > 0) {\n        var S3, R2, A3 = s3[c3] * f3;\n        if (S3 = Math.min(Math.max(b3, A3), Math.max(m3, A3)), (R2 = (p3 = Math.max(o3, A3)) + (v3 = Math.max(i3, A3))) > 0 && S3 * l3 < R2) {\n          var M3 = S3 * l3 / R2;\n          p3 *= M3, v3 *= M3;\n        }\n        o3 = Math.min(p3, o3), i3 = Math.min(v3, i3);\n      }\n      o3 > h3 && (o3 = h3), i3 > u3 && (i3 = u3), a3[2][c3] = o3, a3[3][c3] = i3;\n    }\n  }\n  function W2(e6, a3) {\n    var t3;\n    return (t3 = e6 >= 0 ? 27 * -e6 : e6 * a3) <= -72 ? 0 : Math.exp(t3 * _2);\n  }\n  function J2(e6) {\n    var a3, t3, s3 = 0;\n    for (s3 = 0; W2(s3, e6) > 1e-20; s3 -= 1) ;\n    for (n3 = s3, r3 = 0; Math.abs(r3 - n3) > 1e-12; ) W2(s3 = (r3 + n3) / 2, e6) > 0 ? r3 = s3 : n3 = s3;\n    a3 = n3;\n    var n3, r3;\n    s3 = 0;\n    for (s3 = 0; W2(s3, e6) > 1e-20; s3 += 1) ;\n    for (n3 = 0, r3 = s3; Math.abs(r3 - n3) > 1e-12; ) W2(s3 = (r3 + n3) / 2, e6) > 0 ? n3 = s3 : r3 = s3;\n    t3 = r3;\n    var _3, i3 = 0, o3 = 1e3;\n    for (_3 = 0; _3 <= o3; ++_3) {\n      i3 += W2(s3 = a3 + _3 * (t3 - a3) / o3, e6);\n    }\n    return (o3 + 1) / (i3 * (t3 - a3));\n  }\n  function $2(e6) {\n    return e6 < 0 && (e6 = 0), e6 *= 1e-3, 13 * Math.atan(0.76 * e6) + 3.5 * Math.atan(e6 * e6 / 56.25);\n  }\n  function ee2(e6, a3, t3, s3, n3, r3, _3, i3, o3, l3, f3, c3) {\n    var h3, u3 = V(D.CBANDS + 1), b3 = i3 / (c3 > 15 ? 1152 : 384), m3 = N(D.HBLKSIZE);\n    i3 /= o3;\n    var p3 = 0, v3 = 0;\n    for (h3 = 0; h3 < D.CBANDS; h3++) {\n      var d3;\n      for (E3 = $2(i3 * p3), u3[h3] = i3 * p3, d3 = p3; $2(i3 * d3) - E3 < 0.34 && d3 <= o3 / 2; d3++) ;\n      for (e6[h3] = d3 - p3, v3 = h3 + 1; p3 < d3; ) O(p3 < D.HBLKSIZE), m3[p3++] = h3;\n      if (p3 > o3 / 2) {\n        p3 = o3 / 2, ++h3;\n        break;\n      }\n    }\n    O(h3 < D.CBANDS), u3[h3] = i3 * p3;\n    for (var g3 = 0; g3 < c3; g3++) {\n      var S3, R2, A3, M3, B3;\n      A3 = l3[g3], M3 = l3[g3 + 1], (S3 = 0 | Math.floor(0.5 + f3 * (A3 - 0.5))) < 0 && (S3 = 0), (R2 = 0 | Math.floor(0.5 + f3 * (M3 - 0.5))) > o3 / 2 && (R2 = o3 / 2), t3[g3] = (m3[S3] + m3[R2]) / 2, a3[g3] = m3[R2];\n      var w3 = b3 * M3;\n      _3[g3] = (w3 - u3[a3[g3]]) / (u3[a3[g3] + 1] - u3[a3[g3]]), _3[g3] < 0 ? _3[g3] = 0 : _3[g3] > 1 && (_3[g3] = 1), B3 = $2(i3 * l3[g3] * f3), B3 = Math.min(B3, 15.5) / 15.5, r3[g3] = Math.pow(10, 1.25 * (1 - Math.cos(Math.PI * B3)) - 2.5);\n    }\n    p3 = 0;\n    for (var T3 = 0; T3 < v3; T3++) {\n      var E3, k3, y2 = e6[T3];\n      E3 = $2(i3 * p3), k3 = $2(i3 * (p3 + y2 - 1)), s3[T3] = 0.5 * (E3 + k3), E3 = $2(i3 * (p3 - 0.5)), k3 = $2(i3 * (p3 + y2 - 0.5)), n3[T3] = k3 - E3, p3 += y2;\n    }\n    return v3;\n  }\n  function ae2(e6, a3, t3, s3, n3, r3) {\n    var i3, o3, l3, f3, c3, h3, u3 = L([D.CBANDS, D.CBANDS]), b3 = 0;\n    if (r3) for (var m3 = 0; m3 < a3; m3++) for (i3 = 0; i3 < a3; i3++) {\n      var p3 = (o3 = t3[m3] - t3[i3], l3 = void 0, f3 = void 0, c3 = void 0, h3 = void 0, l3 = o3, f3 = (l3 *= l3 >= 0 ? 3 : 1.5) >= 0.5 && l3 <= 2.5 ? 8 * ((h3 = l3 - 0.5) * h3 - 2 * h3) : 0, ((c3 = 15.811389 + 7.5 * (l3 += 0.474) - 17.5 * Math.sqrt(1 + l3 * l3)) <= -60 ? 0 : (l3 = Math.exp((f3 + c3) * _2), l3 /= 0.6609193)) * s3[i3]);\n      u3[m3][i3] = p3 * n3[m3];\n    }\n    else for (i3 = 0; i3 < a3; i3++) {\n      var v3 = 15 + Math.min(21 / t3[i3], 12), d3 = J2(v3);\n      for (m3 = 0; m3 < a3; m3++) {\n        p3 = d3 * W2(t3[m3] - t3[i3], v3) * s3[i3];\n        u3[m3][i3] = p3 * n3[m3];\n      }\n    }\n    for (m3 = 0; m3 < a3; m3++) {\n      for (i3 = 0; i3 < a3 && !(u3[m3][i3] > 0); i3++) ;\n      for (e6[m3][0] = i3, i3 = a3 - 1; i3 > 0 && !(u3[m3][i3] > 0); i3--) ;\n      e6[m3][1] = i3, b3 += e6[m3][1] - e6[m3][0] + 1;\n    }\n    var g3 = V(b3), S3 = 0;\n    for (m3 = 0; m3 < a3; m3++) for (i3 = e6[m3][0]; i3 <= e6[m3][1]; i3++) g3[S3++] = u3[m3][i3];\n    return g3;\n  }\n  function te2(e6) {\n    var a3 = $2(e6);\n    return a3 = Math.min(a3, 15.5) / 15.5, Math.pow(10, 1.25 * (1 - Math.cos(Math.PI * a3)) - 2.5);\n  }\n  function se2(e6, a3) {\n    return e6 < -0.3 && (e6 = 3410), e6 /= 1e3, e6 = Math.max(0.1, e6), 3.64 * Math.pow(e6, -0.8) - 6.8 * Math.exp(-0.6 * Math.pow(e6 - 3.4, 2)) + 6 * Math.exp(-0.15 * Math.pow(e6 - 8.7, 2)) + 1e-3 * (0.6 + 0.04 * a3) * Math.pow(e6, 4);\n  }\n  this.L3psycho_anal_vbr = function(a3, t3, s3, n3, _3, i3, o3, l3, f3, c3) {\n    var h3 = a3.internal_flags, u3 = V(D.HBLKSIZE), b3 = L([3, D.HBLKSIZE_s]), m3 = L([2, D.BLKSIZE]), p3 = L([2, 3, D.BLKSIZE_s]), v3 = L([4, D.CBANDS]), d3 = L([4, D.CBANDS]), R2 = L([4, 3]), A3 = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], B3 = N(2), T3 = a3.mode == e5.JOINT_STEREO ? 4 : h3.channels_out;\n    !function(a4, t4, s4, n4, _4, i4, o4, l4, f4, c4) {\n      for (var h4 = L([2, 576]), u4 = a4.internal_flags, b4 = u4.channels_out, m4 = a4.mode == e5.JOINT_STEREO ? 4 : b4, p4 = 0; p4 < b4; p4++) {\n        firbuf = t4[p4];\n        for (var v4 = s4 + 576 - 350 - r2 + 192, d4 = 0; d4 < 576; d4++) {\n          var g3, S3;\n          g3 = firbuf[v4 + d4 + 10], S3 = 0;\n          for (var R3 = 0; R3 < 9; R3 += 2) g3 += G2[R3] * (firbuf[v4 + d4 + R3] + firbuf[v4 + d4 + r2 - R3]), S3 += G2[R3 + 1] * (firbuf[v4 + d4 + R3 + 1] + firbuf[v4 + d4 + r2 - R3 - 1]);\n          h4[p4][d4] = g3 + S3;\n        }\n        _4[n4][p4].en.assign(u4.en[p4]), _4[n4][p4].thm.assign(u4.thm[p4]), m4 > 2 && (i4[n4][p4].en.assign(u4.en[p4 + 2]), i4[n4][p4].thm.assign(u4.thm[p4 + 2]));\n      }\n      for (p4 = 0; p4 < m4; p4++) {\n        var A4 = V(12), M3 = V(12), B4 = [0, 0, 0, 0], w3 = h4[1 & p4], T4 = 0, E3 = 3 == p4 ? u4.nsPsy.attackthre_s : u4.nsPsy.attackthre, k4 = 1;\n        if (2 == p4) for (d4 = 0, R3 = 576; R3 > 0; ++d4, --R3) {\n          var y3 = h4[0][d4], x3 = h4[1][d4];\n          h4[0][d4] = y3 + x3, h4[1][d4] = y3 - x3;\n        }\n        for (d4 = 0; d4 < 3; d4++) M3[d4] = u4.nsPsy.last_en_subshort[p4][d4 + 6], O(u4.nsPsy.last_en_subshort[p4][d4 + 4] > 0), A4[d4] = M3[d4] / u4.nsPsy.last_en_subshort[p4][d4 + 4], B4[0] += M3[d4];\n        for (d4 = 0; d4 < 9; d4++) {\n          for (var P2 = T4 + 64, I3 = 1; T4 < P2; T4++) I3 < Math.abs(w3[T4]) && (I3 = Math.abs(w3[T4]));\n          u4.nsPsy.last_en_subshort[p4][d4] = M3[d4 + 3] = I3, B4[1 + d4 / 3] += I3, I3 > M3[d4 + 3 - 2] ? (O(M3[d4 + 3 - 2] > 0), I3 /= M3[d4 + 3 - 2]) : I3 = M3[d4 + 3 - 2] > 10 * I3 ? M3[d4 + 3 - 2] / (10 * I3) : 0, A4[d4 + 3] = I3;\n        }\n        for (d4 = 0; d4 < 3; ++d4) {\n          var H3 = M3[3 * d4 + 3] + M3[3 * d4 + 4] + M3[3 * d4 + 5], N2 = 1;\n          6 * M3[3 * d4 + 5] < H3 && (N2 *= 0.5, 6 * M3[3 * d4 + 4] < H3 && (N2 *= 0.5)), l4[p4][d4] = N2;\n        }\n        if (a4.analysis) {\n          var X3 = A4[0];\n          for (d4 = 1; d4 < 12; d4++) X3 < A4[d4] && (X3 = A4[d4]);\n          u4.pinfo.ers[n4][p4] = u4.pinfo.ers_save[p4], u4.pinfo.ers_save[p4] = X3;\n        }\n        for (d4 = 0; d4 < 12; d4++) 0 == f4[p4][d4 / 3] && A4[d4] > E3 && (f4[p4][d4 / 3] = d4 % 3 + 1);\n        for (d4 = 1; d4 < 4; d4++) {\n          var D2 = B4[d4 - 1], Y4 = B4[d4];\n          Math.max(D2, Y4) < 4e4 && D2 < 1.7 * Y4 && Y4 < 1.7 * D2 && (1 == d4 && f4[p4][0] <= f4[p4][d4] && (f4[p4][0] = 0), f4[p4][d4] = 0);\n        }\n        f4[p4][0] <= u4.nsPsy.lastAttacks[p4] && (f4[p4][0] = 0), 3 != u4.nsPsy.lastAttacks[p4] && f4[p4][0] + f4[p4][1] + f4[p4][2] + f4[p4][3] == 0 || (k4 = 0, 0 != f4[p4][1] && 0 != f4[p4][0] && (f4[p4][1] = 0), 0 != f4[p4][2] && 0 != f4[p4][1] && (f4[p4][2] = 0), 0 != f4[p4][3] && 0 != f4[p4][2] && (f4[p4][3] = 0)), p4 < 2 ? c4[p4] = k4 : 0 == k4 && (c4[0] = c4[1] = 0), o4[p4] = u4.tot_ener[p4];\n      }\n    }(a3, t3, s3, n3, _3, i3, f3, R2, A3, B3), function(e6, a4) {\n      var t4 = e6.internal_flags;\n      e6.short_blocks != P.short_block_coupled || 0 != a4[0] && 0 != a4[1] || (a4[0] = a4[1] = 0);\n      for (var s4 = 0; s4 < t4.channels_out; s4++) e6.short_blocks == P.short_block_dispensed && (a4[s4] = 1), e6.short_blocks == P.short_block_forced && (a4[s4] = 0);\n    }(a3, B3);\n    for (var k3 = 0; k3 < T3; k3++) {\n      F2(a3, t3, s3, k3, n3, u3, m3, x2 = 1 & k3), j2(a3, n3, k3, u3), 0 != B3[x2] ? U2(h3, u3, v3[k3], d3[k3], k3) : K2(h3, k3);\n    }\n    B3[0] + B3[1] == 2 && a3.mode == e5.JOINT_STEREO && Q2(v3, d3, h3.mld_cb_l, h3.ATH.cb_l, a3.ATHlower * h3.ATH.adjust, a3.msfix, h3.npart_l);\n    for (k3 = 0; k3 < T3; k3++) {\n      0 != B3[x2 = 1 & k3] && S2(h3, v3[k3], d3[k3], k3);\n    }\n    for (var y2 = 0; y2 < 3; y2++) {\n      for (k3 = 0; k3 < T3; ++k3) {\n        0 != B3[x2 = 1 & k3] ? z2(h3, k3, y2) : (C2(a3, t3, s3, k3, y2, b3, p3, x2), Z2(a3, b3, v3[k3], d3[k3], k3, y2));\n      }\n      B3[0] + B3[1] == 0 && a3.mode == e5.JOINT_STEREO && Q2(v3, d3, h3.mld_cb_s, h3.ATH.cb_s, a3.ATHlower * h3.ATH.adjust, a3.msfix, h3.npart_s);\n      for (k3 = 0; k3 < T3; ++k3) {\n        0 == B3[x2 = 1 & k3] && g2(h3, v3[k3], d3[k3], k3, y2);\n      }\n    }\n    for (k3 = 0; k3 < T3; k3++) {\n      var x2;\n      if (0 == B3[x2 = 1 & k3]) for (var I2 = 0; I2 < D.SBMAX_s; I2++) {\n        var H2 = V(3);\n        for (y2 = 0; y2 < 3; y2++) {\n          var X2 = h3.thm[k3].s[I2][y2];\n          if (X2 *= 0.8, A3[k3][y2] >= 2 || 1 == A3[k3][y2 + 1]) {\n            var Y3 = 0 != y2 ? y2 - 1 : 2, q3 = M2(h3.thm[k3].s[I2][Y3], X2, 0.36);\n            X2 = Math.min(X2, q3);\n          } else if (1 == A3[k3][y2]) {\n            Y3 = 0 != y2 ? y2 - 1 : 2, q3 = M2(h3.thm[k3].s[I2][Y3], X2, 0.18);\n            X2 = Math.min(X2, q3);\n          } else if (0 != y2 && 3 == A3[k3][y2 - 1] || 0 == y2 && 3 == h3.nsPsy.lastAttacks[k3]) {\n            Y3 = 2 != y2 ? y2 + 1 : 0, q3 = M2(h3.thm[k3].s[I2][Y3], X2, 0.18);\n            X2 = Math.min(X2, q3);\n          }\n          X2 *= R2[k3][y2], H2[y2] = X2;\n        }\n        for (y2 = 0; y2 < 3; y2++) h3.thm[k3].s[I2][y2] = H2[y2];\n      }\n    }\n    for (k3 = 0; k3 < T3; k3++) h3.nsPsy.lastAttacks[k3] = A3[k3][2];\n    !function(e6, a4, t4) {\n      for (var s4 = e6.internal_flags, n4 = 0; n4 < s4.channels_out; n4++) {\n        var r3 = D.NORM_TYPE;\n        0 != a4[n4] ? (O(s4.blocktype_old[n4] != D.START_TYPE), s4.blocktype_old[n4] == D.SHORT_TYPE && (r3 = D.STOP_TYPE)) : (r3 = D.SHORT_TYPE, s4.blocktype_old[n4] == D.NORM_TYPE && (s4.blocktype_old[n4] = D.START_TYPE), s4.blocktype_old[n4] == D.STOP_TYPE && (s4.blocktype_old[n4] = D.SHORT_TYPE)), t4[n4] = s4.blocktype_old[n4], s4.blocktype_old[n4] = r3;\n      }\n    }(a3, B3, c3);\n    for (k3 = 0; k3 < T3; k3++) {\n      var W3, J3, $3, ee3;\n      k3 > 1 ? (W3 = l3, J3 = -2, $3 = D.NORM_TYPE, c3[0] != D.SHORT_TYPE && c3[1] != D.SHORT_TYPE || ($3 = D.SHORT_TYPE), ee3 = i3[n3][k3 - 2]) : (W3 = o3, J3 = 0, $3 = c3[k3], ee3 = _3[n3][k3]), $3 == D.SHORT_TYPE ? W3[J3 + k3] = w2(ee3, h3.masking_lower) : W3[J3 + k3] = E2(ee3, h3.masking_lower), a3.analysis && (h3.pinfo.pe[n3][k3] = W3[J3 + k3]);\n    }\n    return 0;\n  }, this.psymodel_init = function(e6) {\n    var s3, n3 = e6.internal_flags, r3 = true, _3 = 13, i3 = 24, o3 = 0, h3 = 0, u3 = -8.25, b3 = -4.5, m3 = V(D.CBANDS), p3 = V(D.CBANDS), v3 = V(D.CBANDS), d3 = e6.out_samplerate;\n    switch (e6.experimentalZ) {\n      default:\n      case 0:\n        r3 = true;\n        break;\n      case 1:\n        r3 = e6.VBR != y.vbr_mtrh && e6.VBR != y.vbr_mt;\n        break;\n      case 2:\n        r3 = false;\n        break;\n      case 3:\n        _3 = 8, o3 = -1.75, h3 = -0.0125, u3 = -8.25, b3 = -2.25;\n    }\n    for (n3.ms_ener_ratio_old = 0.25, n3.blocktype_old[0] = n3.blocktype_old[1] = D.NORM_TYPE, s3 = 0; s3 < 4; ++s3) {\n      for (var g3 = 0; g3 < D.CBANDS; ++g3) n3.nb_1[s3][g3] = 1e20, n3.nb_2[s3][g3] = 1e20, n3.nb_s1[s3][g3] = n3.nb_s2[s3][g3] = 1;\n      for (var S3 = 0; S3 < D.SBMAX_l; S3++) n3.en[s3].l[S3] = 1e20, n3.thm[s3].l[S3] = 1e20;\n      for (g3 = 0; g3 < 3; ++g3) {\n        for (S3 = 0; S3 < D.SBMAX_s; S3++) n3.en[s3].s[S3][g3] = 1e20, n3.thm[s3].s[S3][g3] = 1e20;\n        n3.nsPsy.lastAttacks[s3] = 0;\n      }\n      for (g3 = 0; g3 < 9; g3++) n3.nsPsy.last_en_subshort[s3][g3] = 10;\n    }\n    for (n3.loudness_sq_save[0] = n3.loudness_sq_save[1] = 0, n3.npart_l = ee2(n3.numlines_l, n3.bo_l, n3.bm_l, m3, p3, n3.mld_l, n3.PSY.bo_l_weight, d3, D.BLKSIZE, n3.scalefac_band.l, D.BLKSIZE / 1152, D.SBMAX_l), O(n3.npart_l < D.CBANDS), s3 = 0; s3 < n3.npart_l; s3++) {\n      var R2 = o3;\n      m3[s3] >= _3 && (R2 = h3 * (m3[s3] - _3) / (i3 - _3) + o3 * (i3 - m3[s3]) / (i3 - _3)), v3[s3] = Math.pow(10, R2 / 10), n3.numlines_l[s3] > 0 ? n3.rnumlines_l[s3] = 1 / n3.numlines_l[s3] : n3.rnumlines_l[s3] = 0;\n    }\n    n3.s3_ll = ae2(n3.s3ind, n3.npart_l, m3, p3, v3, r3);\n    var A3;\n    g3 = 0;\n    for (s3 = 0; s3 < n3.npart_l; s3++) {\n      w3 = x.MAX_VALUE;\n      for (var M3 = 0; M3 < n3.numlines_l[s3]; M3++, g3++) {\n        var B3 = d3 * g3 / (1e3 * D.BLKSIZE);\n        T3 = this.ATHformula(1e3 * B3, e6) - 20, T3 = Math.pow(10, 0.1 * T3), w3 > (T3 *= n3.numlines_l[s3]) && (w3 = T3);\n      }\n      n3.ATH.cb_l[s3] = w3, (w3 = 20 * m3[s3] / 10 - 20) > 6 && (w3 = 100), w3 < -15 && (w3 = -15), w3 -= 8, n3.minval_l[s3] = Math.pow(10, w3 / 10) * n3.numlines_l[s3];\n    }\n    for (n3.npart_s = ee2(n3.numlines_s, n3.bo_s, n3.bm_s, m3, p3, n3.mld_s, n3.PSY.bo_s_weight, d3, D.BLKSIZE_s, n3.scalefac_band.s, D.BLKSIZE_s / 384, D.SBMAX_s), O(n3.npart_s < D.CBANDS), g3 = 0, s3 = 0; s3 < n3.npart_s; s3++) {\n      var w3;\n      R2 = u3;\n      m3[s3] >= _3 && (R2 = b3 * (m3[s3] - _3) / (i3 - _3) + u3 * (i3 - m3[s3]) / (i3 - _3)), v3[s3] = Math.pow(10, R2 / 10), w3 = x.MAX_VALUE;\n      for (M3 = 0; M3 < n3.numlines_s[s3]; M3++, g3++) {\n        var T3;\n        B3 = d3 * g3 / (1e3 * D.BLKSIZE_s);\n        T3 = this.ATHformula(1e3 * B3, e6) - 20, T3 = Math.pow(10, 0.1 * T3), w3 > (T3 *= n3.numlines_s[s3]) && (w3 = T3);\n      }\n      n3.ATH.cb_s[s3] = w3, w3 = 7 * m3[s3] / 12 - 7, m3[s3] > 12 && (w3 *= 1 + 3.1 * Math.log(1 + w3)), m3[s3] < 12 && (w3 *= 1 + 2.3 * Math.log(1 - w3)), w3 < -15 && (w3 = -15), w3 -= 8, n3.minval_s[s3] = Math.pow(10, w3 / 10) * n3.numlines_s[s3];\n    }\n    n3.s3_ss = ae2(n3.s3ind_s, n3.npart_s, m3, p3, v3, r3), l2 = Math.pow(10, 9 / 16), f2 = Math.pow(10, 1.5), c2 = Math.pow(10, 1.5), a2.init_fft(n3), n3.decay = Math.exp(-1 * t2 / (0.01 * d3 / 192)), A3 = 3.5, 0 != (2 & e6.exp_nspsytune) && (A3 = 1), Math.abs(e6.msfix) > 0 && (A3 = e6.msfix), e6.msfix = A3;\n    for (var E3 = 0; E3 < n3.npart_l; E3++) n3.s3ind[E3][1] > n3.npart_l - 1 && (n3.s3ind[E3][1] = n3.npart_l - 1);\n    var k3 = 576 * n3.mode_gr / d3;\n    if (n3.ATH.decay = Math.pow(10, -1.2 * k3), n3.ATH.adjust = 0.01, n3.ATH.adjustLimit = 1, O(n3.bo_l[D.SBMAX_l - 1] <= n3.npart_l), O(n3.bo_s[D.SBMAX_s - 1] <= n3.npart_s), -1 != e6.ATHtype) {\n      var P2 = e6.out_samplerate / D.BLKSIZE, I2 = 0;\n      for (B3 = 0, s3 = 0; s3 < D.BLKSIZE / 2; ++s3) B3 += P2, n3.ATH.eql_w[s3] = 1 / Math.pow(10, this.ATHformula(B3, e6) / 10), I2 += n3.ATH.eql_w[s3];\n      for (I2 = 1 / I2, s3 = D.BLKSIZE / 2; --s3 >= 0; ) n3.ATH.eql_w[s3] *= I2;\n    }\n    for (E3 = g3 = 0; E3 < n3.npart_s; ++E3) for (s3 = 0; s3 < n3.numlines_s[E3]; ++s3) ++g3;\n    for (E3 = g3 = 0; E3 < n3.npart_l; ++E3) for (s3 = 0; s3 < n3.numlines_l[E3]; ++s3) ++g3;\n    for (g3 = 0, s3 = 0; s3 < n3.npart_l; s3++) {\n      B3 = d3 * (g3 + n3.numlines_l[s3] / 2) / (1 * D.BLKSIZE);\n      n3.mld_cb_l[s3] = te2(B3), g3 += n3.numlines_l[s3];\n    }\n    for (; s3 < D.CBANDS; ++s3) n3.mld_cb_l[s3] = 1;\n    for (g3 = 0, s3 = 0; s3 < n3.npart_s; s3++) {\n      B3 = d3 * (g3 + n3.numlines_s[s3] / 2) / (1 * D.BLKSIZE_s);\n      n3.mld_cb_s[s3] = te2(B3), g3 += n3.numlines_s[s3];\n    }\n    for (; s3 < D.CBANDS; ++s3) n3.mld_cb_s[s3] = 1;\n    return 0;\n  }, this.ATHformula = function(e6, a3) {\n    var t3;\n    switch (a3.ATHtype) {\n      case 0:\n        t3 = se2(e6, 9);\n        break;\n      case 1:\n        t3 = se2(e6, -1);\n        break;\n      case 2:\n      default:\n        t3 = se2(e6, 0);\n        break;\n      case 3:\n        t3 = se2(e6, 1) + 6;\n        break;\n      case 4:\n        t3 = se2(e6, a3.ATHcurve);\n    }\n    return t3;\n  };\n}, q = R;\nvar F = function() {\n  this.class_id = 0, this.num_samples = 0, this.num_channels = 0, this.in_samplerate = 0, this.out_samplerate = 0, this.scale = 0, this.scale_left = 0, this.scale_right = 0, this.analysis = false, this.bWriteVbrTag = false, this.decode_only = false, this.quality = 0, this.mode = q.STEREO, this.force_ms = false, this.free_format = false, this.findReplayGain = false, this.decode_on_the_fly = false, this.write_id3tag_automatic = false, this.brate = 0, this.compression_ratio = 0, this.copyright = 0, this.original = 0, this.extension = 0, this.emphasis = 0, this.error_protection = 0, this.strict_ISO = false, this.disable_reservoir = false, this.quant_comp = 0, this.quant_comp_short = 0, this.experimentalY = false, this.experimentalZ = 0, this.exp_nspsytune = 0, this.preset = 0, this.VBR = null, this.VBR_q_frac = 0, this.VBR_q = 0, this.VBR_mean_bitrate_kbps = 0, this.VBR_min_bitrate_kbps = 0, this.VBR_max_bitrate_kbps = 0, this.VBR_hard_min = 0, this.lowpassfreq = 0, this.highpassfreq = 0, this.lowpasswidth = 0, this.highpasswidth = 0, this.maskingadjust = 0, this.maskingadjust_short = 0, this.ATHonly = false, this.ATHshort = false, this.noATH = false, this.ATHtype = 0, this.ATHcurve = 0, this.ATHlower = 0, this.athaa_type = 0, this.athaa_loudapprox = 0, this.athaa_sensitivity = 0, this.short_blocks = null, this.useTemporal = false, this.interChRatio = 0, this.msfix = 0, this.tune = false, this.tune_value_a = 0, this.version = 0, this.encoder_delay = 0, this.encoder_padding = 0, this.framesize = 0, this.frameNum = 0, this.lame_allocated_gfp = 0, this.internal_flags = null;\n}, C = A(), j = {};\nj.SFBMAX = 3 * C.SBMAX_s;\nvar G = j, z = p, K = z.new_float, Z = z.new_int, U = G;\nvar Q = function() {\n  this.xr = K(576), this.l3_enc = Z(576), this.scalefac = Z(U.SFBMAX), this.xrpow_max = 0, this.part2_3_length = 0, this.big_values = 0, this.count1 = 0, this.global_gain = 0, this.scalefac_compress = 0, this.block_type = 0, this.mixed_block_flag = 0, this.table_select = Z(3), this.subblock_gain = Z(4), this.region0_count = 0, this.region1_count = 0, this.preflag = 0, this.scalefac_scale = 0, this.count1table_select = 0, this.part2_length = 0, this.sfb_lmax = 0, this.sfb_smin = 0, this.psy_lmax = 0, this.sfbmax = 0, this.psymax = 0, this.sfbdivide = 0, this.width = Z(U.SFBMAX), this.window = Z(U.SFBMAX), this.count1bits = 0, this.sfb_partition_table = null, this.slen = Z(4), this.max_nonzero_coeff = 0;\n  var e5 = this;\n  function a2(e6) {\n    return new Int32Array(e6);\n  }\n  this.assign = function(t2) {\n    var s2;\n    e5.xr = (s2 = t2.xr, new Float32Array(s2)), e5.l3_enc = a2(t2.l3_enc), e5.scalefac = a2(t2.scalefac), e5.xrpow_max = t2.xrpow_max, e5.part2_3_length = t2.part2_3_length, e5.big_values = t2.big_values, e5.count1 = t2.count1, e5.global_gain = t2.global_gain, e5.scalefac_compress = t2.scalefac_compress, e5.block_type = t2.block_type, e5.mixed_block_flag = t2.mixed_block_flag, e5.table_select = a2(t2.table_select), e5.subblock_gain = a2(t2.subblock_gain), e5.region0_count = t2.region0_count, e5.region1_count = t2.region1_count, e5.preflag = t2.preflag, e5.scalefac_scale = t2.scalefac_scale, e5.count1table_select = t2.count1table_select, e5.part2_length = t2.part2_length, e5.sfb_lmax = t2.sfb_lmax, e5.sfb_smin = t2.sfb_smin, e5.psy_lmax = t2.psy_lmax, e5.sfbmax = t2.sfbmax, e5.psymax = t2.psymax, e5.sfbdivide = t2.sfbdivide, e5.width = a2(t2.width), e5.window = a2(t2.window), e5.count1bits = t2.count1bits, e5.sfb_partition_table = t2.sfb_partition_table.slice(0), e5.slen = a2(t2.slen), e5.max_nonzero_coeff = t2.max_nonzero_coeff;\n  };\n}, W = p.new_int, J = Q;\nvar $ = function() {\n  this.tt = [[null, null], [null, null]], this.main_data_begin = 0, this.private_bits = 0, this.resvDrain_pre = 0, this.resvDrain_post = 0, this.scfsi = [W(4), W(4)];\n  for (var e5 = 0; e5 < 2; e5++) for (var a2 = 0; a2 < 2; a2++) this.tt[e5][a2] = new J();\n}, ee = p, ae = ee.System, te = ee.new_int, se = A();\nvar ne = function(e5, a2, t2, s2) {\n  this.l = te(1 + se.SBMAX_l), this.s = te(1 + se.SBMAX_s), this.psfb21 = te(1 + se.PSFB21), this.psfb12 = te(1 + se.PSFB12);\n  var n2 = this.l, r2 = this.s;\n  4 == arguments.length && (this.arrL = arguments[0], this.arrS = arguments[1], this.arr21 = arguments[2], this.arr12 = arguments[3], ae.arraycopy(this.arrL, 0, n2, 0, Math.min(this.arrL.length, this.l.length)), ae.arraycopy(this.arrS, 0, r2, 0, Math.min(this.arrS.length, this.s.length)), ae.arraycopy(this.arr21, 0, this.psfb21, 0, Math.min(this.arr21.length, this.psfb21.length)), ae.arraycopy(this.arr12, 0, this.psfb12, 0, Math.min(this.arr12.length, this.psfb12.length)));\n}, re = p, _e = re.new_float, ie = re.new_float_n, oe = re.new_int, le = A();\nvar fe = function() {\n  this.last_en_subshort = ie([4, 9]), this.lastAttacks = oe(4), this.pefirbuf = _e(19), this.longfact = _e(le.SBMAX_l), this.shortfact = _e(le.SBMAX_s), this.attackthre = 0, this.attackthre_s = 0;\n};\nvar ce = function() {\n  this.sum = 0, this.seen = 0, this.want = 0, this.pos = 0, this.size = 0, this.bag = null, this.nVbrNumFrames = 0, this.nBytesWritten = 0, this.TotalFrameSize = 0;\n}, he = p, ue = he.new_byte, be = he.new_double, me = he.new_float, pe = he.new_float_n, ve = he.new_int, de = he.new_int_n, ge = $, Se = ne, Re = fe, Ae = ce, Me = v(), Be = A(), we = G;\nfunction Te() {\n  function e5() {\n    this.write_timing = 0, this.ptr = 0, this.buf = ue(40);\n  }\n  this.Class_ID = 0, this.lame_encode_frame_init = 0, this.iteration_init_init = 0, this.fill_buffer_resample_init = 0, this.mfbuf = pe([2, Te.MFSIZE]), this.mode_gr = 0, this.channels_in = 0, this.channels_out = 0, this.resample_ratio = 0, this.mf_samples_to_encode = 0, this.mf_size = 0, this.VBR_min_bitrate = 0, this.VBR_max_bitrate = 0, this.bitrate_index = 0, this.samplerate_index = 0, this.mode_ext = 0, this.lowpass1 = 0, this.lowpass2 = 0, this.highpass1 = 0, this.highpass2 = 0, this.noise_shaping = 0, this.noise_shaping_amp = 0, this.substep_shaping = 0, this.psymodel = 0, this.noise_shaping_stop = 0, this.subblock_gain = 0, this.use_best_huffman = 0, this.full_outer_loop = 0, this.l3_side = new ge(), this.ms_ratio = me(2), this.padding = 0, this.frac_SpF = 0, this.slot_lag = 0, this.tag_spec = null, this.nMusicCRC = 0, this.OldValue = ve(2), this.CurrentStep = ve(2), this.masking_lower = 0, this.bv_scf = ve(576), this.pseudohalf = ve(we.SFBMAX), this.sfb21_extra = false, this.inbuf_old = new Array(2), this.blackfilt = new Array(2 * Te.BPC + 1), this.itime = be(2), this.sideinfo_len = 0, this.sb_sample = pe([2, 2, 18, Be.SBLIMIT]), this.amp_filter = me(32), this.header = new Array(Te.MAX_HEADER_BUF), this.h_ptr = 0, this.w_ptr = 0, this.ancillary_flag = 0, this.ResvSize = 0, this.ResvMax = 0, this.scalefac_band = new Se(), this.minval_l = me(Be.CBANDS), this.minval_s = me(Be.CBANDS), this.nb_1 = pe([4, Be.CBANDS]), this.nb_2 = pe([4, Be.CBANDS]), this.nb_s1 = pe([4, Be.CBANDS]), this.nb_s2 = pe([4, Be.CBANDS]), this.s3_ss = null, this.s3_ll = null, this.decay = 0, this.thm = new Array(4), this.en = new Array(4), this.tot_ener = me(4), this.loudness_sq = pe([2, 2]), this.loudness_sq_save = me(2), this.mld_l = me(Be.SBMAX_l), this.mld_s = me(Be.SBMAX_s), this.bm_l = ve(Be.SBMAX_l), this.bo_l = ve(Be.SBMAX_l), this.bm_s = ve(Be.SBMAX_s), this.bo_s = ve(Be.SBMAX_s), this.npart_l = 0, this.npart_s = 0, this.s3ind = de([Be.CBANDS, 2]), this.s3ind_s = de([Be.CBANDS, 2]), this.numlines_s = ve(Be.CBANDS), this.numlines_l = ve(Be.CBANDS), this.rnumlines_l = me(Be.CBANDS), this.mld_cb_l = me(Be.CBANDS), this.mld_cb_s = me(Be.CBANDS), this.numlines_s_num1 = 0, this.numlines_l_num1 = 0, this.pe = me(4), this.ms_ratio_s_old = 0, this.ms_ratio_l_old = 0, this.ms_ener_ratio_old = 0, this.blocktype_old = ve(2), this.nsPsy = new Re(), this.VBR_seek_table = new Ae(), this.ATH = null, this.PSY = null, this.nogap_total = 0, this.nogap_current = 0, this.decode_on_the_fly = true, this.findReplayGain = true, this.findPeakSample = true, this.PeakSample = 0, this.RadioGain = 0, this.AudiophileGain = 0, this.rgdata = null, this.noclipGainChange = 0, this.noclipScale = 0, this.bitrate_stereoMode_Hist = de([16, 5]), this.bitrate_blockType_Hist = de([16, 6]), this.pinfo = null, this.hip = null, this.in_buffer_nsamples = 0, this.in_buffer_0 = null, this.in_buffer_1 = null, this.iteration_loop = null;\n  for (var a2 = 0; a2 < this.en.length; a2++) this.en[a2] = new Me();\n  for (a2 = 0; a2 < this.thm.length; a2++) this.thm[a2] = new Me();\n  for (a2 = 0; a2 < this.header.length; a2++) this.header[a2] = new e5();\n}\nTe.MFSIZE = 3456 + Be.ENCDELAY - Be.MDCTDELAY, Te.MAX_HEADER_BUF = 256, Te.MAX_BITS_PER_CHANNEL = 4095, Te.MAX_BITS_PER_GRANULE = 7680, Te.BPC = 320;\nvar Ee = Te, ke = p.new_float, ye = A();\nvar xe = function() {\n  this.useAdjust = 0, this.aaSensitivityP = 0, this.adjust = 0, this.adjustLimit = 0, this.decay = 0, this.floor = 0, this.l = ke(ye.SBMAX_l), this.s = ke(ye.SBMAX_s), this.psfb21 = ke(ye.PSFB21), this.psfb12 = ke(ye.PSFB12), this.cb_l = ke(ye.CBANDS), this.cb_s = ke(ye.CBANDS), this.eql_w = ke(ye.BLKSIZE / 2);\n}, Pe = p, Ie = Pe.System, He = Pe.Arrays;\nfunction Ve() {\n  var e5 = Ve.RMS_WINDOW_TIME_NUMERATOR, a2 = Ve.RMS_WINDOW_TIME_DENOMINATOR, t2 = [[0.038575994352, -3.84664617118067, -0.02160367184185, 7.81501653005538, -0.00123395316851, -11.34170355132042, -9291677959e-14, 13.05504219327545, -0.01655260341619, -12.28759895145294, 0.02161526843274, 9.4829380631979, -0.02074045215285, -5.87257861775999, 0.00594298065125, 2.75465861874613, 0.00306428023191, -0.86984376593551, 12025322027e-14, 0.13919314567432, 0.00288463683916], [0.0541865640643, -3.47845948550071, -0.02911007808948, 6.36317777566148, -0.00848709379851, -8.54751527471874, -0.00851165645469, 9.4769360780128, -0.00834990904936, -8.81498681370155, 0.02245293253339, 6.85401540936998, -0.02596338512915, -4.39470996079559, 0.01624864962975, 2.19611684890774, -0.00240879051584, -0.75104302451432, 0.00674613682247, 0.13149317958808, -0.00187763777362], [0.15457299681924, -2.37898834973084, -0.09331049056315, 2.84868151156327, -0.06247880153653, -2.64577170229825, 0.02163541888798, 2.23697657451713, -0.05588393329856, -1.67148153367602, 0.04781476674921, 1.00595954808547, 0.00222312597743, -0.45953458054983, 0.03174092540049, 0.16378164858596, -0.01390589421898, -0.05032077717131, 0.00651420667831, 0.0234789740702, -0.00881362733839], [0.30296907319327, -1.61273165137247, -0.22613988682123, 1.0797749225997, -0.08587323730772, -0.2565625775407, 0.03282930172664, -0.1627671912044, -0.00915702933434, -0.22638893773906, -0.02364141202522, 0.39120800788284, -0.00584456039913, -0.22138138954925, 0.06276101321749, 0.04500235387352, -828086748e-14, 0.02005851806501, 0.00205861885564, 0.00302439095741, -0.02950134983287], [0.33642304856132, -1.49858979367799, -0.2557224142557, 0.87350271418188, -0.11828570177555, 0.12205022308084, 0.11921148675203, -0.80774944671438, -0.07834489609479, 0.47854794562326, -0.0046997791438, -0.12453458140019, -0.0058950022444, -0.04067510197014, 0.05724228140351, 0.08333755284107, 0.00832043980773, -0.04237348025746, -0.0163538138454, 0.02977207319925, -0.0176017656815], [0.4491525660845, -0.62820619233671, -0.14351757464547, 0.29661783706366, -0.22784394429749, -0.372563729424, -0.01419140100551, 0.00213767857124, 0.04078262797139, -0.42029820170918, -0.12398163381748, 0.22199650564824, 0.04097565135648, 0.00613424350682, 0.10478503600251, 0.06747620744683, -0.01863887810927, 0.05784820375801, -0.03193428438915, 0.03222754072173, 0.00541907748707], [0.56619470757641, -1.04800335126349, -0.75464456939302, 0.29156311971249, 0.1624213774223, -0.26806001042947, 0.16744243493672, 0.00819999645858, -0.18901604199609, 0.45054734505008, 0.3093178284183, -0.33032403314006, -0.27562961986224, 0.0673936833311, 0.00647310677246, -0.04784254229033, 0.08647503780351, 0.01639907836189, -0.0378898455484, 0.01807364323573, -0.00588215443421], [0.58100494960553, -0.51035327095184, -0.53174909058578, -0.31863563325245, -0.14289799034253, -0.20256413484477, 0.17520704835522, 0.1472815413433, 0.02377945217615, 0.38952639978999, 0.15558449135573, -0.23313271880868, -0.25344790059353, -0.05246019024463, 0.01628462406333, -0.02505961724053, 0.06920467763959, 0.02442357316099, -0.03721611395801, 0.01818801111503, -0.00749618797172], [0.53648789255105, -0.2504987195602, -0.42163034350696, -0.43193942311114, -0.00275953611929, -0.03424681017675, 0.04267842219415, -0.04678328784242, -0.10214864179676, 0.26408300200955, 0.14590772289388, 0.15113130533216, -0.02459864859345, -0.17556493366449, -0.11202315195388, -0.18823009262115, -0.04060034127, 0.05477720428674, 0.0478866554818, 0.0470440968812, -0.02217936801134]], s2 = [[0.98621192462708, -1.97223372919527, -1.97242384925416, 0.97261396931306, 0.98621192462708], [0.98500175787242, -1.96977855582618, -1.97000351574484, 0.9702284756635, 0.98500175787242], [0.97938932735214, -1.95835380975398, -1.95877865470428, 0.95920349965459, 0.97938932735214], [0.97531843204928, -1.95002759149878, -1.95063686409857, 0.95124613669835, 0.97531843204928], [0.97316523498161, -1.94561023566527, -1.94633046996323, 0.94705070426118, 0.97316523498161], [0.96454515552826, -1.92783286977036, -1.92909031105652, 0.93034775234268, 0.96454515552826], [0.96009142950541, -1.91858953033784, -1.92018285901082, 0.92177618768381, 0.96009142950541], [0.95856916599601, -1.9154210807478, -1.91713833199203, 0.91885558323625, 0.95856916599601], [0.94597685600279, -1.88903307939452, -1.89195371200558, 0.89487434461664, 0.94597685600279]];\n  function n2(e6, a3, t3, s3, n3, r3) {\n    for (; 0 != n3--; ) t3[s3] = 1e-10 + e6[a3 + 0] * r3[0] - t3[s3 - 1] * r3[1] + e6[a3 - 1] * r3[2] - t3[s3 - 2] * r3[3] + e6[a3 - 2] * r3[4] - t3[s3 - 3] * r3[5] + e6[a3 - 3] * r3[6] - t3[s3 - 4] * r3[7] + e6[a3 - 4] * r3[8] - t3[s3 - 5] * r3[9] + e6[a3 - 5] * r3[10] - t3[s3 - 6] * r3[11] + e6[a3 - 6] * r3[12] - t3[s3 - 7] * r3[13] + e6[a3 - 7] * r3[14] - t3[s3 - 8] * r3[15] + e6[a3 - 8] * r3[16] - t3[s3 - 9] * r3[17] + e6[a3 - 9] * r3[18] - t3[s3 - 10] * r3[19] + e6[a3 - 10] * r3[20], ++s3, ++a3;\n  }\n  function r2(e6, a3, t3, s3, n3, r3) {\n    for (; 0 != n3--; ) t3[s3] = e6[a3 + 0] * r3[0] - t3[s3 - 1] * r3[1] + e6[a3 - 1] * r3[2] - t3[s3 - 2] * r3[3] + e6[a3 - 2] * r3[4], ++s3, ++a3;\n  }\n  function _2(e6) {\n    return e6 * e6;\n  }\n  this.InitGainAnalysis = function(t3, s3) {\n    return function(t4, s4) {\n      for (var n3 = 0; n3 < MAX_ORDER; n3++) t4.linprebuf[n3] = t4.lstepbuf[n3] = t4.loutbuf[n3] = t4.rinprebuf[n3] = t4.rstepbuf[n3] = t4.routbuf[n3] = 0;\n      switch (0 | s4) {\n        case 48e3:\n          t4.reqindex = 0;\n          break;\n        case 44100:\n          t4.reqindex = 1;\n          break;\n        case 32e3:\n          t4.reqindex = 2;\n          break;\n        case 24e3:\n          t4.reqindex = 3;\n          break;\n        case 22050:\n          t4.reqindex = 4;\n          break;\n        case 16e3:\n          t4.reqindex = 5;\n          break;\n        case 12e3:\n          t4.reqindex = 6;\n          break;\n        case 11025:\n          t4.reqindex = 7;\n          break;\n        case 8e3:\n          t4.reqindex = 8;\n          break;\n        default:\n          return INIT_GAIN_ANALYSIS_ERROR;\n      }\n      return t4.sampleWindow = 0 | (s4 * e5 + a2 - 1) / a2, t4.lsum = 0, t4.rsum = 0, t4.totsamp = 0, He.ill(t4.A, 0), INIT_GAIN_ANALYSIS_OK;\n    }(t3, s3) != INIT_GAIN_ANALYSIS_OK ? INIT_GAIN_ANALYSIS_ERROR : (t3.linpre = MAX_ORDER, t3.rinpre = MAX_ORDER, t3.lstep = MAX_ORDER, t3.rstep = MAX_ORDER, t3.lout = MAX_ORDER, t3.rout = MAX_ORDER, He.fill(t3.B, 0), INIT_GAIN_ANALYSIS_OK);\n  }, this.AnalyzeSamples = function(e6, a3, i2, o2, l2, f2, c2) {\n    var h2, u2, b2, m2, p2, v2, d2;\n    if (0 == f2) return GAIN_ANALYSIS_OK;\n    switch (d2 = 0, p2 = f2, c2) {\n      case 1:\n        o2 = a3, l2 = i2;\n        break;\n      case 2:\n        break;\n      default:\n        return GAIN_ANALYSIS_ERROR;\n    }\n    for (f2 < MAX_ORDER ? (Ie.arraycopy(a3, i2, e6.linprebuf, MAX_ORDER, f2), Ie.arraycopy(o2, l2, e6.rinprebuf, MAX_ORDER, f2)) : (Ie.arraycopy(a3, i2, e6.linprebuf, MAX_ORDER, MAX_ORDER), Ie.arraycopy(o2, l2, e6.rinprebuf, MAX_ORDER, MAX_ORDER)); p2 > 0; ) {\n      v2 = p2 > e6.sampleWindow - e6.totsamp ? e6.sampleWindow - e6.totsamp : p2, d2 < MAX_ORDER ? (h2 = e6.linpre + d2, u2 = e6.linprebuf, b2 = e6.rinpre + d2, m2 = e6.rinprebuf, v2 > MAX_ORDER - d2 && (v2 = MAX_ORDER - d2)) : (h2 = i2 + d2, u2 = a3, b2 = l2 + d2, m2 = o2), n2(u2, h2, e6.lstepbuf, e6.lstep + e6.totsamp, v2, t2[e6.reqindex]), n2(m2, b2, e6.rstepbuf, e6.rstep + e6.totsamp, v2, t2[e6.reqindex]), r2(e6.lstepbuf, e6.lstep + e6.totsamp, e6.loutbuf, e6.lout + e6.totsamp, v2, s2[e6.reqindex]), r2(e6.rstepbuf, e6.rstep + e6.totsamp, e6.routbuf, e6.rout + e6.totsamp, v2, s2[e6.reqindex]), h2 = e6.lout + e6.totsamp, u2 = e6.loutbuf, b2 = e6.rout + e6.totsamp, m2 = e6.routbuf;\n      for (var g2 = v2 % 8; 0 != g2--; ) e6.lsum += _2(u2[h2++]), e6.rsum += _2(m2[b2++]);\n      for (g2 = v2 / 8; 0 != g2--; ) e6.lsum += _2(u2[h2 + 0]) + _2(u2[h2 + 1]) + _2(u2[h2 + 2]) + _2(u2[h2 + 3]) + _2(u2[h2 + 4]) + _2(u2[h2 + 5]) + _2(u2[h2 + 6]) + _2(u2[h2 + 7]), h2 += 8, e6.rsum += _2(m2[b2 + 0]) + _2(m2[b2 + 1]) + _2(m2[b2 + 2]) + _2(m2[b2 + 3]) + _2(m2[b2 + 4]) + _2(m2[b2 + 5]) + _2(m2[b2 + 6]) + _2(m2[b2 + 7]), b2 += 8;\n      if (p2 -= v2, d2 += v2, e6.totsamp += v2, e6.totsamp == e6.sampleWindow) {\n        var S2 = 10 * Ve.STEPS_per_dB * Math.log10((e6.lsum + e6.rsum) / e6.totsamp * 0.5 + 1e-37), R2 = S2 <= 0 ? 0 : 0 | S2;\n        R2 >= e6.A.length && (R2 = e6.A.length - 1), e6.A[R2]++, e6.lsum = e6.rsum = 0, Ie.arraycopy(e6.loutbuf, e6.totsamp, e6.loutbuf, 0, MAX_ORDER), Ie.arraycopy(e6.routbuf, e6.totsamp, e6.routbuf, 0, MAX_ORDER), Ie.arraycopy(e6.lstepbuf, e6.totsamp, e6.lstepbuf, 0, MAX_ORDER), Ie.arraycopy(e6.rstepbuf, e6.totsamp, e6.rstepbuf, 0, MAX_ORDER), e6.totsamp = 0;\n      }\n      if (e6.totsamp > e6.sampleWindow) return GAIN_ANALYSIS_ERROR;\n    }\n    return f2 < MAX_ORDER ? (Ie.arraycopy(e6.linprebuf, f2, e6.linprebuf, 0, MAX_ORDER - f2), Ie.arraycopy(e6.rinprebuf, f2, e6.rinprebuf, 0, MAX_ORDER - f2), Ie.arraycopy(a3, i2, e6.linprebuf, MAX_ORDER - f2, f2), Ie.arraycopy(o2, l2, e6.rinprebuf, MAX_ORDER - f2, f2)) : (Ie.arraycopy(a3, i2 + f2 - MAX_ORDER, e6.linprebuf, 0, MAX_ORDER), Ie.arraycopy(o2, l2 + f2 - MAX_ORDER, e6.rinprebuf, 0, MAX_ORDER)), GAIN_ANALYSIS_OK;\n  }, this.GetTitleGain = function(e6) {\n    for (var a3 = function(e7, a4) {\n      var t4, s3 = 0;\n      for (t4 = 0; t4 < a4; t4++) s3 += e7[t4];\n      if (0 == s3) return GAIN_NOT_ENOUGH_SAMPLES;\n      var n3 = 0 | Math.ceil(s3 * (1 - 0.95));\n      for (t4 = a4; t4-- > 0 && !((n3 -= e7[t4]) <= 0); ) ;\n      return 64.82 - t4 / Ve.STEPS_per_dB;\n    }(e6.A, e6.A.length), t3 = 0; t3 < e6.A.length; t3++) e6.B[t3] += e6.A[t3], e6.A[t3] = 0;\n    for (t3 = 0; t3 < MAX_ORDER; t3++) e6.linprebuf[t3] = e6.lstepbuf[t3] = e6.loutbuf[t3] = e6.rinprebuf[t3] = e6.rstepbuf[t3] = e6.routbuf[t3] = 0;\n    return e6.totsamp = 0, e6.lsum = e6.rsum = 0, a3;\n  };\n}\nVe.STEPS_per_dB = 100, Ve.MAX_dB = 120, Ve.GAIN_NOT_ENOUGH_SAMPLES = -24601, Ve.GAIN_ANALYSIS_ERROR = 0, Ve.GAIN_ANALYSIS_OK = 1, Ve.INIT_GAIN_ANALYSIS_ERROR = 0, Ve.INIT_GAIN_ANALYSIS_OK = 1, Ve.YULE_ORDER = 10, Ve.MAX_ORDER = Ve.YULE_ORDER, Ve.MAX_SAMP_FREQ = 48e3, Ve.RMS_WINDOW_TIME_NUMERATOR = 1, Ve.RMS_WINDOW_TIME_DENOMINATOR = 20, Ve.MAX_SAMPLES_PER_WINDOW = Ve.MAX_SAMP_FREQ * Ve.RMS_WINDOW_TIME_NUMERATOR / Ve.RMS_WINDOW_TIME_DENOMINATOR + 1;\nvar Le = Ve, Ne = p, Oe = Ne.new_float, Xe = Ne.new_int, De = Le;\nvar Ye = function() {\n  this.linprebuf = Oe(2 * De.MAX_ORDER), this.linpre = 0, this.lstepbuf = Oe(De.MAX_SAMPLES_PER_WINDOW + De.MAX_ORDER), this.lstep = 0, this.loutbuf = Oe(De.MAX_SAMPLES_PER_WINDOW + De.MAX_ORDER), this.lout = 0, this.rinprebuf = Oe(2 * De.MAX_ORDER), this.rinpre = 0, this.rstepbuf = Oe(De.MAX_SAMPLES_PER_WINDOW + De.MAX_ORDER), this.rstep = 0, this.routbuf = Oe(De.MAX_SAMPLES_PER_WINDOW + De.MAX_ORDER), this.rout = 0, this.sampleWindow = 0, this.totsamp = 0, this.lsum = 0, this.rsum = 0, this.freqindex = 0, this.first = 0, this.A = Xe(0 | De.STEPS_per_dB * De.MAX_dB), this.B = Xe(0 | De.STEPS_per_dB * De.MAX_dB);\n};\nvar qe = function(e5) {\n  this.bits = e5;\n}, Fe = p, Ce = Fe.new_float, je = Fe.new_int, Ge = Fe.assert, ze = qe, Ke = A(), Ze = G, Ue = Ee;\nvar Qe = function(e5) {\n  var a2 = e5;\n  this.quantize = a2, this.iteration_loop = function(e6, a3, t2, s2) {\n    var n2, r2 = e6.internal_flags, _2 = Ce(Ze.SFBMAX), i2 = Ce(576), o2 = je(2), l2 = 0, f2 = r2.l3_side, c2 = new ze(l2);\n    this.quantize.rv.ResvFrameBegin(e6, c2), l2 = c2.bits;\n    for (var h2 = 0; h2 < r2.mode_gr; h2++) {\n      n2 = this.quantize.qupvt.on_pe(e6, a3, o2, l2, h2, h2), r2.mode_ext == Ke.MPG_MD_MS_LR && (this.quantize.ms_convert(r2.l3_side, h2), this.quantize.qupvt.reduce_side(o2, t2[h2], l2, n2));\n      for (var u2 = 0; u2 < r2.channels_out; u2++) {\n        var b2, m2, p2 = f2.tt[h2][u2];\n        p2.block_type != Ke.SHORT_TYPE ? (b2 = 0, m2 = r2.PSY.mask_adjust - b2) : (b2 = 0, m2 = r2.PSY.mask_adjust_short - b2), r2.masking_lower = Math.pow(10, 0.1 * m2), this.quantize.init_outer_loop(r2, p2), this.quantize.init_xrpow(r2, p2, i2) && (this.quantize.qupvt.calc_xmin(e6, s2[h2][u2], p2, _2), this.quantize.outer_loop(e6, p2, _2, i2, u2, o2[u2])), this.quantize.iteration_finish_one(r2, h2, u2), Ge(p2.part2_3_length <= Ue.MAX_BITS_PER_CHANNEL), Ge(p2.part2_3_length <= o2[u2]);\n      }\n    }\n    this.quantize.rv.ResvFrameEnd(r2, l2);\n  };\n};\nfunction We(e5, a2, t2, s2) {\n  this.xlen = e5, this.linmax = a2, this.table = t2, this.hlen = s2;\n}\nvar Je = { t1HB: [1, 1, 1, 0], t2HB: [1, 2, 1, 3, 1, 1, 3, 2, 0], t3HB: [3, 2, 1, 1, 1, 1, 3, 2, 0], t5HB: [1, 2, 6, 5, 3, 1, 4, 4, 7, 5, 7, 1, 6, 1, 1, 0], t6HB: [7, 3, 5, 1, 6, 2, 3, 2, 5, 4, 4, 1, 3, 3, 2, 0], t7HB: [1, 2, 10, 19, 16, 10, 3, 3, 7, 10, 5, 3, 11, 4, 13, 17, 8, 4, 12, 11, 18, 15, 11, 2, 7, 6, 9, 14, 3, 1, 6, 4, 5, 3, 2, 0], t8HB: [3, 4, 6, 18, 12, 5, 5, 1, 2, 16, 9, 3, 7, 3, 5, 14, 7, 3, 19, 17, 15, 13, 10, 4, 13, 5, 8, 11, 5, 1, 12, 4, 4, 1, 1, 0], t9HB: [7, 5, 9, 14, 15, 7, 6, 4, 5, 5, 6, 7, 7, 6, 8, 8, 8, 5, 15, 6, 9, 10, 5, 1, 11, 7, 9, 6, 4, 1, 14, 4, 6, 2, 6, 0], t10HB: [1, 2, 10, 23, 35, 30, 12, 17, 3, 3, 8, 12, 18, 21, 12, 7, 11, 9, 15, 21, 32, 40, 19, 6, 14, 13, 22, 34, 46, 23, 18, 7, 20, 19, 33, 47, 27, 22, 9, 3, 31, 22, 41, 26, 21, 20, 5, 3, 14, 13, 10, 11, 16, 6, 5, 1, 9, 8, 7, 8, 4, 4, 2, 0], t11HB: [3, 4, 10, 24, 34, 33, 21, 15, 5, 3, 4, 10, 32, 17, 11, 10, 11, 7, 13, 18, 30, 31, 20, 5, 25, 11, 19, 59, 27, 18, 12, 5, 35, 33, 31, 58, 30, 16, 7, 5, 28, 26, 32, 19, 17, 15, 8, 14, 14, 12, 9, 13, 14, 9, 4, 1, 11, 4, 6, 6, 6, 3, 2, 0], t12HB: [9, 6, 16, 33, 41, 39, 38, 26, 7, 5, 6, 9, 23, 16, 26, 11, 17, 7, 11, 14, 21, 30, 10, 7, 17, 10, 15, 12, 18, 28, 14, 5, 32, 13, 22, 19, 18, 16, 9, 5, 40, 17, 31, 29, 17, 13, 4, 2, 27, 12, 11, 15, 10, 7, 4, 1, 27, 12, 8, 12, 6, 3, 1, 0], t13HB: [1, 5, 14, 21, 34, 51, 46, 71, 42, 52, 68, 52, 67, 44, 43, 19, 3, 4, 12, 19, 31, 26, 44, 33, 31, 24, 32, 24, 31, 35, 22, 14, 15, 13, 23, 36, 59, 49, 77, 65, 29, 40, 30, 40, 27, 33, 42, 16, 22, 20, 37, 61, 56, 79, 73, 64, 43, 76, 56, 37, 26, 31, 25, 14, 35, 16, 60, 57, 97, 75, 114, 91, 54, 73, 55, 41, 48, 53, 23, 24, 58, 27, 50, 96, 76, 70, 93, 84, 77, 58, 79, 29, 74, 49, 41, 17, 47, 45, 78, 74, 115, 94, 90, 79, 69, 83, 71, 50, 59, 38, 36, 15, 72, 34, 56, 95, 92, 85, 91, 90, 86, 73, 77, 65, 51, 44, 43, 42, 43, 20, 30, 44, 55, 78, 72, 87, 78, 61, 46, 54, 37, 30, 20, 16, 53, 25, 41, 37, 44, 59, 54, 81, 66, 76, 57, 54, 37, 18, 39, 11, 35, 33, 31, 57, 42, 82, 72, 80, 47, 58, 55, 21, 22, 26, 38, 22, 53, 25, 23, 38, 70, 60, 51, 36, 55, 26, 34, 23, 27, 14, 9, 7, 34, 32, 28, 39, 49, 75, 30, 52, 48, 40, 52, 28, 18, 17, 9, 5, 45, 21, 34, 64, 56, 50, 49, 45, 31, 19, 12, 15, 10, 7, 6, 3, 48, 23, 20, 39, 36, 35, 53, 21, 16, 23, 13, 10, 6, 1, 4, 2, 16, 15, 17, 27, 25, 20, 29, 11, 17, 12, 16, 8, 1, 1, 0, 1], t15HB: [7, 12, 18, 53, 47, 76, 124, 108, 89, 123, 108, 119, 107, 81, 122, 63, 13, 5, 16, 27, 46, 36, 61, 51, 42, 70, 52, 83, 65, 41, 59, 36, 19, 17, 15, 24, 41, 34, 59, 48, 40, 64, 50, 78, 62, 80, 56, 33, 29, 28, 25, 43, 39, 63, 55, 93, 76, 59, 93, 72, 54, 75, 50, 29, 52, 22, 42, 40, 67, 57, 95, 79, 72, 57, 89, 69, 49, 66, 46, 27, 77, 37, 35, 66, 58, 52, 91, 74, 62, 48, 79, 63, 90, 62, 40, 38, 125, 32, 60, 56, 50, 92, 78, 65, 55, 87, 71, 51, 73, 51, 70, 30, 109, 53, 49, 94, 88, 75, 66, 122, 91, 73, 56, 42, 64, 44, 21, 25, 90, 43, 41, 77, 73, 63, 56, 92, 77, 66, 47, 67, 48, 53, 36, 20, 71, 34, 67, 60, 58, 49, 88, 76, 67, 106, 71, 54, 38, 39, 23, 15, 109, 53, 51, 47, 90, 82, 58, 57, 48, 72, 57, 41, 23, 27, 62, 9, 86, 42, 40, 37, 70, 64, 52, 43, 70, 55, 42, 25, 29, 18, 11, 11, 118, 68, 30, 55, 50, 46, 74, 65, 49, 39, 24, 16, 22, 13, 14, 7, 91, 44, 39, 38, 34, 63, 52, 45, 31, 52, 28, 19, 14, 8, 9, 3, 123, 60, 58, 53, 47, 43, 32, 22, 37, 24, 17, 12, 15, 10, 2, 1, 71, 37, 34, 30, 28, 20, 17, 26, 21, 16, 10, 6, 8, 6, 2, 0], t16HB: [1, 5, 14, 44, 74, 63, 110, 93, 172, 149, 138, 242, 225, 195, 376, 17, 3, 4, 12, 20, 35, 62, 53, 47, 83, 75, 68, 119, 201, 107, 207, 9, 15, 13, 23, 38, 67, 58, 103, 90, 161, 72, 127, 117, 110, 209, 206, 16, 45, 21, 39, 69, 64, 114, 99, 87, 158, 140, 252, 212, 199, 387, 365, 26, 75, 36, 68, 65, 115, 101, 179, 164, 155, 264, 246, 226, 395, 382, 362, 9, 66, 30, 59, 56, 102, 185, 173, 265, 142, 253, 232, 400, 388, 378, 445, 16, 111, 54, 52, 100, 184, 178, 160, 133, 257, 244, 228, 217, 385, 366, 715, 10, 98, 48, 91, 88, 165, 157, 148, 261, 248, 407, 397, 372, 380, 889, 884, 8, 85, 84, 81, 159, 156, 143, 260, 249, 427, 401, 392, 383, 727, 713, 708, 7, 154, 76, 73, 141, 131, 256, 245, 426, 406, 394, 384, 735, 359, 710, 352, 11, 139, 129, 67, 125, 247, 233, 229, 219, 393, 743, 737, 720, 885, 882, 439, 4, 243, 120, 118, 115, 227, 223, 396, 746, 742, 736, 721, 712, 706, 223, 436, 6, 202, 224, 222, 218, 216, 389, 386, 381, 364, 888, 443, 707, 440, 437, 1728, 4, 747, 211, 210, 208, 370, 379, 734, 723, 714, 1735, 883, 877, 876, 3459, 865, 2, 377, 369, 102, 187, 726, 722, 358, 711, 709, 866, 1734, 871, 3458, 870, 434, 0, 12, 10, 7, 11, 10, 17, 11, 9, 13, 12, 10, 7, 5, 3, 1, 3], t24HB: [15, 13, 46, 80, 146, 262, 248, 434, 426, 669, 653, 649, 621, 517, 1032, 88, 14, 12, 21, 38, 71, 130, 122, 216, 209, 198, 327, 345, 319, 297, 279, 42, 47, 22, 41, 74, 68, 128, 120, 221, 207, 194, 182, 340, 315, 295, 541, 18, 81, 39, 75, 70, 134, 125, 116, 220, 204, 190, 178, 325, 311, 293, 271, 16, 147, 72, 69, 135, 127, 118, 112, 210, 200, 188, 352, 323, 306, 285, 540, 14, 263, 66, 129, 126, 119, 114, 214, 202, 192, 180, 341, 317, 301, 281, 262, 12, 249, 123, 121, 117, 113, 215, 206, 195, 185, 347, 330, 308, 291, 272, 520, 10, 435, 115, 111, 109, 211, 203, 196, 187, 353, 332, 313, 298, 283, 531, 381, 17, 427, 212, 208, 205, 201, 193, 186, 177, 169, 320, 303, 286, 268, 514, 377, 16, 335, 199, 197, 191, 189, 181, 174, 333, 321, 305, 289, 275, 521, 379, 371, 11, 668, 184, 183, 179, 175, 344, 331, 314, 304, 290, 277, 530, 383, 373, 366, 10, 652, 346, 171, 168, 164, 318, 309, 299, 287, 276, 263, 513, 375, 368, 362, 6, 648, 322, 316, 312, 307, 302, 292, 284, 269, 261, 512, 376, 370, 364, 359, 4, 620, 300, 296, 294, 288, 282, 273, 266, 515, 380, 374, 369, 365, 361, 357, 2, 1033, 280, 278, 274, 267, 264, 259, 382, 378, 372, 367, 363, 360, 358, 356, 0, 43, 20, 19, 17, 15, 13, 11, 9, 7, 6, 4, 7, 5, 3, 1, 3], t32HB: [1, 10, 8, 20, 12, 20, 16, 32, 14, 12, 24, 0, 28, 16, 24, 16], t33HB: [15, 28, 26, 48, 22, 40, 36, 64, 14, 24, 20, 32, 12, 16, 8, 0], t1l: [1, 4, 3, 5], t2l: [1, 4, 7, 4, 5, 7, 6, 7, 8], t3l: [2, 3, 7, 4, 4, 7, 6, 7, 8], t5l: [1, 4, 7, 8, 4, 5, 8, 9, 7, 8, 9, 10, 8, 8, 9, 10], t6l: [3, 4, 6, 8, 4, 4, 6, 7, 5, 6, 7, 8, 7, 7, 8, 9], t7l: [1, 4, 7, 9, 9, 10, 4, 6, 8, 9, 9, 10, 7, 7, 9, 10, 10, 11, 8, 9, 10, 11, 11, 11, 8, 9, 10, 11, 11, 12, 9, 10, 11, 12, 12, 12], t8l: [2, 4, 7, 9, 9, 10, 4, 4, 6, 10, 10, 10, 7, 6, 8, 10, 10, 11, 9, 10, 10, 11, 11, 12, 9, 9, 10, 11, 12, 12, 10, 10, 11, 11, 13, 13], t9l: [3, 4, 6, 7, 9, 10, 4, 5, 6, 7, 8, 10, 5, 6, 7, 8, 9, 10, 7, 7, 8, 9, 9, 10, 8, 8, 9, 9, 10, 11, 9, 9, 10, 10, 11, 11], t10l: [1, 4, 7, 9, 10, 10, 10, 11, 4, 6, 8, 9, 10, 11, 10, 10, 7, 8, 9, 10, 11, 12, 11, 11, 8, 9, 10, 11, 12, 12, 11, 12, 9, 10, 11, 12, 12, 12, 12, 12, 10, 11, 12, 12, 13, 13, 12, 13, 9, 10, 11, 12, 12, 12, 13, 13, 10, 10, 11, 12, 12, 13, 13, 13], t11l: [2, 4, 6, 8, 9, 10, 9, 10, 4, 5, 6, 8, 10, 10, 9, 10, 6, 7, 8, 9, 10, 11, 10, 10, 8, 8, 9, 11, 10, 12, 10, 11, 9, 10, 10, 11, 11, 12, 11, 12, 9, 10, 11, 12, 12, 13, 12, 13, 9, 9, 9, 10, 11, 12, 12, 12, 9, 9, 10, 11, 12, 12, 12, 12], t12l: [4, 4, 6, 8, 9, 10, 10, 10, 4, 5, 6, 7, 9, 9, 10, 10, 6, 6, 7, 8, 9, 10, 9, 10, 7, 7, 8, 8, 9, 10, 10, 10, 8, 8, 9, 9, 10, 10, 10, 11, 9, 9, 10, 10, 10, 11, 10, 11, 9, 9, 9, 10, 10, 11, 11, 12, 10, 10, 10, 11, 11, 11, 11, 12], t13l: [1, 5, 7, 8, 9, 10, 10, 11, 10, 11, 12, 12, 13, 13, 14, 14, 4, 6, 8, 9, 10, 10, 11, 11, 11, 11, 12, 12, 13, 14, 14, 14, 7, 8, 9, 10, 11, 11, 12, 12, 11, 12, 12, 13, 13, 14, 15, 15, 8, 9, 10, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 15, 9, 9, 11, 11, 12, 12, 13, 13, 12, 13, 13, 14, 14, 15, 15, 16, 10, 10, 11, 12, 12, 12, 13, 13, 13, 13, 14, 13, 15, 15, 16, 16, 10, 11, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16, 11, 11, 12, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 16, 18, 18, 10, 10, 11, 12, 12, 13, 13, 14, 14, 14, 14, 15, 15, 16, 17, 17, 11, 11, 12, 12, 13, 13, 13, 15, 14, 15, 15, 16, 16, 16, 18, 17, 11, 12, 12, 13, 13, 14, 14, 15, 14, 15, 16, 15, 16, 17, 18, 19, 12, 12, 12, 13, 14, 14, 14, 14, 15, 15, 15, 16, 17, 17, 17, 18, 12, 13, 13, 14, 14, 15, 14, 15, 16, 16, 17, 17, 17, 18, 18, 18, 13, 13, 14, 15, 15, 15, 16, 16, 16, 16, 16, 17, 18, 17, 18, 18, 14, 14, 14, 15, 15, 15, 17, 16, 16, 19, 17, 17, 17, 19, 18, 18, 13, 14, 15, 16, 16, 16, 17, 16, 17, 17, 18, 18, 21, 20, 21, 18], t15l: [3, 5, 6, 8, 8, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 14, 5, 5, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 6, 7, 7, 8, 9, 9, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13, 7, 8, 8, 9, 9, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13, 8, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 9, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14, 10, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 14, 14, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 14, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 14, 14, 14, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 15, 14, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 15, 12, 12, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 15, 15, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 14, 15, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15], t16_5l: [1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 11, 4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 11, 7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 12, 9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 13, 10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 12, 10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 13, 11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 13, 11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 13, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 13, 12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 14, 12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 13, 13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 14, 13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 14, 15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 14, 14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 14, 11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 12], t16l: [1, 5, 7, 9, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 14, 10, 4, 6, 8, 9, 10, 11, 11, 11, 12, 12, 12, 13, 14, 13, 14, 10, 7, 8, 9, 10, 11, 11, 12, 12, 13, 12, 13, 13, 13, 14, 14, 11, 9, 9, 10, 11, 11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 12, 10, 10, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 11, 10, 10, 11, 11, 12, 13, 13, 14, 13, 14, 14, 15, 15, 15, 16, 12, 11, 11, 11, 12, 13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 16, 12, 11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 17, 17, 12, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 12, 12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 15, 16, 15, 13, 12, 13, 12, 13, 14, 14, 14, 14, 15, 16, 16, 16, 17, 17, 16, 12, 13, 13, 13, 13, 14, 14, 15, 16, 16, 16, 16, 16, 16, 15, 16, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 17, 16, 16, 16, 16, 18, 13, 15, 14, 14, 14, 15, 15, 16, 16, 16, 18, 17, 17, 17, 19, 17, 13, 14, 15, 13, 14, 16, 16, 15, 16, 16, 17, 18, 17, 19, 17, 16, 13, 10, 10, 10, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10], t24l: [4, 5, 7, 8, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 13, 10, 5, 6, 7, 8, 9, 10, 10, 11, 11, 11, 12, 12, 12, 12, 12, 10, 7, 7, 8, 9, 9, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 9, 8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 9, 10, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 9, 11, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 10, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 10, 12, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10, 12, 12, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 10, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 10, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 10, 13, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 10, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 6], t32l: [1, 5, 5, 7, 5, 8, 7, 9, 5, 7, 7, 9, 7, 9, 9, 10], t33l: [4, 5, 5, 6, 5, 6, 6, 7, 5, 6, 6, 7, 6, 7, 7, 8] };\nJe.ht = [new We(0, 0, null, null), new We(2, 0, Je.t1HB, Je.t1l), new We(3, 0, Je.t2HB, Je.t2l), new We(3, 0, Je.t3HB, Je.t3l), new We(0, 0, null, null), new We(4, 0, Je.t5HB, Je.t5l), new We(4, 0, Je.t6HB, Je.t6l), new We(6, 0, Je.t7HB, Je.t7l), new We(6, 0, Je.t8HB, Je.t8l), new We(6, 0, Je.t9HB, Je.t9l), new We(8, 0, Je.t10HB, Je.t10l), new We(8, 0, Je.t11HB, Je.t11l), new We(8, 0, Je.t12HB, Je.t12l), new We(16, 0, Je.t13HB, Je.t13l), new We(0, 0, null, Je.t16_5l), new We(16, 0, Je.t15HB, Je.t15l), new We(1, 1, Je.t16HB, Je.t16l), new We(2, 3, Je.t16HB, Je.t16l), new We(3, 7, Je.t16HB, Je.t16l), new We(4, 15, Je.t16HB, Je.t16l), new We(6, 63, Je.t16HB, Je.t16l), new We(8, 255, Je.t16HB, Je.t16l), new We(10, 1023, Je.t16HB, Je.t16l), new We(13, 8191, Je.t16HB, Je.t16l), new We(4, 15, Je.t24HB, Je.t24l), new We(5, 31, Je.t24HB, Je.t24l), new We(6, 63, Je.t24HB, Je.t24l), new We(7, 127, Je.t24HB, Je.t24l), new We(8, 255, Je.t24HB, Je.t24l), new We(9, 511, Je.t24HB, Je.t24l), new We(11, 2047, Je.t24HB, Je.t24l), new We(13, 8191, Je.t24HB, Je.t24l), new We(0, 0, Je.t32HB, Je.t32l), new We(0, 0, Je.t33HB, Je.t33l)], Je.largetbl = [65540, 327685, 458759, 589832, 655369, 655370, 720906, 720907, 786443, 786444, 786444, 851980, 851980, 851980, 917517, 655370, 262149, 393222, 524295, 589832, 655369, 720906, 720906, 720907, 786443, 786443, 786444, 851980, 917516, 851980, 917516, 655370, 458759, 524295, 589832, 655369, 720905, 720906, 786442, 786443, 851979, 786443, 851979, 851980, 851980, 917516, 917517, 720905, 589832, 589832, 655369, 720905, 720906, 786442, 786442, 786443, 851979, 851979, 917515, 917516, 917516, 983052, 983052, 786441, 655369, 655369, 720905, 720906, 786442, 786442, 851978, 851979, 851979, 917515, 917516, 917516, 983052, 983052, 983053, 720905, 655370, 655369, 720906, 720906, 786442, 851978, 851979, 917515, 851979, 917515, 917516, 983052, 983052, 983052, 1048588, 786441, 720906, 720906, 720906, 786442, 851978, 851979, 851979, 851979, 917515, 917516, 917516, 917516, 983052, 983052, 1048589, 786441, 720907, 720906, 786442, 786442, 851979, 851979, 851979, 917515, 917516, 983052, 983052, 983052, 983052, 1114125, 1114125, 786442, 720907, 786443, 786443, 851979, 851979, 851979, 917515, 917515, 983051, 983052, 983052, 983052, 1048588, 1048589, 1048589, 786442, 786443, 786443, 786443, 851979, 851979, 917515, 917515, 983052, 983052, 983052, 983052, 1048588, 983053, 1048589, 983053, 851978, 786444, 851979, 786443, 851979, 917515, 917516, 917516, 917516, 983052, 1048588, 1048588, 1048589, 1114125, 1114125, 1048589, 786442, 851980, 851980, 851979, 851979, 917515, 917516, 983052, 1048588, 1048588, 1048588, 1048588, 1048589, 1048589, 983053, 1048589, 851978, 851980, 917516, 917516, 917516, 917516, 983052, 983052, 983052, 983052, 1114124, 1048589, 1048589, 1048589, 1048589, 1179661, 851978, 983052, 917516, 917516, 917516, 983052, 983052, 1048588, 1048588, 1048589, 1179661, 1114125, 1114125, 1114125, 1245197, 1114125, 851978, 917517, 983052, 851980, 917516, 1048588, 1048588, 983052, 1048589, 1048589, 1114125, 1179661, 1114125, 1245197, 1114125, 1048589, 851978, 655369, 655369, 655369, 720905, 720905, 786441, 786441, 786441, 851977, 851977, 851977, 851978, 851978, 851978, 851978, 655366], Je.table23 = [65538, 262147, 458759, 262148, 327684, 458759, 393222, 458759, 524296], Je.table56 = [65539, 262148, 458758, 524296, 262148, 327684, 524294, 589831, 458757, 524294, 589831, 655368, 524295, 524295, 589832, 655369], Je.bitrate_table = [[0, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160, -1], [0, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, -1], [0, 8, 16, 24, 32, 40, 48, 56, 64, -1, -1, -1, -1, -1, -1, -1]], Je.samplerate_table = [[22050, 24e3, 16e3, -1], [44100, 48e3, 32e3, -1], [11025, 12e3, 8e3, -1]], Je.scfsi_band = [0, 6, 11, 16, 21];\nvar $e, ea, aa, ta, sa, na, ra, _a, ia = Je;\nfunction oa() {\n  if (ea) return $e;\n  ea = 1;\n  var e5 = ne, a2 = p, t2 = a2.VbrMode, s2 = a2.Float, n2 = a2.Util, r2 = a2.new_float, _2 = a2.new_int, i2 = a2.assert, o2 = A(), l2 = qe, f2 = Ee;\n  function c2() {\n    var a3 = fa(), h2 = null, u2 = null, b2 = null;\n    this.setModules = function(e6, a4, t3) {\n      h2 = e6, u2 = a4, b2 = t3;\n    }, this.IPOW20 = function(e6) {\n      return i2(0 <= e6 && e6 < c2.Q_MAX), A2[e6];\n    };\n    var m2 = 2220446049250313e-31, p2 = c2.IXMAX_VAL + 2, v2 = c2.Q_MAX, d2 = c2.Q_MAX2;\n    c2.LARGE_BITS;\n    var g2 = 100;\n    this.nr_of_sfb_block = [[[6, 5, 5, 5], [9, 9, 9, 9], [6, 9, 9, 9]], [[6, 5, 7, 3], [9, 9, 12, 6], [6, 9, 12, 6]], [[11, 10, 0, 0], [18, 18, 0, 0], [15, 18, 0, 0]], [[7, 7, 7, 0], [12, 12, 12, 0], [6, 15, 12, 0]], [[6, 6, 6, 3], [12, 9, 9, 6], [6, 12, 9, 6]], [[8, 8, 5, 0], [15, 12, 9, 0], [6, 18, 9, 0]]];\n    var S2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 2, 0];\n    this.pretab = S2, this.sfBandIndex = [new e5([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576], [0, 4, 8, 12, 18, 24, 32, 42, 56, 74, 100, 132, 174, 192], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]), new e5([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 114, 136, 162, 194, 232, 278, 332, 394, 464, 540, 576], [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 136, 180, 192], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]), new e5([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576], [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]), new e5([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418, 576], [0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]), new e5([0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384, 576], [0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]), new e5([0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550, 576], [0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]), new e5([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576], [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]), new e5([0, 6, 12, 18, 24, 30, 36, 44, 54, 66, 80, 96, 116, 140, 168, 200, 238, 284, 336, 396, 464, 522, 576], [0, 4, 8, 12, 18, 26, 36, 48, 62, 80, 104, 134, 174, 192], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]), new e5([0, 12, 24, 36, 48, 60, 72, 88, 108, 132, 160, 192, 232, 280, 336, 400, 476, 566, 568, 570, 572, 574, 576], [0, 8, 16, 24, 36, 52, 72, 96, 124, 160, 162, 164, 166, 192], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0])];\n    var R2 = r2(v2 + d2 + 1), A2 = r2(v2), M2 = r2(p2), B2 = r2(p2);\n    function w2(e6, a4) {\n      var t3 = b2.ATHformula(a4, e6);\n      return t3 -= g2, t3 = Math.pow(10, t3 / 10 + e6.ATHlower);\n    }\n    function T2(e6) {\n      this.s = e6;\n    }\n    this.adj43 = B2, this.iteration_init = function(e6) {\n      var a4, t3 = e6.internal_flags, n3 = t3.l3_side;\n      if (0 == t3.iteration_init_init) {\n        for (t3.iteration_init_init = 1, n3.main_data_begin = 0, function(e7) {\n          for (var a5 = e7.internal_flags.ATH.l, t4 = e7.internal_flags.ATH.psfb21, n4 = e7.internal_flags.ATH.s, r4 = e7.internal_flags.ATH.psfb12, _4 = e7.internal_flags, i4 = e7.out_samplerate, l4 = 0; l4 < o2.SBMAX_l; l4++) {\n            var f4 = _4.scalefac_band.l[l4], c3 = _4.scalefac_band.l[l4 + 1];\n            a5[l4] = s2.MAX_VALUE;\n            for (var h3 = f4; h3 < c3; h3++) {\n              var u3 = w2(e7, h3 * i4 / 1152);\n              a5[l4] = Math.min(a5[l4], u3);\n            }\n          }\n          for (l4 = 0; l4 < o2.PSFB21; l4++) for (f4 = _4.scalefac_band.psfb21[l4], c3 = _4.scalefac_band.psfb21[l4 + 1], t4[l4] = s2.MAX_VALUE, h3 = f4; h3 < c3; h3++) u3 = w2(e7, h3 * i4 / 1152), t4[l4] = Math.min(t4[l4], u3);\n          for (l4 = 0; l4 < o2.SBMAX_s; l4++) {\n            for (f4 = _4.scalefac_band.s[l4], c3 = _4.scalefac_band.s[l4 + 1], n4[l4] = s2.MAX_VALUE, h3 = f4; h3 < c3; h3++) u3 = w2(e7, h3 * i4 / 384), n4[l4] = Math.min(n4[l4], u3);\n            n4[l4] *= _4.scalefac_band.s[l4 + 1] - _4.scalefac_band.s[l4];\n          }\n          for (l4 = 0; l4 < o2.PSFB12; l4++) {\n            for (f4 = _4.scalefac_band.psfb12[l4], c3 = _4.scalefac_band.psfb12[l4 + 1], r4[l4] = s2.MAX_VALUE, h3 = f4; h3 < c3; h3++) u3 = w2(e7, h3 * i4 / 384), r4[l4] = Math.min(r4[l4], u3);\n            r4[l4] *= _4.scalefac_band.s[13] - _4.scalefac_band.s[12];\n          }\n          if (e7.noATH) {\n            for (l4 = 0; l4 < o2.SBMAX_l; l4++) a5[l4] = 1e-20;\n            for (l4 = 0; l4 < o2.PSFB21; l4++) t4[l4] = 1e-20;\n            for (l4 = 0; l4 < o2.SBMAX_s; l4++) n4[l4] = 1e-20;\n            for (l4 = 0; l4 < o2.PSFB12; l4++) r4[l4] = 1e-20;\n          }\n          _4.ATH.floor = 10 * Math.log10(w2(e7, -1));\n        }(e6), M2[0] = 0, a4 = 1; a4 < p2; a4++) M2[a4] = Math.pow(a4, 4 / 3);\n        for (a4 = 0; a4 < p2 - 1; a4++) B2[a4] = a4 + 1 - Math.pow(0.5 * (M2[a4] + M2[a4 + 1]), 0.75);\n        for (B2[a4] = 0.5, a4 = 0; a4 < v2; a4++) A2[a4] = Math.pow(2, -0.1875 * (a4 - 210));\n        for (a4 = 0; a4 <= v2 + d2; a4++) R2[a4] = Math.pow(2, 0.25 * (a4 - 210 - d2));\n        var r3, _3, i3, l3;\n        for (h2.huffman_init(t3), (a4 = e6.exp_nspsytune >> 2 & 63) >= 32 && (a4 -= 64), r3 = Math.pow(10, a4 / 4 / 10), (a4 = e6.exp_nspsytune >> 8 & 63) >= 32 && (a4 -= 64), _3 = Math.pow(10, a4 / 4 / 10), (a4 = e6.exp_nspsytune >> 14 & 63) >= 32 && (a4 -= 64), i3 = Math.pow(10, a4 / 4 / 10), (a4 = e6.exp_nspsytune >> 20 & 63) >= 32 && (a4 -= 64), l3 = i3 * Math.pow(10, a4 / 4 / 10), a4 = 0; a4 < o2.SBMAX_l; a4++) {\n          f3 = a4 <= 6 ? r3 : a4 <= 13 ? _3 : a4 <= 20 ? i3 : l3, t3.nsPsy.longfact[a4] = f3;\n        }\n        for (a4 = 0; a4 < o2.SBMAX_s; a4++) {\n          var f3;\n          f3 = a4 <= 5 ? r3 : a4 <= 10 ? _3 : a4 <= 11 ? i3 : l3, t3.nsPsy.shortfact[a4] = f3;\n        }\n      }\n    }, this.on_pe = function(e6, a4, t3, s3, n3, r3) {\n      var i3, o3, c3 = e6.internal_flags, h3 = 0, b3 = _2(2), m3 = new l2(h3), p3 = u2.ResvMaxBits(e6, s3, m3, r3), v3 = (h3 = m3.bits) + p3;\n      for (v3 > f2.MAX_BITS_PER_GRANULE && (v3 = f2.MAX_BITS_PER_GRANULE), i3 = 0, o3 = 0; o3 < c3.channels_out; ++o3) t3[o3] = Math.min(f2.MAX_BITS_PER_CHANNEL, h3 / c3.channels_out), b3[o3] = 0 | t3[o3] * a4[n3][o3] / 700 - t3[o3], b3[o3] > 3 * s3 / 4 && (b3[o3] = 3 * s3 / 4), b3[o3] < 0 && (b3[o3] = 0), b3[o3] + t3[o3] > f2.MAX_BITS_PER_CHANNEL && (b3[o3] = Math.max(0, f2.MAX_BITS_PER_CHANNEL - t3[o3])), i3 += b3[o3];\n      if (i3 > p3) for (o3 = 0; o3 < c3.channels_out; ++o3) b3[o3] = p3 * b3[o3] / i3;\n      for (o3 = 0; o3 < c3.channels_out; ++o3) t3[o3] += b3[o3], p3 -= b3[o3];\n      for (i3 = 0, o3 = 0; o3 < c3.channels_out; ++o3) i3 += t3[o3];\n      if (i3 > f2.MAX_BITS_PER_GRANULE) {\n        for (o3 = 0; o3 < c3.channels_out; ++o3) t3[o3] *= f2.MAX_BITS_PER_GRANULE, t3[o3] /= i3, t3[o3];\n      }\n      return v3;\n    }, this.reduce_side = function(e6, a4, t3, s3) {\n      i2(e6[0] + e6[1] <= f2.MAX_BITS_PER_GRANULE);\n      var n3 = 0.33 * (0.5 - a4) / 0.5;\n      n3 < 0 && (n3 = 0), n3 > 0.5 && (n3 = 0.5);\n      var r3 = 0 | 0.5 * n3 * (e6[0] + e6[1]);\n      r3 > f2.MAX_BITS_PER_CHANNEL - e6[0] && (r3 = f2.MAX_BITS_PER_CHANNEL - e6[0]), r3 < 0 && (r3 = 0), e6[1] >= 125 && (e6[1] - r3 > 125 ? (e6[0] < t3 && (e6[0] += r3), e6[1] -= r3) : (e6[0] += e6[1] - 125, e6[1] = 125)), (r3 = e6[0] + e6[1]) > s3 && (e6[0] = s3 * e6[0] / r3, e6[1] = s3 * e6[1] / r3), i2(e6[0] <= f2.MAX_BITS_PER_CHANNEL), i2(e6[1] <= f2.MAX_BITS_PER_CHANNEL), i2(e6[0] + e6[1] <= f2.MAX_BITS_PER_GRANULE);\n    }, this.athAdjust = function(e6, a4, t3) {\n      var s3 = 90.30873362, r3 = n2.FAST_LOG10_X(a4, 10), _3 = e6 * e6, i3 = 0;\n      return r3 -= t3, _3 > 1e-20 && (i3 = 1 + n2.FAST_LOG10_X(_3, 10 / s3)), i3 < 0 && (i3 = 0), r3 *= i3, r3 += t3 + s3 - 94.82444863, Math.pow(10, 0.1 * r3);\n    }, this.calc_xmin = function(e6, s3, n3, r3) {\n      var _3, i3 = 0, l3 = e6.internal_flags, f3 = 0, c3 = 0, h3 = l3.ATH, u3 = n3.xr, b3 = e6.VBR == t2.vbr_mtrh ? 1 : 0, p3 = l3.masking_lower;\n      for (e6.VBR != t2.vbr_mtrh && e6.VBR != t2.vbr_mt || (p3 = 1), _3 = 0; _3 < n3.psy_lmax; _3++) {\n        B3 = (M3 = e6.VBR == t2.vbr_rh || e6.VBR == t2.vbr_mtrh ? athAdjust(h3.adjust, h3.l[_3], h3.floor) : h3.adjust * h3.l[_3]) / (S3 = n3.width[_3]), w3 = m2, y2 = S3 >> 1, k2 = 0;\n        do {\n          k2 += x2 = u3[f3] * u3[f3], w3 += x2 < B3 ? x2 : B3, k2 += P2 = u3[++f3] * u3[f3], w3 += P2 < B3 ? P2 : B3, f3++;\n        } while (--y2 > 0);\n        if (k2 > M3 && c3++, _3 == o2.SBPSY_l) w3 < (E2 = M3 * l3.nsPsy.longfact[_3]) && (w3 = E2);\n        if (0 != b3 && (M3 = w3), !e6.ATHonly) {\n          if ((T3 = s3.en.l[_3]) > 0) E2 = k2 * s3.thm.l[_3] * p3 / T3, 0 != b3 && (E2 *= l3.nsPsy.longfact[_3]), M3 < E2 && (M3 = E2);\n        }\n        r3[i3++] = 0 != b3 ? M3 : M3 * l3.nsPsy.longfact[_3];\n      }\n      var v3 = 575;\n      if (n3.block_type != o2.SHORT_TYPE) for (var d3 = 576; 0 != d3-- && a3.EQ(u3[d3], 0); ) v3 = d3;\n      n3.max_nonzero_coeff = v3;\n      for (var g3 = n3.sfb_smin; _3 < n3.psymax; g3++, _3 += 3) {\n        var S3, R3, A3;\n        for (A3 = e6.VBR == t2.vbr_rh || e6.VBR == t2.vbr_mtrh ? athAdjust(h3.adjust, h3.s[g3], h3.floor) : h3.adjust * h3.s[g3], S3 = n3.width[_3], R3 = 0; R3 < 3; R3++) {\n          var M3, B3, w3, T3, E2, k2 = 0, y2 = S3 >> 1;\n          B3 = A3 / S3, w3 = m2;\n          do {\n            var x2, P2;\n            k2 += x2 = u3[f3] * u3[f3], w3 += x2 < B3 ? x2 : B3, k2 += P2 = u3[++f3] * u3[f3], w3 += P2 < B3 ? P2 : B3, f3++;\n          } while (--y2 > 0);\n          if (k2 > A3 && c3++, g3 == o2.SBPSY_s) w3 < (E2 = A3 * l3.nsPsy.shortfact[g3]) && (w3 = E2);\n          if (M3 = 0 != b3 ? w3 : A3, !e6.ATHonly && !e6.ATHshort) {\n            if ((T3 = s3.en.s[g3][R3]) > 0) E2 = k2 * s3.thm.s[g3][R3] * p3 / T3, 0 != b3 && (E2 *= l3.nsPsy.shortfact[g3]), M3 < E2 && (M3 = E2);\n          }\n          r3[i3++] = 0 != b3 ? M3 : M3 * l3.nsPsy.shortfact[g3];\n        }\n        e6.useTemporal && (r3[i3 - 3] > r3[i3 - 3 + 1] && (r3[i3 - 3 + 1] += (r3[i3 - 3] - r3[i3 - 3 + 1]) * l3.decay), r3[i3 - 3 + 1] > r3[i3 - 3 + 2] && (r3[i3 - 3 + 2] += (r3[i3 - 3 + 1] - r3[i3 - 3 + 2]) * l3.decay));\n      }\n      return c3;\n    }, this.calc_noise_core = function(e6, a4, t3, s3) {\n      var n3 = 0, _3 = a4.s, i3 = e6.l3_enc;\n      if (_3 > e6.count1) for (; 0 != t3--; ) {\n        l3 = e6.xr[_3], _3++, n3 += l3 * l3, l3 = e6.xr[_3], _3++, n3 += l3 * l3;\n      }\n      else if (_3 > e6.big_values) {\n        var o3 = r2(2);\n        for (o3[0] = 0, o3[1] = s3; 0 != t3--; ) {\n          l3 = Math.abs(e6.xr[_3]) - o3[i3[_3]], _3++, n3 += l3 * l3, l3 = Math.abs(e6.xr[_3]) - o3[i3[_3]], _3++, n3 += l3 * l3;\n        }\n      } else for (; 0 != t3--; ) {\n        var l3;\n        l3 = Math.abs(e6.xr[_3]) - M2[i3[_3]] * s3, _3++, n3 += l3 * l3, l3 = Math.abs(e6.xr[_3]) - M2[i3[_3]] * s3, _3++, n3 += l3 * l3;\n      }\n      return a4.s = _3, n3;\n    }, this.calc_noise = function(e6, a4, t3, s3, r3) {\n      var _3, o3, l3, f3 = 0, h3 = 0, u3 = 0, b3 = 0, m3 = 0, p3 = -20, v3 = 0, d3 = e6.scalefac, g3 = 0;\n      for (s3.over_SSD = 0, _3 = 0; _3 < e6.psymax; _3++) {\n        var A3, M3 = e6.global_gain - (d3[g3++] + (0 != e6.preflag ? S2[_3] : 0) << e6.scalefac_scale + 1) - 8 * e6.subblock_gain[e6.window[_3]], B3 = 0;\n        if (null != r3 && r3.step[_3] == M3) B3 = r3.noise[_3], v3 += e6.width[_3], t3[f3++] = B3 / a4[h3++], B3 = r3.noise_log[_3];\n        else {\n          var w3, E2 = (i2(0 <= (l3 = M3) + c2.Q_MAX2 && l3 < c2.Q_MAX), R2[l3 + c2.Q_MAX2]);\n          if (o3 = e6.width[_3] >> 1, v3 + e6.width[_3] > e6.max_nonzero_coeff) o3 = (w3 = e6.max_nonzero_coeff - v3 + 1) > 0 ? w3 >> 1 : 0;\n          var k2 = new T2(v3);\n          B3 = this.calc_noise_core(e6, k2, o3, E2), v3 = k2.s, null != r3 && (r3.step[_3] = M3, r3.noise[_3] = B3), B3 = t3[f3++] = B3 / a4[h3++], B3 = n2.FAST_LOG10(Math.max(B3, 1e-20)), null != r3 && (r3.noise_log[_3] = B3);\n        }\n        if (null != r3 && (r3.global_gain = e6.global_gain), m3 += B3, B3 > 0) A3 = Math.max(0 | 10 * B3 + 0.5, 1), s3.over_SSD += A3 * A3, u3++, b3 += B3;\n        p3 = Math.max(p3, B3);\n      }\n      return s3.over_count = u3, s3.tot_noise = m3, s3.over_noise = b3, s3.max_noise = p3, u3;\n    }, this.set_pinfo = function(e6, a4, t3, s3, n3) {\n      var _3, l3, f3, c3, h3, u3 = e6.internal_flags, b3 = 0 == a4.scalefac_scale ? 0.5 : 1, m3 = a4.scalefac, p3 = r2(L3Side.SFBMAX), v3 = r2(L3Side.SFBMAX), d3 = new CalcNoiseResult();\n      calc_xmin(e6, t3, a4, p3), calc_noise(a4, p3, v3, d3, null);\n      var g3 = 0;\n      for (l3 = a4.sfb_lmax, a4.block_type != o2.SHORT_TYPE && 0 == a4.mixed_block_flag && (l3 = 22), _3 = 0; _3 < l3; _3++) {\n        var R3 = u3.scalefac_band.l[_3], A3 = (M3 = u3.scalefac_band.l[_3 + 1]) - R3;\n        for (c3 = 0; g3 < M3; g3++) c3 += a4.xr[g3] * a4.xr[g3];\n        c3 /= A3, h3 = 1e15, u3.pinfo.en[s3][n3][_3] = h3 * c3, u3.pinfo.xfsf[s3][n3][_3] = h3 * p3[_3] * v3[_3] / A3, t3.en.l[_3] > 0 && !e6.ATHonly ? c3 /= t3.en.l[_3] : c3 = 0, u3.pinfo.thr[s3][n3][_3] = h3 * Math.max(c3 * t3.thm.l[_3], u3.ATH.l[_3]), u3.pinfo.LAMEsfb[s3][n3][_3] = 0, 0 != a4.preflag && _3 >= 11 && (u3.pinfo.LAMEsfb[s3][n3][_3] = -b3 * S2[_3]), _3 < o2.SBPSY_l && (i2(m3[_3] >= 0), u3.pinfo.LAMEsfb[s3][n3][_3] -= b3 * m3[_3]);\n      }\n      if (a4.block_type == o2.SHORT_TYPE) for (l3 = _3, _3 = a4.sfb_smin; _3 < o2.SBMAX_s; _3++) {\n        R3 = u3.scalefac_band.s[_3], A3 = (M3 = u3.scalefac_band.s[_3 + 1]) - R3;\n        for (var M3, B3 = 0; B3 < 3; B3++) {\n          for (c3 = 0, f3 = R3; f3 < M3; f3++) c3 += a4.xr[g3] * a4.xr[g3], g3++;\n          c3 = Math.max(c3 / A3, 1e-20), h3 = 1e15, u3.pinfo.en_s[s3][n3][3 * _3 + B3] = h3 * c3, u3.pinfo.xfsf_s[s3][n3][3 * _3 + B3] = h3 * p3[l3] * v3[l3] / A3, t3.en.s[_3][B3] > 0 ? c3 /= t3.en.s[_3][B3] : c3 = 0, (e6.ATHonly || e6.ATHshort) && (c3 = 0), u3.pinfo.thr_s[s3][n3][3 * _3 + B3] = h3 * Math.max(c3 * t3.thm.s[_3][B3], u3.ATH.s[_3]), u3.pinfo.LAMEsfb_s[s3][n3][3 * _3 + B3] = -2 * a4.subblock_gain[B3], _3 < o2.SBPSY_s && (u3.pinfo.LAMEsfb_s[s3][n3][3 * _3 + B3] -= b3 * m3[l3]), l3++;\n        }\n      }\n      u3.pinfo.LAMEqss[s3][n3] = a4.global_gain, u3.pinfo.LAMEmainbits[s3][n3] = a4.part2_3_length + a4.part2_length, u3.pinfo.LAMEsfbits[s3][n3] = a4.part2_length, u3.pinfo.over[s3][n3] = d3.over_count, u3.pinfo.max_noise[s3][n3] = 10 * d3.max_noise, u3.pinfo.over_noise[s3][n3] = 10 * d3.over_noise, u3.pinfo.tot_noise[s3][n3] = 10 * d3.tot_noise, u3.pinfo.over_SSD[s3][n3] = d3.over_SSD;\n    };\n  }\n  return c2.Q_MAX = 257, c2.Q_MAX2 = 116, c2.LARGE_BITS = 1e5, c2.IXMAX_VAL = 8206, $e = c2;\n}\nfunction la() {\n  if (ta) return aa;\n  ta = 1;\n  var e5 = p, a2 = e5.System, t2 = e5.Arrays, s2 = e5.new_int, n2 = e5.assert, r2 = A(), _2 = ia, i2 = Q, o2 = oa();\n  return aa = function e6() {\n    var l2 = null;\n    function f2(e7) {\n      this.bits = 0 | e7;\n    }\n    this.qupvt = null, this.setModules = function(e7) {\n      this.qupvt = e7, l2 = e7;\n    };\n    var c2 = [[0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 1], [1, 1], [1, 1], [1, 2], [2, 2], [2, 3], [2, 3], [3, 4], [3, 4], [3, 4], [4, 5], [4, 5], [4, 6], [5, 6], [5, 6], [5, 7], [6, 7], [6, 7]];\n    function h2(e7, a3, t3, s3, n3, r3) {\n      var _3 = 0.5946 / a3;\n      for (e7 >>= 1; 0 != e7--; ) n3[r3++] = _3 > t3[s3++] ? 0 : 1, n3[r3++] = _3 > t3[s3++] ? 0 : 1;\n    }\n    function u2(e7, a3, t3, s3, n3, r3) {\n      var _3 = (e7 >>= 1) % 2;\n      for (e7 >>= 1; 0 != e7--; ) {\n        var i3, o3, f3, c3, h3, u3, b3, m3;\n        i3 = t3[s3++] * a3, o3 = t3[s3++] * a3, h3 = 0 | i3, f3 = t3[s3++] * a3, u3 = 0 | o3, c3 = t3[s3++] * a3, b3 = 0 | f3, i3 += l2.adj43[h3], m3 = 0 | c3, o3 += l2.adj43[u3], n3[r3++] = 0 | i3, f3 += l2.adj43[b3], n3[r3++] = 0 | o3, c3 += l2.adj43[m3], n3[r3++] = 0 | f3, n3[r3++] = 0 | c3;\n      }\n      0 != _3 && (h3 = 0 | (i3 = t3[s3++] * a3), u3 = 0 | (o3 = t3[s3++] * a3), i3 += l2.adj43[h3], o3 += l2.adj43[u3], n3[r3++] = 0 | i3, n3[r3++] = 0 | o3);\n    }\n    var b2 = [1, 2, 5, 7, 7, 10, 10, 13, 13, 13, 13, 13, 13, 13, 13];\n    function m2(e7, a3, t3, s3) {\n      var n3 = function(e8, a4, t4) {\n        var s4 = 0, n4 = 0;\n        do {\n          var r4 = e8[a4++], _3 = e8[a4++];\n          s4 < r4 && (s4 = r4), n4 < _3 && (n4 = _3);\n        } while (a4 < t4);\n        return s4 < n4 && (s4 = n4), s4;\n      }(e7, a3, t3);\n      switch (n3) {\n        case 0:\n          return n3;\n        case 1:\n          return function(e8, a4, t4, s4) {\n            var n4 = 0, r4 = _2.ht[1].hlen;\n            do {\n              var i4 = 2 * e8[a4 + 0] + e8[a4 + 1];\n              a4 += 2, n4 += r4[i4];\n            } while (a4 < t4);\n            return s4.bits += n4, 1;\n          }(e7, a3, t3, s3);\n        case 2:\n        case 3:\n          return function(e8, a4, t4, s4, n4) {\n            var r4, i4, o3 = 0, l3 = _2.ht[s4].xlen;\n            i4 = 2 == s4 ? _2.table23 : _2.table56;\n            do {\n              var f3 = e8[a4 + 0] * l3 + e8[a4 + 1];\n              a4 += 2, o3 += i4[f3];\n            } while (a4 < t4);\n            return r4 = 65535 & o3, (o3 >>= 16) > r4 && (o3 = r4, s4++), n4.bits += o3, s4;\n          }(e7, a3, t3, b2[n3 - 1], s3);\n        case 4:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15:\n          return function(e8, a4, t4, s4, n4) {\n            var r4 = 0, i4 = 0, o3 = 0, l3 = _2.ht[s4].xlen, f3 = _2.ht[s4].hlen, c3 = _2.ht[s4 + 1].hlen, h3 = _2.ht[s4 + 2].hlen;\n            do {\n              var u3 = e8[a4 + 0] * l3 + e8[a4 + 1];\n              a4 += 2, r4 += f3[u3], i4 += c3[u3], o3 += h3[u3];\n            } while (a4 < t4);\n            var b3 = s4;\n            return r4 > i4 && (r4 = i4, b3++), r4 > o3 && (r4 = o3, b3 = s4 + 2), n4.bits += r4, b3;\n          }(e7, a3, t3, b2[n3 - 1], s3);\n        default:\n          if (n3 > o2.IXMAX_VAL) return s3.bits = o2.LARGE_BITS, -1;\n          var r3, i3;\n          for (n3 -= 15, r3 = 24; r3 < 32 && !(_2.ht[r3].linmax >= n3); r3++) ;\n          for (i3 = r3 - 8; i3 < 24 && !(_2.ht[i3].linmax >= n3); i3++) ;\n          return function(e8, a4, t4, s4, n4, r4) {\n            var i4, o3 = 65536 * _2.ht[s4].xlen + _2.ht[n4].xlen, l3 = 0;\n            do {\n              var f3 = e8[a4++], c3 = e8[a4++];\n              0 != f3 && (f3 > 14 && (f3 = 15, l3 += o3), f3 *= 16), 0 != c3 && (c3 > 14 && (c3 = 15, l3 += o3), f3 += c3), l3 += _2.largetbl[f3];\n            } while (a4 < t4);\n            return i4 = 65535 & l3, (l3 >>= 16) > i4 && (l3 = i4, s4 = n4), r4.bits += l3, s4;\n          }(e7, a3, t3, i3, r3, s3);\n      }\n    }\n    function p2(e7, a3, t3, s3, n3, _3, i3, o3) {\n      for (var l3 = a3.big_values, c3 = 2; c3 < r2.SBMAX_l + 1; c3++) {\n        var h3 = e7.scalefac_band.l[c3];\n        if (h3 >= l3) break;\n        var u3 = n3[c3 - 2] + a3.count1bits;\n        if (t3.part2_3_length <= u3) break;\n        var b3 = new f2(u3), p3 = m2(s3, h3, l3, b3);\n        u3 = b3.bits, t3.part2_3_length <= u3 || (t3.assign(a3), t3.part2_3_length = u3, t3.region0_count = _3[c3 - 2], t3.region1_count = c3 - 2 - _3[c3 - 2], t3.table_select[0] = i3[c3 - 2], t3.table_select[1] = o3[c3 - 2], t3.table_select[2] = p3);\n      }\n    }\n    this.noquant_count_bits = function(e7, a3, t3) {\n      var s3 = a3.l3_enc, i3 = Math.min(576, a3.max_nonzero_coeff + 2 >> 1 << 1);\n      for (null != t3 && (t3.sfb_count1 = 0); i3 > 1 && 0 == (s3[i3 - 1] | s3[i3 - 2]); i3 -= 2) ;\n      a3.count1 = i3;\n      for (var o3 = 0, l3 = 0; i3 > 3; i3 -= 4) {\n        var c3;\n        if ((2147483647 & (s3[i3 - 1] | s3[i3 - 2] | s3[i3 - 3] | s3[i3 - 4])) > 1) break;\n        c3 = 2 * (2 * (2 * s3[i3 - 4] + s3[i3 - 3]) + s3[i3 - 2]) + s3[i3 - 1], o3 += _2.t32l[c3], l3 += _2.t33l[c3];\n      }\n      var h3 = o3;\n      if (a3.count1table_select = 0, o3 > l3 && (h3 = l3, a3.count1table_select = 1), a3.count1bits = h3, a3.big_values = i3, 0 == i3) return h3;\n      if (a3.block_type == r2.SHORT_TYPE) (o3 = 3 * e7.scalefac_band.s[3]) > a3.big_values && (o3 = a3.big_values), l3 = a3.big_values;\n      else if (a3.block_type == r2.NORM_TYPE) {\n        if (o3 = a3.region0_count = e7.bv_scf[i3 - 2], l3 = a3.region1_count = e7.bv_scf[i3 - 1], n2(o3 + l3 + 2 < r2.SBPSY_l), l3 = e7.scalefac_band.l[o3 + l3 + 2], o3 = e7.scalefac_band.l[o3 + 1], l3 < i3) {\n          var u3 = new f2(h3);\n          a3.table_select[2] = m2(s3, l3, i3, u3), h3 = u3.bits;\n        }\n      } else a3.region0_count = 7, a3.region1_count = r2.SBMAX_l - 1 - 7 - 1, (o3 = e7.scalefac_band.l[8]) > (l3 = i3) && (o3 = l3);\n      if (o3 = Math.min(o3, i3), l3 = Math.min(l3, i3), 0 < o3) {\n        u3 = new f2(h3);\n        a3.table_select[0] = m2(s3, 0, o3, u3), h3 = u3.bits;\n      }\n      if (o3 < l3) {\n        u3 = new f2(h3);\n        a3.table_select[1] = m2(s3, o3, l3, u3), h3 = u3.bits;\n      }\n      if (2 == e7.use_best_huffman && (a3.part2_3_length = h3, best_huffman_divide(e7, a3), h3 = a3.part2_3_length), null != t3 && a3.block_type == r2.NORM_TYPE) {\n        for (var b3 = 0; e7.scalefac_band.l[b3] < a3.big_values; ) b3++;\n        t3.sfb_count1 = b3;\n      }\n      return h3;\n    }, this.count_bits = function(e7, a3, s3, _3) {\n      var i3 = s3.l3_enc, f3 = o2.IXMAX_VAL / l2.IPOW20(s3.global_gain);\n      if (s3.xrpow_max > f3) return o2.LARGE_BITS;\n      if (function(e8, a4, s4, _4, i4) {\n        var o3, f4, c4, b4 = 0, m4 = 0, p4 = 0, v4 = 0, d4 = a4, g3 = 0, S3 = d4, R3 = 0, A3 = e8, M3 = 0;\n        for (c4 = null != i4 && _4.global_gain == i4.global_gain, f4 = _4.block_type == r2.SHORT_TYPE ? 38 : 21, o3 = 0; o3 <= f4; o3++) {\n          var B3 = -1;\n          if ((c4 || _4.block_type == r2.NORM_TYPE) && (B3 = _4.global_gain - (_4.scalefac[o3] + (0 != _4.preflag ? l2.pretab[o3] : 0) << _4.scalefac_scale + 1) - 8 * _4.subblock_gain[_4.window[o3]]), n2(_4.width[o3] >= 0), c4 && i4.step[o3] == B3) 0 != m4 && (u2(m4, s4, A3, M3, S3, R3), m4 = 0), 0 != p4 && (h2(p4, s4, A3, M3, S3, R3), p4 = 0);\n          else {\n            var w3, T2 = _4.width[o3];\n            if (b4 + _4.width[o3] > _4.max_nonzero_coeff && (w3 = _4.max_nonzero_coeff - b4 + 1, t2.fill(a4, _4.max_nonzero_coeff, 576, 0), (T2 = w3) < 0 && (T2 = 0), o3 = f4 + 1), 0 == m4 && 0 == p4 && (S3 = d4, R3 = g3, A3 = e8, M3 = v4), null != i4 && i4.sfb_count1 > 0 && o3 >= i4.sfb_count1 && i4.step[o3] > 0 && B3 >= i4.step[o3] ? (0 != m4 && (u2(m4, s4, A3, M3, S3, R3), m4 = 0, S3 = d4, R3 = g3, A3 = e8, M3 = v4), p4 += T2) : (0 != p4 && (h2(p4, s4, A3, M3, S3, R3), p4 = 0, S3 = d4, R3 = g3, A3 = e8, M3 = v4), m4 += T2), T2 <= 0) {\n              0 != p4 && (h2(p4, s4, A3, M3, S3, R3), p4 = 0), 0 != m4 && (u2(m4, s4, A3, M3, S3, R3), m4 = 0);\n              break;\n            }\n          }\n          o3 <= f4 && (g3 += _4.width[o3], v4 += _4.width[o3], b4 += _4.width[o3]);\n        }\n        0 != m4 && (u2(m4, s4, A3, M3, S3, R3), m4 = 0), 0 != p4 && (h2(p4, s4, A3, M3, S3, R3), p4 = 0);\n      }(a3, i3, l2.IPOW20(s3.global_gain), s3, _3), 0 != (2 & e7.substep_shaping)) for (var c3 = 0, b3 = s3.global_gain + s3.scalefac_scale, m3 = 0.634521682242439 / l2.IPOW20(b3), p3 = 0; p3 < s3.sfbmax; p3++) {\n        var v3, d3 = s3.width[p3];\n        if (0 == e7.pseudohalf[p3]) c3 += d3;\n        else for (v3 = c3, c3 += d3; v3 < c3; ++v3) i3[v3] = a3[v3] >= m3 ? i3[v3] : 0;\n      }\n      return this.noquant_count_bits(e7, s3, _3);\n    }, this.best_huffman_divide = function(e7, a3) {\n      var t3 = new i2(), n3 = a3.l3_enc, l3 = s2(23), c3 = s2(23), h3 = s2(23), u3 = s2(23);\n      if (a3.block_type != r2.SHORT_TYPE || 1 != e7.mode_gr) {\n        t3.assign(a3), a3.block_type == r2.NORM_TYPE && (!function(e8, a4, t4, s3, n4, r3, _3) {\n          for (var i3 = a4.big_values, l4 = 0; l4 <= 22; l4++) s3[l4] = o2.LARGE_BITS;\n          for (l4 = 0; l4 < 16; l4++) {\n            var c4 = e8.scalefac_band.l[l4 + 1];\n            if (c4 >= i3) break;\n            var h4 = 0, u4 = new f2(h4), b4 = m2(t4, 0, c4, u4);\n            h4 = u4.bits;\n            for (var p3 = 0; p3 < 8; p3++) {\n              var v4 = e8.scalefac_band.l[l4 + p3 + 2];\n              if (v4 >= i3) break;\n              var d4 = h4, g4 = m2(t4, c4, v4, u4 = new f2(d4));\n              d4 = u4.bits, s3[l4 + p3] > d4 && (s3[l4 + p3] = d4, n4[l4 + p3] = l4, r3[l4 + p3] = b4, _3[l4 + p3] = g4);\n            }\n          }\n        }(e7, a3, n3, l3, c3, h3, u3), p2(e7, t3, a3, n3, l3, c3, h3, u3));\n        var b3 = t3.big_values;\n        if (!(0 == b3 || (n3[b3 - 2] | n3[b3 - 1]) > 1 || (b3 = a3.count1 + 2) > 576)) {\n          t3.assign(a3), t3.count1 = b3;\n          for (var v3 = 0, d3 = 0; b3 > t3.big_values; b3 -= 4) {\n            var g3 = 2 * (2 * (2 * n3[b3 - 4] + n3[b3 - 3]) + n3[b3 - 2]) + n3[b3 - 1];\n            v3 += _2.t32l[g3], d3 += _2.t33l[g3];\n          }\n          if (t3.big_values = b3, t3.count1table_select = 0, v3 > d3 && (v3 = d3, t3.count1table_select = 1), t3.count1bits = v3, t3.block_type == r2.NORM_TYPE) p2(e7, t3, a3, n3, l3, c3, h3, u3);\n          else {\n            if (t3.part2_3_length = v3, (v3 = e7.scalefac_band.l[8]) > b3 && (v3 = b3), v3 > 0) {\n              var S3 = new f2(t3.part2_3_length);\n              t3.table_select[0] = m2(n3, 0, v3, S3), t3.part2_3_length = S3.bits;\n            }\n            if (b3 > v3) {\n              S3 = new f2(t3.part2_3_length);\n              t3.table_select[1] = m2(n3, v3, b3, S3), t3.part2_3_length = S3.bits;\n            }\n            a3.part2_3_length > t3.part2_3_length && a3.assign(t3);\n          }\n        }\n      }\n    };\n    var v2 = [1, 1, 1, 1, 8, 2, 2, 2, 4, 4, 4, 8, 8, 8, 16, 16], d2 = [1, 2, 4, 8, 1, 2, 4, 8, 2, 4, 8, 2, 4, 8, 4, 8], g2 = [0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4], S2 = [0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3];\n    e6.slen1_tab = g2, e6.slen2_tab = S2, this.best_scalefac_store = function(e7, a3, t3, s3) {\n      var n3, i3, o3, f3, c3 = s3.tt[a3][t3], h3 = 0;\n      for (o3 = 0, n3 = 0; n3 < c3.sfbmax; n3++) {\n        var u3 = c3.width[n3];\n        for (o3 += u3, f3 = -u3; f3 < 0 && 0 == c3.l3_enc[f3 + o3]; f3++) ;\n        0 == f3 && (c3.scalefac[n3] = h3 = -2);\n      }\n      if (0 == c3.scalefac_scale && 0 == c3.preflag) {\n        var b3 = 0;\n        for (n3 = 0; n3 < c3.sfbmax; n3++) c3.scalefac[n3] > 0 && (b3 |= c3.scalefac[n3]);\n        if (0 == (1 & b3) && 0 != b3) {\n          for (n3 = 0; n3 < c3.sfbmax; n3++) c3.scalefac[n3] > 0 && (c3.scalefac[n3] >>= 1);\n          c3.scalefac_scale = h3 = 1;\n        }\n      }\n      if (0 == c3.preflag && c3.block_type != r2.SHORT_TYPE && 2 == e7.mode_gr) {\n        for (n3 = 11; n3 < r2.SBPSY_l && !(c3.scalefac[n3] < l2.pretab[n3] && -2 != c3.scalefac[n3]); n3++) ;\n        if (n3 == r2.SBPSY_l) {\n          for (n3 = 11; n3 < r2.SBPSY_l; n3++) c3.scalefac[n3] > 0 && (c3.scalefac[n3] -= l2.pretab[n3]);\n          c3.preflag = h3 = 1;\n        }\n      }\n      for (i3 = 0; i3 < 4; i3++) s3.scfsi[t3][i3] = 0;\n      for (2 == e7.mode_gr && 1 == a3 && s3.tt[0][t3].block_type != r2.SHORT_TYPE && s3.tt[1][t3].block_type != r2.SHORT_TYPE && (!function(e8, a4) {\n        for (var t4, s4 = a4.tt[1][e8], n4 = a4.tt[0][e8], i4 = 0; i4 < _2.scfsi_band.length - 1; i4++) {\n          for (t4 = _2.scfsi_band[i4]; t4 < _2.scfsi_band[i4 + 1] && !(n4.scalefac[t4] != s4.scalefac[t4] && s4.scalefac[t4] >= 0); t4++) ;\n          if (t4 == _2.scfsi_band[i4 + 1]) {\n            for (t4 = _2.scfsi_band[i4]; t4 < _2.scfsi_band[i4 + 1]; t4++) s4.scalefac[t4] = -1;\n            a4.scfsi[e8][i4] = 1;\n          }\n        }\n        var o4 = 0, l3 = 0;\n        for (t4 = 0; t4 < 11; t4++) -1 != s4.scalefac[t4] && (l3++, o4 < s4.scalefac[t4] && (o4 = s4.scalefac[t4]));\n        for (var f4 = 0, c4 = 0; t4 < r2.SBPSY_l; t4++) -1 != s4.scalefac[t4] && (c4++, f4 < s4.scalefac[t4] && (f4 = s4.scalefac[t4]));\n        for (i4 = 0; i4 < 16; i4++) if (o4 < v2[i4] && f4 < d2[i4]) {\n          var h4 = g2[i4] * l3 + S2[i4] * c4;\n          s4.part2_length > h4 && (s4.part2_length = h4, s4.scalefac_compress = i4);\n        }\n      }(t3, s3), h3 = 0), n3 = 0; n3 < c3.sfbmax; n3++) -2 == c3.scalefac[n3] && (c3.scalefac[n3] = 0);\n      0 != h3 && (2 == e7.mode_gr ? this.scale_bitcount(c3) : this.scale_bitcount_lsf(e7, c3));\n    };\n    var R2 = [0, 18, 36, 54, 54, 36, 54, 72, 54, 72, 90, 72, 90, 108, 108, 126], A2 = [0, 18, 36, 54, 51, 35, 53, 71, 52, 70, 88, 69, 87, 105, 104, 122], M2 = [0, 10, 20, 30, 33, 21, 31, 41, 32, 42, 52, 43, 53, 63, 64, 74];\n    this.scale_bitcount = function(e7) {\n      var a3, t3, s3, _3 = 0, i3 = 0, f3 = e7.scalefac;\n      if (n2(function(e8, a4) {\n        for (var t4 = 0; t4 < a4; ++t4) if (e8[t4] < 0) return false;\n        return true;\n      }(f3, e7.sfbmax)), e7.block_type == r2.SHORT_TYPE) s3 = R2, 0 != e7.mixed_block_flag && (s3 = A2);\n      else if (s3 = M2, 0 == e7.preflag) {\n        for (t3 = 11; t3 < r2.SBPSY_l && !(f3[t3] < l2.pretab[t3]); t3++) ;\n        if (t3 == r2.SBPSY_l) for (e7.preflag = 1, t3 = 11; t3 < r2.SBPSY_l; t3++) f3[t3] -= l2.pretab[t3];\n      }\n      for (t3 = 0; t3 < e7.sfbdivide; t3++) _3 < f3[t3] && (_3 = f3[t3]);\n      for (; t3 < e7.sfbmax; t3++) i3 < f3[t3] && (i3 = f3[t3]);\n      for (e7.part2_length = o2.LARGE_BITS, a3 = 0; a3 < 16; a3++) _3 < v2[a3] && i3 < d2[a3] && e7.part2_length > s3[a3] && (e7.part2_length = s3[a3], e7.scalefac_compress = a3);\n      return e7.part2_length == o2.LARGE_BITS;\n    };\n    var B2 = [[15, 15, 7, 7], [15, 15, 7, 0], [7, 3, 0, 0], [15, 31, 31, 0], [7, 7, 7, 0], [3, 3, 0, 0]];\n    this.scale_bitcount_lsf = function(e7, t3) {\n      var _3, i3, o3, f3, c3, h3, u3, b3, m3 = s2(4), p3 = t3.scalefac;\n      for (_3 = 0 != t3.preflag ? 2 : 0, u3 = 0; u3 < 4; u3++) m3[u3] = 0;\n      if (t3.block_type == r2.SHORT_TYPE) {\n        i3 = 1;\n        var v3 = l2.nr_of_sfb_block[_3][i3];\n        for (b3 = 0, o3 = 0; o3 < 4; o3++) for (f3 = v3[o3] / 3, u3 = 0; u3 < f3; u3++, b3++) for (c3 = 0; c3 < 3; c3++) p3[3 * b3 + c3] > m3[o3] && (m3[o3] = p3[3 * b3 + c3]);\n      } else {\n        i3 = 0;\n        v3 = l2.nr_of_sfb_block[_3][i3];\n        for (b3 = 0, o3 = 0; o3 < 4; o3++) for (f3 = v3[o3], u3 = 0; u3 < f3; u3++, b3++) p3[b3] > m3[o3] && (m3[o3] = p3[b3]);\n      }\n      for (h3 = false, o3 = 0; o3 < 4; o3++) m3[o3] > B2[_3][o3] && (h3 = true);\n      if (!h3) {\n        var d3, g3, S3, R3;\n        for (t3.sfb_partition_table = l2.nr_of_sfb_block[_3][i3], o3 = 0; o3 < 4; o3++) t3.slen[o3] = w2[m3[o3]];\n        switch (d3 = t3.slen[0], g3 = t3.slen[1], S3 = t3.slen[2], R3 = t3.slen[3], _3) {\n          case 0:\n            t3.scalefac_compress = (5 * d3 + g3 << 4) + (S3 << 2) + R3;\n            break;\n          case 1:\n            t3.scalefac_compress = 400 + (5 * d3 + g3 << 2) + S3;\n            break;\n          case 2:\n            t3.scalefac_compress = 500 + 3 * d3 + g3;\n            break;\n          default:\n            a2.err.printf(\"intensity stereo not implemented yet\\n\");\n        }\n      }\n      if (!h3) for (n2(null != t3.sfb_partition_table), t3.part2_length = 0, o3 = 0; o3 < 4; o3++) t3.part2_length += t3.slen[o3] * t3.sfb_partition_table[o3];\n      return h3;\n    };\n    var w2 = [0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4];\n    this.huffman_init = function(e7) {\n      for (var a3 = 2; a3 <= 576; a3 += 2) {\n        for (var t3, s3 = 0; e7.scalefac_band.l[++s3] < a3; ) ;\n        for (t3 = c2[s3][0]; e7.scalefac_band.l[t3 + 1] > a3; ) t3--;\n        for (t3 < 0 && (t3 = c2[s3][0]), e7.bv_scf[a3 - 2] = t3, t3 = c2[s3][1]; e7.scalefac_band.l[t3 + e7.bv_scf[a3 - 2] + 2] > a3; ) t3--;\n        t3 < 0 && (t3 = c2[s3][1]), e7.bv_scf[a3 - 1] = t3;\n      }\n    };\n  }, aa;\n}\nfunction fa() {\n  if (na) return sa;\n  na = 1;\n  var e5 = p, a2 = e5.System, t2 = e5.Arrays, s2 = e5.new_byte, n2 = e5.new_float_n, r2 = e5.new_int, _2 = e5.assert, i2 = la(), o2 = ia, l2 = A(), f2 = Ee;\n  function c2() {\n    var e6 = ca(), c3 = this, h2 = null, u2 = null, b2 = null, m2 = null;\n    this.setModules = function(e7, a3, t3, s3) {\n      h2 = e7, u2 = a3, b2 = t3, m2 = s3;\n    };\n    var p2 = null, v2 = 0, d2 = 0, g2 = 0;\n    function S2(e7) {\n      a2.arraycopy(e7.header[e7.w_ptr].buf, 0, p2, d2, e7.sideinfo_len), d2 += e7.sideinfo_len, v2 += 8 * e7.sideinfo_len, e7.w_ptr = e7.w_ptr + 1 & f2.MAX_HEADER_BUF - 1;\n    }\n    function R2(a3, t3, s3) {\n      for (; s3 > 0; ) {\n        var n3;\n        0 == g2 && (g2 = 8, d2++, _2(d2 < e6.LAME_MAXMP3BUFFER), _2(a3.header[a3.w_ptr].write_timing >= v2), a3.header[a3.w_ptr].write_timing == v2 && S2(a3), p2[d2] = 0), s3 -= n3 = Math.min(s3, g2), g2 -= n3, p2[d2] |= t3 >> s3 << g2, v2 += n3;\n      }\n    }\n    function A2(a3, t3, s3) {\n      for (; s3 > 0; ) {\n        var n3;\n        0 == g2 && (g2 = 8, d2++, _2(d2 < e6.LAME_MAXMP3BUFFER), p2[d2] = 0), s3 -= n3 = Math.min(s3, g2), g2 -= n3, p2[d2] |= t3 >> s3 << g2, v2 += n3;\n      }\n    }\n    function M2(e7, a3) {\n      var t3, s3 = e7.internal_flags;\n      if (a3 >= 8 && (R2(s3, 76, 8), a3 -= 8), a3 >= 8 && (R2(s3, 65, 8), a3 -= 8), a3 >= 8 && (R2(s3, 77, 8), a3 -= 8), a3 >= 8 && (R2(s3, 69, 8), a3 -= 8), a3 >= 32) {\n        var n3 = b2.getLameShortVersion();\n        if (a3 >= 32) for (t3 = 0; t3 < n3.length && a3 >= 8; ++t3) a3 -= 8, R2(s3, n3.charAt(t3), 8);\n      }\n      for (; a3 >= 1; a3 -= 1) R2(s3, s3.ancillary_flag, 1), s3.ancillary_flag ^= e7.disable_reservoir ? 0 : 1;\n    }\n    function B2(e7, a3, t3) {\n      for (var s3 = e7.header[e7.h_ptr].ptr; t3 > 0; ) {\n        var n3 = Math.min(t3, 8 - (7 & s3));\n        t3 -= n3, e7.header[e7.h_ptr].buf[s3 >> 3] |= a3 >> t3 << 8 - (7 & s3) - n3, s3 += n3;\n      }\n      e7.header[e7.h_ptr].ptr = s3;\n    }\n    function w2(e7, a3) {\n      e7 <<= 8;\n      for (var t3 = 0; t3 < 8; t3++) 0 != (65536 & ((a3 <<= 1) ^ (e7 <<= 1))) && (a3 ^= 32773);\n      return a3;\n    }\n    function T2(e7, a3) {\n      var t3, s3 = o2.ht[a3.count1table_select + 32], n3 = 0, r3 = a3.big_values, i3 = a3.big_values;\n      for (_2(a3.count1table_select < 2), t3 = (a3.count1 - a3.big_values) / 4; t3 > 0; --t3) {\n        var l3 = 0, f3 = 0;\n        0 != a3.l3_enc[r3 + 0] && (f3 += 8, a3.xr[i3 + 0] < 0 && l3++), 0 != a3.l3_enc[r3 + 1] && (f3 += 4, l3 *= 2, a3.xr[i3 + 1] < 0 && l3++), 0 != a3.l3_enc[r3 + 2] && (f3 += 2, l3 *= 2, a3.xr[i3 + 2] < 0 && l3++), 0 != a3.l3_enc[r3 + 3] && (f3++, l3 *= 2, a3.xr[i3 + 3] < 0 && l3++), r3 += 4, i3 += 4, R2(e7, l3 + s3.table[f3], s3.hlen[f3]), n3 += s3.hlen[f3];\n      }\n      return n3;\n    }\n    function E2(e7, a3, t3, s3, n3) {\n      var r3 = o2.ht[a3], i3 = 0;\n      if (0 == a3) return i3;\n      for (var l3 = t3; l3 < s3; l3 += 2) {\n        var f3 = 0, c4 = 0, h3 = r3.xlen, u3 = r3.xlen, b3 = 0, m3 = n3.l3_enc[l3], p3 = n3.l3_enc[l3 + 1];\n        if (0 != m3 && (n3.xr[l3] < 0 && b3++, f3--), a3 > 15) {\n          if (m3 > 14) {\n            var v3 = m3 - 15;\n            _2(v3 <= r3.linmax), b3 |= v3 << 1, c4 = h3, m3 = 15;\n          }\n          if (p3 > 14) {\n            var d3 = p3 - 15;\n            _2(d3 <= r3.linmax), b3 <<= h3, b3 |= d3, c4 += h3, p3 = 15;\n          }\n          u3 = 16;\n        }\n        0 != p3 && (b3 <<= 1, n3.xr[l3 + 1] < 0 && b3++, f3--), m3 = m3 * u3 + p3, c4 -= f3, f3 += r3.hlen[m3], R2(e7, r3.table[m3], f3), R2(e7, b3, c4), i3 += f3 + c4;\n      }\n      return i3;\n    }\n    function k2(e7, a3) {\n      var t3 = 3 * e7.scalefac_band.s[3];\n      t3 > a3.big_values && (t3 = a3.big_values);\n      var s3 = E2(e7, a3.table_select[0], 0, t3, a3);\n      return s3 += E2(e7, a3.table_select[1], t3, a3.big_values, a3);\n    }\n    function y2(e7, a3) {\n      var t3, s3, n3, r3;\n      t3 = a3.big_values;\n      var i3 = a3.region0_count + 1;\n      return _2(i3 < e7.scalefac_band.l.length), n3 = e7.scalefac_band.l[i3], i3 += a3.region1_count + 1, _2(i3 < e7.scalefac_band.l.length), n3 > t3 && (n3 = t3), (r3 = e7.scalefac_band.l[i3]) > t3 && (r3 = t3), s3 = E2(e7, a3.table_select[0], 0, n3, a3), s3 += E2(e7, a3.table_select[1], n3, r3, a3), s3 += E2(e7, a3.table_select[2], r3, t3, a3);\n    }\n    function x2() {\n      this.total = 0;\n    }\n    function P2(e7, t3) {\n      var s3, n3, r3, _3, i3, o3 = e7.internal_flags;\n      return i3 = o3.w_ptr, -1 == (_3 = o3.h_ptr - 1) && (_3 = f2.MAX_HEADER_BUF - 1), s3 = o3.header[_3].write_timing - v2, t3.total = s3, s3 >= 0 && (n3 = 1 + _3 - i3, _3 < i3 && (n3 = 1 + _3 - i3 + f2.MAX_HEADER_BUF), s3 -= 8 * n3 * o3.sideinfo_len), s3 += r3 = c3.getframebits(e7), t3.total += r3, t3.total % 8 != 0 ? t3.total = 1 + t3.total / 8 : t3.total = t3.total / 8, t3.total += d2 + 1, s3 < 0 && a2.err.println(\"strange error flushing buffer ... \\n\"), s3;\n    }\n    this.getframebits = function(e7) {\n      var a3, t3 = e7.internal_flags;\n      return a3 = 0 != t3.bitrate_index ? o2.bitrate_table[e7.version][t3.bitrate_index] : e7.brate, 8 * (0 | 72e3 * (e7.version + 1) * a3 / e7.out_samplerate + t3.padding);\n    }, this.CRC_writeheader = function(e7, a3) {\n      var t3 = 65535;\n      t3 = w2(255 & a3[2], t3), t3 = w2(255 & a3[3], t3);\n      for (var s3 = 6; s3 < e7.sideinfo_len; s3++) t3 = w2(255 & a3[s3], t3);\n      a3[4] = byte(t3 >> 8), a3[5] = byte(255 & t3);\n    }, this.flush_bitstream = function(e7) {\n      var a3, t3, s3 = e7.internal_flags, n3 = s3.h_ptr - 1;\n      if (-1 == n3 && (n3 = f2.MAX_HEADER_BUF - 1), a3 = s3.l3_side, !((t3 = P2(e7, new x2())) < 0)) {\n        if (M2(e7, t3), _2(s3.header[n3].write_timing + this.getframebits(e7) == v2), s3.ResvSize = 0, a3.main_data_begin = 0, s3.findReplayGain) {\n          var r3 = h2.GetTitleGain(s3.rgdata);\n          _2(NEQ(r3, GainAnalysis.GAIN_NOT_ENOUGH_SAMPLES)), s3.RadioGain = 0 | Math.floor(10 * r3 + 0.5);\n        }\n        s3.findPeakSample && (s3.noclipGainChange = 0 | Math.ceil(20 * Math.log10(s3.PeakSample / 32767) * 10), s3.noclipGainChange > 0 && (EQ(e7.scale, 1) || EQ(e7.scale, 0)) ? s3.noclipScale = Math.floor(32767 / s3.PeakSample * 100) / 100 : s3.noclipScale = -1);\n      }\n    }, this.add_dummy_byte = function(e7, a3, t3) {\n      for (var s3, n3 = e7.internal_flags; t3-- > 0; ) for (A2(0, a3, 8), s3 = 0; s3 < f2.MAX_HEADER_BUF; ++s3) n3.header[s3].write_timing += 8;\n    }, this.format_bitstream = function(e7) {\n      var s3, n3 = e7.internal_flags;\n      s3 = n3.l3_side;\n      var r3 = this.getframebits(e7);\n      M2(e7, s3.resvDrain_pre), function(e8, s4) {\n        var n4, r4, i3, o4 = e8.internal_flags;\n        if (n4 = o4.l3_side, o4.header[o4.h_ptr].ptr = 0, t2.fill(o4.header[o4.h_ptr].buf, 0, o4.sideinfo_len, 0), e8.out_samplerate < 16e3 ? B2(o4, 4094, 12) : B2(o4, 4095, 12), B2(o4, e8.version, 1), B2(o4, 1, 2), B2(o4, e8.error_protection ? 0 : 1, 1), B2(o4, o4.bitrate_index, 4), B2(o4, o4.samplerate_index, 2), B2(o4, o4.padding, 1), B2(o4, e8.extension, 1), B2(o4, e8.mode.ordinal(), 2), B2(o4, o4.mode_ext, 2), B2(o4, e8.copyright, 1), B2(o4, e8.original, 1), B2(o4, e8.emphasis, 2), e8.error_protection && B2(o4, 0, 16), 1 == e8.version) {\n          for (_2(n4.main_data_begin >= 0), B2(o4, n4.main_data_begin, 9), 2 == o4.channels_out ? B2(o4, n4.private_bits, 3) : B2(o4, n4.private_bits, 5), i3 = 0; i3 < o4.channels_out; i3++) {\n            var c5;\n            for (c5 = 0; c5 < 4; c5++) B2(o4, n4.scfsi[i3][c5], 1);\n          }\n          for (r4 = 0; r4 < 2; r4++) for (i3 = 0; i3 < o4.channels_out; i3++) B2(o4, (h3 = n4.tt[r4][i3]).part2_3_length + h3.part2_length, 12), B2(o4, h3.big_values / 2, 9), B2(o4, h3.global_gain, 8), B2(o4, h3.scalefac_compress, 4), h3.block_type != l2.NORM_TYPE ? (B2(o4, 1, 1), B2(o4, h3.block_type, 2), B2(o4, h3.mixed_block_flag, 1), 14 == h3.table_select[0] && (h3.table_select[0] = 16), B2(o4, h3.table_select[0], 5), 14 == h3.table_select[1] && (h3.table_select[1] = 16), B2(o4, h3.table_select[1], 5), B2(o4, h3.subblock_gain[0], 3), B2(o4, h3.subblock_gain[1], 3), B2(o4, h3.subblock_gain[2], 3)) : (B2(o4, 0, 1), 14 == h3.table_select[0] && (h3.table_select[0] = 16), B2(o4, h3.table_select[0], 5), 14 == h3.table_select[1] && (h3.table_select[1] = 16), B2(o4, h3.table_select[1], 5), 14 == h3.table_select[2] && (h3.table_select[2] = 16), B2(o4, h3.table_select[2], 5), _2(0 <= h3.region0_count && h3.region0_count < 16), _2(0 <= h3.region1_count && h3.region1_count < 8), B2(o4, h3.region0_count, 4), B2(o4, h3.region1_count, 3)), B2(o4, h3.preflag, 1), B2(o4, h3.scalefac_scale, 1), B2(o4, h3.count1table_select, 1);\n        } else for (_2(n4.main_data_begin >= 0), B2(o4, n4.main_data_begin, 8), B2(o4, n4.private_bits, o4.channels_out), r4 = 0, i3 = 0; i3 < o4.channels_out; i3++) {\n          var h3;\n          B2(o4, (h3 = n4.tt[r4][i3]).part2_3_length + h3.part2_length, 12), B2(o4, h3.big_values / 2, 9), B2(o4, h3.global_gain, 8), B2(o4, h3.scalefac_compress, 9), h3.block_type != l2.NORM_TYPE ? (B2(o4, 1, 1), B2(o4, h3.block_type, 2), B2(o4, h3.mixed_block_flag, 1), 14 == h3.table_select[0] && (h3.table_select[0] = 16), B2(o4, h3.table_select[0], 5), 14 == h3.table_select[1] && (h3.table_select[1] = 16), B2(o4, h3.table_select[1], 5), B2(o4, h3.subblock_gain[0], 3), B2(o4, h3.subblock_gain[1], 3), B2(o4, h3.subblock_gain[2], 3)) : (B2(o4, 0, 1), 14 == h3.table_select[0] && (h3.table_select[0] = 16), B2(o4, h3.table_select[0], 5), 14 == h3.table_select[1] && (h3.table_select[1] = 16), B2(o4, h3.table_select[1], 5), 14 == h3.table_select[2] && (h3.table_select[2] = 16), B2(o4, h3.table_select[2], 5), _2(0 <= h3.region0_count && h3.region0_count < 16), _2(0 <= h3.region1_count && h3.region1_count < 8), B2(o4, h3.region0_count, 4), B2(o4, h3.region1_count, 3)), B2(o4, h3.scalefac_scale, 1), B2(o4, h3.count1table_select, 1);\n        }\n        e8.error_protection && CRC_writeheader(o4, o4.header[o4.h_ptr].buf);\n        var u3 = o4.h_ptr;\n        _2(o4.header[u3].ptr == 8 * o4.sideinfo_len), o4.h_ptr = u3 + 1 & f2.MAX_HEADER_BUF - 1, o4.header[o4.h_ptr].write_timing = o4.header[u3].write_timing + s4, o4.h_ptr == o4.w_ptr && a2.err.println(\"Error: MAX_HEADER_BUF too small in bitstream.c \\n\");\n      }(e7, r3);\n      var o3 = 8 * n3.sideinfo_len;\n      if (o3 += function(e8) {\n        var a3, t3, s4, n4, r4 = 0, o4 = e8.internal_flags, f3 = o4.l3_side;\n        if (1 == e8.version) for (a3 = 0; a3 < 2; a3++) for (t3 = 0; t3 < o4.channels_out; t3++) {\n          var c5 = f3.tt[a3][t3], h3 = i2.slen1_tab[c5.scalefac_compress], u3 = i2.slen2_tab[c5.scalefac_compress];\n          for (n4 = 0, s4 = 0; s4 < c5.sfbdivide; s4++) -1 != c5.scalefac[s4] && (R2(o4, c5.scalefac[s4], h3), n4 += h3);\n          for (; s4 < c5.sfbmax; s4++) -1 != c5.scalefac[s4] && (R2(o4, c5.scalefac[s4], u3), n4 += u3);\n          _2(n4 == c5.part2_length), c5.block_type == l2.SHORT_TYPE ? n4 += k2(o4, c5) : n4 += y2(o4, c5), n4 += T2(o4, c5), _2(n4 == c5.part2_3_length + c5.part2_length), r4 += n4;\n        }\n        else for (a3 = 0, t3 = 0; t3 < o4.channels_out; t3++) {\n          c5 = f3.tt[a3][t3];\n          var b3, m3, p3 = 0;\n          if (_2(null != c5.sfb_partition_table), n4 = 0, s4 = 0, m3 = 0, c5.block_type == l2.SHORT_TYPE) {\n            for (; m3 < 4; m3++) {\n              var v3 = c5.sfb_partition_table[m3] / 3, d3 = c5.slen[m3];\n              for (b3 = 0; b3 < v3; b3++, s4++) R2(o4, Math.max(c5.scalefac[3 * s4 + 0], 0), d3), R2(o4, Math.max(c5.scalefac[3 * s4 + 1], 0), d3), R2(o4, Math.max(c5.scalefac[3 * s4 + 2], 0), d3), p3 += 3 * d3;\n            }\n            n4 += k2(o4, c5);\n          } else {\n            for (; m3 < 4; m3++) for (v3 = c5.sfb_partition_table[m3], d3 = c5.slen[m3], b3 = 0; b3 < v3; b3++, s4++) R2(o4, Math.max(c5.scalefac[s4], 0), d3), p3 += d3;\n            n4 += y2(o4, c5);\n          }\n          n4 += T2(o4, c5), _2(n4 == c5.part2_3_length), _2(p3 == c5.part2_length), r4 += p3 + n4;\n        }\n        return r4;\n      }(e7), M2(e7, s3.resvDrain_post), o3 += s3.resvDrain_post, s3.main_data_begin += (r3 - o3) / 8, P2(e7, new x2()) != n3.ResvSize && a2.err.println(\"Internal buffer inconsistency. flushbits <> ResvSize\"), 8 * s3.main_data_begin != n3.ResvSize && (a2.err.printf(\"bit reservoir error: \\nl3_side.main_data_begin: %d \\nResvoir size:             %d \\nresv drain (post)         %d \\nresv drain (pre)          %d \\nheader and sideinfo:      %d \\ndata bits:                %d \\ntotal bits:               %d (remainder: %d) \\nbitsperframe:             %d \\n\", 8 * s3.main_data_begin, n3.ResvSize, s3.resvDrain_post, s3.resvDrain_pre, 8 * n3.sideinfo_len, o3 - s3.resvDrain_post - 8 * n3.sideinfo_len, o3, o3 % 8, r3), a2.err.println(\"This is a fatal error.  It has several possible causes:\"), a2.err.println(\"90%%  LAME compiled with buggy version of gcc using advanced optimizations\"), a2.err.println(\" 9%%  Your system is overclocked\"), a2.err.println(\" 1%%  bug in LAME encoding library\"), n3.ResvSize = 8 * s3.main_data_begin), v2 > 1e9) {\n        var c4;\n        for (c4 = 0; c4 < f2.MAX_HEADER_BUF; ++c4) n3.header[c4].write_timing -= v2;\n        v2 = 0;\n      }\n      return 0;\n    }, this.copy_buffer = function(e7, t3, s3, _3, i3) {\n      var o3 = d2 + 1;\n      if (o3 <= 0) return 0;\n      if (0 != _3 && o3 > _3) return -1;\n      if (a2.arraycopy(p2, 0, t3, s3, o3), d2 = -1, g2 = 0, 0 != i3) {\n        var l3 = r2(1);\n        if (l3[0] = e7.nMusicCRC, m2.updateMusicCRC(l3, t3, s3, o3), e7.nMusicCRC = l3[0], o3 > 0 && (e7.VBR_seek_table.nBytesWritten += o3), e7.decode_on_the_fly) {\n          for (var f3, c4 = n2([2, 1152]), b3 = o3, v3 = -1; 0 != v3; ) if (v3 = u2.hip_decode1_unclipped(e7.hip, t3, s3, b3, c4[0], c4[1]), b3 = 0, -1 == v3 && (v3 = 0), v3 > 0) {\n            if (e7.findPeakSample) {\n              for (f3 = 0; f3 < v3; f3++) c4[0][f3] > e7.PeakSample ? e7.PeakSample = c4[0][f3] : -c4[0][f3] > e7.PeakSample && (e7.PeakSample = -c4[0][f3]);\n              if (e7.channels_out > 1) for (f3 = 0; f3 < v3; f3++) c4[1][f3] > e7.PeakSample ? e7.PeakSample = c4[1][f3] : -c4[1][f3] > e7.PeakSample && (e7.PeakSample = -c4[1][f3]);\n            }\n            if (e7.findReplayGain && h2.AnalyzeSamples(e7.rgdata, c4[0], 0, c4[1], 0, v3, e7.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR) return -6;\n          }\n        }\n      }\n      return o3;\n    }, this.init_bit_stream_w = function(a3) {\n      p2 = s2(e6.LAME_MAXMP3BUFFER), a3.h_ptr = a3.w_ptr = 0, a3.header[a3.h_ptr].write_timing = 0, d2 = -1, g2 = 0, v2 = 0;\n    };\n  }\n  return c2.EQ = function(e6, a3) {\n    return Math.abs(e6) > Math.abs(a3) ? Math.abs(e6 - a3) <= 1e-6 * Math.abs(e6) : Math.abs(e6 - a3) <= 1e-6 * Math.abs(a3);\n  }, c2.NEQ = function(e6, a3) {\n    return !c2.EQ(e6, a3);\n  }, sa = c2;\n}\nfunction ca() {\n  if (_a) return ra;\n  _a = 1;\n  var e5 = p, a2 = e5.System, t2 = e5.VbrMode, s2 = e5.ShortBlock, n2 = e5.new_float, r2 = e5.new_int_n, _2 = e5.new_short_n, i2 = e5.assert, o2 = Y, l2 = F, f2 = Ee, c2 = xe, h2 = Ye, u2 = Qe, b2 = fa(), m2 = ia, v2 = A();\n  return ra = function e6() {\n    var p2, d2, g2, S2, A2, M2 = R, B2 = this;\n    e6.V9 = 410, e6.V8 = 420, e6.V7 = 430, e6.V6 = 440, e6.V5 = 450, e6.V4 = 460, e6.V3 = 470, e6.V2 = 480, e6.V1 = 490, e6.V0 = 500, e6.R3MIX = 1e3, e6.STANDARD = 1001, e6.EXTREME = 1002, e6.INSANE = 1003, e6.STANDARD_FAST = 1004, e6.EXTREME_FAST = 1005, e6.MEDIUM = 1006, e6.MEDIUM_FAST = 1007, e6.LAME_MAXMP3BUFFER = 147456;\n    var w2, T2, E2, k2 = new o2();\n    function y2() {\n      this.mask_adjust = 0, this.mask_adjust_short = 0, this.bo_l_weight = n2(v2.SBMAX_l), this.bo_s_weight = n2(v2.SBMAX_s);\n    }\n    function x2() {\n      this.lowerlimit = 0;\n    }\n    function P2(e7, a3) {\n      this.lowpass = a3;\n    }\n    this.enc = new v2(), this.setModules = function(e7, a3, t3, s3, n3, r3, _3, i3, o3) {\n      p2 = e7, d2 = a3, g2 = t3, S2 = s3, A2 = n3, w2 = r3, T2 = i3, E2 = o3, this.enc.setModules(d2, k2, S2, w2);\n    };\n    var I2 = 4294479419;\n    function H2(e7) {\n      return e7 > 1 ? 0 : e7 <= 0 ? 1 : Math.cos(Math.PI / 2 * e7);\n    }\n    function V2(e7, a3) {\n      switch (e7) {\n        case 44100:\n          return a3.version = 1, 0;\n        case 48e3:\n          return a3.version = 1, 1;\n        case 32e3:\n          return a3.version = 1, 2;\n        case 22050:\n        case 11025:\n          return a3.version = 0, 0;\n        case 24e3:\n        case 12e3:\n          return a3.version = 0, 1;\n        case 16e3:\n        case 8e3:\n          return a3.version = 0, 2;\n        default:\n          return a3.version = 0, -1;\n      }\n    }\n    function L2(e7, a3, t3) {\n      t3 < 16e3 && (a3 = 2);\n      for (var s3 = m2.bitrate_table[a3][1], n3 = 2; n3 <= 14; n3++) m2.bitrate_table[a3][n3] > 0 && Math.abs(m2.bitrate_table[a3][n3] - e7) < Math.abs(s3 - e7) && (s3 = m2.bitrate_table[a3][n3]);\n      return s3;\n    }\n    function N2(e7, a3, t3) {\n      t3 < 16e3 && (a3 = 2);\n      for (var s3 = 0; s3 <= 14; s3++) if (m2.bitrate_table[a3][s3] > 0 && m2.bitrate_table[a3][s3] == e7) return s3;\n      return -1;\n    }\n    function O2(e7, a3) {\n      var t3 = [new P2(8, 2e3), new P2(16, 3700), new P2(24, 3900), new P2(32, 5500), new P2(40, 7e3), new P2(48, 7500), new P2(56, 1e4), new P2(64, 11e3), new P2(80, 13500), new P2(96, 15100), new P2(112, 15600), new P2(128, 17e3), new P2(160, 17500), new P2(192, 18600), new P2(224, 19400), new P2(256, 19700), new P2(320, 20500)], s3 = B2.nearestBitrateFullIndex(a3);\n      e7.lowerlimit = t3[s3].lowpass;\n    }\n    function X2(e7) {\n      var a3 = v2.BLKSIZE + e7.framesize - v2.FFTOFFSET;\n      return a3 = Math.max(a3, 512 + e7.framesize - 32);\n    }\n    function D2(e7, a3, t3, s3, n3, r3) {\n      var _3 = B2.enc.lame_encode_mp3_frame(e7, a3, t3, s3, n3, r3);\n      return e7.frameNum++, _3;\n    }\n    function Y2() {\n      this.n_in = 0, this.n_out = 0;\n    }\n    function q2() {\n      this.num_used = 0;\n    }\n    function F2(e7, a3) {\n      return 0 != a3 ? F2(a3, e7 % a3) : e7;\n    }\n    function C2(e7, a3, t3) {\n      var s3 = Math.PI * a3;\n      (e7 /= t3) < 0 && (e7 = 0), e7 > 1 && (e7 = 1);\n      var n3 = e7 - 0.5, r3 = 0.42 - 0.5 * Math.cos(2 * e7 * Math.PI) + 0.08 * Math.cos(4 * e7 * Math.PI);\n      return Math.abs(n3) < 1e-9 ? s3 / Math.PI : r3 * Math.sin(t3 * s3 * n3) / (Math.PI * t3 * n3);\n    }\n    function j2(e7, a3, t3, s3, r3, _3, o3, l3, c3) {\n      var h3, u3, b3 = e7.internal_flags, m3 = 0, p3 = e7.out_samplerate / F2(e7.out_samplerate, e7.in_samplerate);\n      p3 > f2.BPC && (p3 = f2.BPC);\n      var v3 = Math.abs(b3.resample_ratio - Math.floor(0.5 + b3.resample_ratio)) < 1e-4 ? 1 : 0, d3 = 1 / b3.resample_ratio;\n      d3 > 1 && (d3 = 1);\n      var g3 = 31;\n      0 == g3 % 2 && --g3;\n      var S3 = (g3 += v3) + 1;\n      if (0 == b3.fill_buffer_resample_init) {\n        for (b3.inbuf_old[0] = n2(S3), b3.inbuf_old[1] = n2(S3), h3 = 0; h3 <= 2 * p3; ++h3) b3.blackfilt[h3] = n2(S3);\n        for (b3.itime[0] = 0, b3.itime[1] = 0, m3 = 0; m3 <= 2 * p3; m3++) {\n          var R2 = 0, A3 = (m3 - p3) / (2 * p3);\n          for (h3 = 0; h3 <= g3; h3++) R2 += b3.blackfilt[m3][h3] = C2(h3 - A3, d3, g3);\n          for (h3 = 0; h3 <= g3; h3++) b3.blackfilt[m3][h3] /= R2;\n        }\n        b3.fill_buffer_resample_init = 1;\n      }\n      var M3 = b3.inbuf_old[c3];\n      for (u3 = 0; u3 < s3; u3++) {\n        var B3, w3;\n        if (B3 = u3 * b3.resample_ratio, g3 + (m3 = 0 | Math.floor(B3 - b3.itime[c3])) - g3 / 2 >= o3) break;\n        A3 = B3 - b3.itime[c3] - (m3 + g3 % 2 * 0.5);\n        w3 = 0 | Math.floor(2 * A3 * p3 + p3 + 0.5);\n        var T3 = 0;\n        for (h3 = 0; h3 <= g3; ++h3) {\n          var E3 = 0 | h3 + m3 - g3 / 2;\n          T3 += (E3 < 0 ? M3[S3 + E3] : r3[_3 + E3]) * b3.blackfilt[w3][h3];\n        }\n        a3[t3 + u3] = T3;\n      }\n      if (l3.num_used = Math.min(o3, g3 + m3 - g3 / 2), b3.itime[c3] += l3.num_used - u3 * b3.resample_ratio, l3.num_used >= S3) for (h3 = 0; h3 < S3; h3++) M3[h3] = r3[_3 + l3.num_used + h3 - S3];\n      else {\n        var k3 = S3 - l3.num_used;\n        for (h3 = 0; h3 < k3; ++h3) M3[h3] = M3[h3 + l3.num_used];\n        for (m3 = 0; h3 < S3; ++h3, ++m3) M3[h3] = r3[_3 + m3];\n        i2(m3 == l3.num_used);\n      }\n      return u3;\n    }\n    function G2(e7, a3, t3, s3, n3, r3) {\n      var _3 = e7.internal_flags;\n      if (_3.resample_ratio < 0.9999 || _3.resample_ratio > 1.0001) for (var i3 = 0; i3 < _3.channels_out; i3++) {\n        var o3 = new q2();\n        r3.n_out = j2(e7, a3[i3], _3.mf_size, e7.framesize, t3[i3], s3, n3, o3, i3), r3.n_in = o3.num_used;\n      }\n      else {\n        r3.n_out = Math.min(e7.framesize, n3), r3.n_in = r3.n_out;\n        for (var l3 = 0; l3 < r3.n_out; ++l3) a3[0][_3.mf_size + l3] = t3[0][s3 + l3], 2 == _3.channels_out && (a3[1][_3.mf_size + l3] = t3[1][s3 + l3]);\n      }\n    }\n    this.lame_init = function() {\n      var e7 = new l2();\n      return function(e8) {\n        var a3;\n        e8.class_id = I2, a3 = e8.internal_flags = new f2(), e8.mode = M2.NOT_SET, e8.original = 1, e8.in_samplerate = 44100, e8.num_channels = 2, e8.num_samples = -1, e8.bWriteVbrTag = true, e8.quality = -1, e8.short_blocks = null, a3.subblock_gain = -1, e8.lowpassfreq = 0, e8.highpassfreq = 0, e8.lowpasswidth = -1, e8.highpasswidth = -1, e8.VBR = t2.vbr_off, e8.VBR_q = 4, e8.ATHcurve = -1, e8.VBR_mean_bitrate_kbps = 128, e8.VBR_min_bitrate_kbps = 0, e8.VBR_max_bitrate_kbps = 0, e8.VBR_hard_min = 0, a3.VBR_min_bitrate = 1, a3.VBR_max_bitrate = 13, e8.quant_comp = -1, e8.quant_comp_short = -1, e8.msfix = -1, a3.resample_ratio = 1, a3.OldValue[0] = 180, a3.OldValue[1] = 180, a3.CurrentStep[0] = 4, a3.CurrentStep[1] = 4, a3.masking_lower = 1, a3.nsPsy.attackthre = -1, a3.nsPsy.attackthre_s = -1, e8.scale = -1, e8.athaa_type = -1, e8.ATHtype = -1, e8.athaa_loudapprox = -1, e8.athaa_sensitivity = 0, e8.useTemporal = null, e8.interChRatio = -1, a3.mf_samples_to_encode = v2.ENCDELAY + v2.POSTDELAY, e8.encoder_padding = 0, a3.mf_size = v2.ENCDELAY - v2.MDCTDELAY, e8.findReplayGain = false, e8.decode_on_the_fly = false, a3.decode_on_the_fly = false, a3.findReplayGain = false, a3.findPeakSample = false, a3.RadioGain = 0, a3.AudiophileGain = 0, a3.noclipGainChange = 0, a3.noclipScale = -1, e8.preset = 0, e8.write_id3tag_automatic = true;\n      }(e7), e7.lame_allocated_gfp = 1, e7;\n    }, this.nearestBitrateFullIndex = function(e7) {\n      var a3 = [8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320], t3 = 0, s3 = 0, n3 = 0, r3 = 0;\n      r3 = a3[16], n3 = 16, s3 = a3[16], t3 = 16;\n      for (var _3 = 0; _3 < 16; _3++) if (Math.max(e7, a3[_3 + 1]) != e7) {\n        r3 = a3[_3 + 1], n3 = _3 + 1, s3 = a3[_3], t3 = _3;\n        break;\n      }\n      return r3 - e7 > e7 - s3 ? t3 : n3;\n    }, this.lame_init_params = function(e7) {\n      var n3, _3, l3, f3 = e7.internal_flags;\n      if (f3.Class_ID = 0, null == f3.ATH && (f3.ATH = new c2()), null == f3.PSY && (f3.PSY = new y2()), null == f3.rgdata && (f3.rgdata = new h2()), f3.channels_in = e7.num_channels, 1 == f3.channels_in && (e7.mode = M2.MONO), f3.channels_out = e7.mode == M2.MONO ? 1 : 2, f3.mode_ext = v2.MPG_MD_MS_LR, e7.mode == M2.MONO && (e7.force_ms = false), e7.VBR == t2.vbr_off && 128 != e7.VBR_mean_bitrate_kbps && 0 == e7.brate && (e7.brate = e7.VBR_mean_bitrate_kbps), e7.VBR == t2.vbr_off || e7.VBR == t2.vbr_mtrh || e7.VBR == t2.vbr_mt || (e7.free_format = false), e7.VBR == t2.vbr_off && 0 == e7.brate && b2.EQ(e7.compression_ratio, 0) && (e7.compression_ratio = 11.025), e7.VBR == t2.vbr_off && e7.compression_ratio > 0 && (0 == e7.out_samplerate && (e7.out_samplerate = map2MP3Frequency(int(0.97 * e7.in_samplerate))), e7.brate = 0 | 16 * e7.out_samplerate * f3.channels_out / (1e3 * e7.compression_ratio), f3.samplerate_index = V2(e7.out_samplerate, e7), e7.free_format || (e7.brate = L2(e7.brate, e7.version, e7.out_samplerate))), 0 != e7.out_samplerate && (e7.out_samplerate < 16e3 ? (e7.VBR_mean_bitrate_kbps = Math.max(e7.VBR_mean_bitrate_kbps, 8), e7.VBR_mean_bitrate_kbps = Math.min(e7.VBR_mean_bitrate_kbps, 64)) : e7.out_samplerate < 32e3 ? (e7.VBR_mean_bitrate_kbps = Math.max(e7.VBR_mean_bitrate_kbps, 8), e7.VBR_mean_bitrate_kbps = Math.min(e7.VBR_mean_bitrate_kbps, 160)) : (e7.VBR_mean_bitrate_kbps = Math.max(e7.VBR_mean_bitrate_kbps, 32), e7.VBR_mean_bitrate_kbps = Math.min(e7.VBR_mean_bitrate_kbps, 320))), 0 == e7.lowpassfreq) {\n        var R2 = 16e3;\n        switch (e7.VBR) {\n          case t2.vbr_off:\n            O2(B3 = new x2(), e7.brate), R2 = B3.lowerlimit;\n            break;\n          case t2.vbr_abr:\n            var B3;\n            O2(B3 = new x2(), e7.VBR_mean_bitrate_kbps), R2 = B3.lowerlimit;\n            break;\n          case t2.vbr_rh:\n            var P3 = [19500, 19e3, 18600, 18e3, 17500, 16e3, 15600, 14900, 12500, 1e4, 3950];\n            if (0 <= e7.VBR_q && e7.VBR_q <= 9) {\n              var X3 = P3[e7.VBR_q], D3 = P3[e7.VBR_q + 1], Y3 = e7.VBR_q_frac;\n              R2 = linear_int(X3, D3, Y3);\n            } else R2 = 19500;\n            break;\n          default:\n            P3 = [19500, 19e3, 18500, 18e3, 17500, 16500, 15500, 14500, 12500, 9500, 3950];\n            if (0 <= e7.VBR_q && e7.VBR_q <= 9) {\n              X3 = P3[e7.VBR_q], D3 = P3[e7.VBR_q + 1], Y3 = e7.VBR_q_frac;\n              R2 = linear_int(X3, D3, Y3);\n            } else R2 = 19500;\n        }\n        e7.mode != M2.MONO || e7.VBR != t2.vbr_off && e7.VBR != t2.vbr_abr || (R2 *= 1.5), e7.lowpassfreq = 0 | R2;\n      }\n      if (0 == e7.out_samplerate && (2 * e7.lowpassfreq > e7.in_samplerate && (e7.lowpassfreq = e7.in_samplerate / 2), e7.out_samplerate = (n3 = 0 | e7.lowpassfreq, _3 = e7.in_samplerate, l3 = 44100, _3 >= 48e3 ? l3 = 48e3 : _3 >= 44100 ? l3 = 44100 : _3 >= 32e3 ? l3 = 32e3 : _3 >= 24e3 ? l3 = 24e3 : _3 >= 22050 ? l3 = 22050 : _3 >= 16e3 ? l3 = 16e3 : _3 >= 12e3 ? l3 = 12e3 : _3 >= 11025 ? l3 = 11025 : _3 >= 8e3 && (l3 = 8e3), -1 == n3 ? l3 : (n3 <= 15960 && (l3 = 44100), n3 <= 15250 && (l3 = 32e3), n3 <= 11220 && (l3 = 24e3), n3 <= 9970 && (l3 = 22050), n3 <= 7230 && (l3 = 16e3), n3 <= 5420 && (l3 = 12e3), n3 <= 4510 && (l3 = 11025), n3 <= 3970 && (l3 = 8e3), _3 < l3 ? _3 > 44100 ? 48e3 : _3 > 32e3 ? 44100 : _3 > 24e3 ? 32e3 : _3 > 22050 ? 24e3 : _3 > 16e3 ? 22050 : _3 > 12e3 ? 16e3 : _3 > 11025 ? 12e3 : _3 > 8e3 ? 11025 : 8e3 : l3))), e7.lowpassfreq = Math.min(20500, e7.lowpassfreq), e7.lowpassfreq = Math.min(e7.out_samplerate / 2, e7.lowpassfreq), e7.VBR == t2.vbr_off && (e7.compression_ratio = 16 * e7.out_samplerate * f3.channels_out / (1e3 * e7.brate)), e7.VBR == t2.vbr_abr && (e7.compression_ratio = 16 * e7.out_samplerate * f3.channels_out / (1e3 * e7.VBR_mean_bitrate_kbps)), e7.bWriteVbrTag || (e7.findReplayGain = false, e7.decode_on_the_fly = false, f3.findPeakSample = false), f3.findReplayGain = e7.findReplayGain, f3.decode_on_the_fly = e7.decode_on_the_fly, f3.decode_on_the_fly && (f3.findPeakSample = true), f3.findReplayGain && p2.InitGainAnalysis(f3.rgdata, e7.out_samplerate) == GainAnalysis.INIT_GAIN_ANALYSIS_ERROR) return e7.internal_flags = null, -6;\n      switch (f3.decode_on_the_fly && !e7.decode_only && (null != f3.hip && E2.hip_decode_exit(f3.hip), f3.hip = E2.hip_decode_init()), f3.mode_gr = e7.out_samplerate <= 24e3 ? 1 : 2, e7.framesize = 576 * f3.mode_gr, e7.encoder_delay = v2.ENCDELAY, f3.resample_ratio = e7.in_samplerate / e7.out_samplerate, e7.VBR) {\n        case t2.vbr_mt:\n        case t2.vbr_rh:\n        case t2.vbr_mtrh:\n          e7.compression_ratio = [5.7, 6.5, 7.3, 8.2, 10, 11.9, 13, 14, 15, 16.5][e7.VBR_q];\n          break;\n        case t2.vbr_abr:\n          e7.compression_ratio = 16 * e7.out_samplerate * f3.channels_out / (1e3 * e7.VBR_mean_bitrate_kbps);\n          break;\n        default:\n          e7.compression_ratio = 16 * e7.out_samplerate * f3.channels_out / (1e3 * e7.brate);\n      }\n      if (e7.mode == M2.NOT_SET && (e7.mode = M2.JOINT_STEREO), e7.highpassfreq > 0 ? (f3.highpass1 = 2 * e7.highpassfreq, e7.highpasswidth >= 0 ? f3.highpass2 = 2 * (e7.highpassfreq + e7.highpasswidth) : f3.highpass2 = 2 * e7.highpassfreq, f3.highpass1 /= e7.out_samplerate, f3.highpass2 /= e7.out_samplerate) : (f3.highpass1 = 0, f3.highpass2 = 0), e7.lowpassfreq > 0 ? (f3.lowpass2 = 2 * e7.lowpassfreq, e7.lowpasswidth >= 0 ? (f3.lowpass1 = 2 * (e7.lowpassfreq - e7.lowpasswidth), f3.lowpass1 < 0 && (f3.lowpass1 = 0)) : f3.lowpass1 = 2 * e7.lowpassfreq, f3.lowpass1 /= e7.out_samplerate, f3.lowpass2 /= e7.out_samplerate) : (f3.lowpass1 = 0, f3.lowpass2 = 0), function(e8) {\n        var t3 = e8.internal_flags, s3 = 32, n4 = -1;\n        if (t3.lowpass1 > 0) {\n          for (var r3 = 999, _4 = 0; _4 <= 31; _4++) (f4 = _4 / 31) >= t3.lowpass2 && (s3 = Math.min(s3, _4)), t3.lowpass1 < f4 && f4 < t3.lowpass2 && (r3 = Math.min(r3, _4));\n          t3.lowpass1 = 999 == r3 ? (s3 - 0.75) / 31 : (r3 - 0.75) / 31, t3.lowpass2 = s3 / 31;\n        }\n        if (t3.highpass2 > 0 && t3.highpass2 < 0.75 / 31 * 0.9 && (t3.highpass1 = 0, t3.highpass2 = 0, a2.err.println(\"Warning: highpass filter disabled.  highpass frequency too small\\n\")), t3.highpass2 > 0) {\n          var i3 = -1;\n          for (_4 = 0; _4 <= 31; _4++) (f4 = _4 / 31) <= t3.highpass1 && (n4 = Math.max(n4, _4)), t3.highpass1 < f4 && f4 < t3.highpass2 && (i3 = Math.max(i3, _4));\n          t3.highpass1 = n4 / 31, t3.highpass2 = -1 == i3 ? (n4 + 0.75) / 31 : (i3 + 0.75) / 31;\n        }\n        for (_4 = 0; _4 < 32; _4++) {\n          var o3, l4, f4 = _4 / 31;\n          o3 = t3.highpass2 > t3.highpass1 ? H2((t3.highpass2 - f4) / (t3.highpass2 - t3.highpass1 + 1e-20)) : 1, l4 = t3.lowpass2 > t3.lowpass1 ? H2((f4 - t3.lowpass1) / (t3.lowpass2 - t3.lowpass1 + 1e-20)) : 1, t3.amp_filter[_4] = o3 * l4;\n        }\n      }(e7), f3.samplerate_index = V2(e7.out_samplerate, e7), f3.samplerate_index < 0) return e7.internal_flags = null, -1;\n      if (e7.VBR == t2.vbr_off) {\n        if (e7.free_format) f3.bitrate_index = 0;\n        else if (e7.brate = L2(e7.brate, e7.version, e7.out_samplerate), f3.bitrate_index = N2(e7.brate, e7.version, e7.out_samplerate), f3.bitrate_index <= 0) return e7.internal_flags = null, -1;\n      } else f3.bitrate_index = 1;\n      e7.analysis && (e7.bWriteVbrTag = false), null != f3.pinfo && (e7.bWriteVbrTag = false), d2.init_bit_stream_w(f3);\n      for (var q3, F3 = f3.samplerate_index + 3 * e7.version + 6 * (e7.out_samplerate < 16e3 ? 1 : 0), C3 = 0; C3 < v2.SBMAX_l + 1; C3++) f3.scalefac_band.l[C3] = S2.sfBandIndex[F3].l[C3];\n      for (C3 = 0; C3 < v2.PSFB21 + 1; C3++) {\n        var j3 = (f3.scalefac_band.l[22] - f3.scalefac_band.l[21]) / v2.PSFB21, G3 = f3.scalefac_band.l[21] + C3 * j3;\n        f3.scalefac_band.psfb21[C3] = G3;\n      }\n      f3.scalefac_band.psfb21[v2.PSFB21] = 576;\n      for (C3 = 0; C3 < v2.SBMAX_s + 1; C3++) f3.scalefac_band.s[C3] = S2.sfBandIndex[F3].s[C3];\n      for (C3 = 0; C3 < v2.PSFB12 + 1; C3++) {\n        j3 = (f3.scalefac_band.s[13] - f3.scalefac_band.s[12]) / v2.PSFB12, G3 = f3.scalefac_band.s[12] + C3 * j3;\n        f3.scalefac_band.psfb12[C3] = G3;\n      }\n      for (f3.scalefac_band.psfb12[v2.PSFB12] = 192, 1 == e7.version ? f3.sideinfo_len = 1 == f3.channels_out ? 21 : 36 : f3.sideinfo_len = 1 == f3.channels_out ? 13 : 21, e7.error_protection && (f3.sideinfo_len += 2), function(e8) {\n        var a3 = e8.internal_flags;\n        e8.frameNum = 0, e8.write_id3tag_automatic && T2.id3tag_write_v2(e8), a3.bitrate_stereoMode_Hist = r2([16, 5]), a3.bitrate_blockType_Hist = r2([16, 6]), a3.PeakSample = 0, e8.bWriteVbrTag && w2.InitVbrTag(e8);\n      }(e7), f3.Class_ID = I2, q3 = 0; q3 < 19; q3++) f3.nsPsy.pefirbuf[q3] = 700 * f3.mode_gr * f3.channels_out;\n      switch (-1 == e7.ATHtype && (e7.ATHtype = 4), i2(e7.VBR_q <= 9), i2(e7.VBR_q >= 0), e7.VBR) {\n        case t2.vbr_mt:\n          e7.VBR = t2.vbr_mtrh;\n        case t2.vbr_mtrh:\n          null == e7.useTemporal && (e7.useTemporal = false), g2.apply_preset(e7, 500 - 10 * e7.VBR_q, 0), e7.quality < 0 && (e7.quality = LAME_DEFAULT_QUALITY), e7.quality < 5 && (e7.quality = 0), e7.quality > 5 && (e7.quality = 5), f3.PSY.mask_adjust = e7.maskingadjust, f3.PSY.mask_adjust_short = e7.maskingadjust_short, e7.experimentalY ? f3.sfb21_extra = false : f3.sfb21_extra = e7.out_samplerate > 44e3, f3.iteration_loop = new VBRNewIterationLoop(A2);\n          break;\n        case t2.vbr_rh:\n          g2.apply_preset(e7, 500 - 10 * e7.VBR_q, 0), f3.PSY.mask_adjust = e7.maskingadjust, f3.PSY.mask_adjust_short = e7.maskingadjust_short, e7.experimentalY ? f3.sfb21_extra = false : f3.sfb21_extra = e7.out_samplerate > 44e3, e7.quality > 6 && (e7.quality = 6), e7.quality < 0 && (e7.quality = LAME_DEFAULT_QUALITY), f3.iteration_loop = new VBROldIterationLoop(A2);\n          break;\n        default:\n          var z2;\n          f3.sfb21_extra = false, e7.quality < 0 && (e7.quality = LAME_DEFAULT_QUALITY), (z2 = e7.VBR) == t2.vbr_off && (e7.VBR_mean_bitrate_kbps = e7.brate), g2.apply_preset(e7, e7.VBR_mean_bitrate_kbps, 0), e7.VBR = z2, f3.PSY.mask_adjust = e7.maskingadjust, f3.PSY.mask_adjust_short = e7.maskingadjust_short, z2 == t2.vbr_off ? f3.iteration_loop = new u2(A2) : f3.iteration_loop = new ABRIterationLoop(A2);\n      }\n      if (i2(e7.scale >= 0), e7.VBR != t2.vbr_off) {\n        if (f3.VBR_min_bitrate = 1, f3.VBR_max_bitrate = 14, e7.out_samplerate < 16e3 && (f3.VBR_max_bitrate = 8), 0 != e7.VBR_min_bitrate_kbps && (e7.VBR_min_bitrate_kbps = L2(e7.VBR_min_bitrate_kbps, e7.version, e7.out_samplerate), f3.VBR_min_bitrate = N2(e7.VBR_min_bitrate_kbps, e7.version, e7.out_samplerate), f3.VBR_min_bitrate < 0)) return -1;\n        if (0 != e7.VBR_max_bitrate_kbps && (e7.VBR_max_bitrate_kbps = L2(e7.VBR_max_bitrate_kbps, e7.version, e7.out_samplerate), f3.VBR_max_bitrate = N2(e7.VBR_max_bitrate_kbps, e7.version, e7.out_samplerate), f3.VBR_max_bitrate < 0)) return -1;\n        e7.VBR_min_bitrate_kbps = m2.bitrate_table[e7.version][f3.VBR_min_bitrate], e7.VBR_max_bitrate_kbps = m2.bitrate_table[e7.version][f3.VBR_max_bitrate], e7.VBR_mean_bitrate_kbps = Math.min(m2.bitrate_table[e7.version][f3.VBR_max_bitrate], e7.VBR_mean_bitrate_kbps), e7.VBR_mean_bitrate_kbps = Math.max(m2.bitrate_table[e7.version][f3.VBR_min_bitrate], e7.VBR_mean_bitrate_kbps);\n      }\n      return e7.tune && (f3.PSY.mask_adjust += e7.tune_value_a, f3.PSY.mask_adjust_short += e7.tune_value_a), function(e8) {\n        var a3 = e8.internal_flags;\n        switch (e8.quality) {\n          default:\n          case 9:\n            a3.psymodel = 0, a3.noise_shaping = 0, a3.noise_shaping_amp = 0, a3.noise_shaping_stop = 0, a3.use_best_huffman = 0, a3.full_outer_loop = 0;\n            break;\n          case 8:\n            e8.quality = 7;\n          case 7:\n            a3.psymodel = 1, a3.noise_shaping = 0, a3.noise_shaping_amp = 0, a3.noise_shaping_stop = 0, a3.use_best_huffman = 0, a3.full_outer_loop = 0;\n            break;\n          case 6:\n          case 5:\n            a3.psymodel = 1, 0 == a3.noise_shaping && (a3.noise_shaping = 1), a3.noise_shaping_amp = 0, a3.noise_shaping_stop = 0, -1 == a3.subblock_gain && (a3.subblock_gain = 1), a3.use_best_huffman = 0, a3.full_outer_loop = 0;\n            break;\n          case 4:\n            a3.psymodel = 1, 0 == a3.noise_shaping && (a3.noise_shaping = 1), a3.noise_shaping_amp = 0, a3.noise_shaping_stop = 0, -1 == a3.subblock_gain && (a3.subblock_gain = 1), a3.use_best_huffman = 1, a3.full_outer_loop = 0;\n            break;\n          case 3:\n            a3.psymodel = 1, 0 == a3.noise_shaping && (a3.noise_shaping = 1), a3.noise_shaping_amp = 1, a3.noise_shaping_stop = 1, -1 == a3.subblock_gain && (a3.subblock_gain = 1), a3.use_best_huffman = 1, a3.full_outer_loop = 0;\n            break;\n          case 2:\n            a3.psymodel = 1, 0 == a3.noise_shaping && (a3.noise_shaping = 1), 0 == a3.substep_shaping && (a3.substep_shaping = 2), a3.noise_shaping_amp = 1, a3.noise_shaping_stop = 1, -1 == a3.subblock_gain && (a3.subblock_gain = 1), a3.use_best_huffman = 1, a3.full_outer_loop = 0;\n            break;\n          case 1:\n          case 0:\n            a3.psymodel = 1, 0 == a3.noise_shaping && (a3.noise_shaping = 1), 0 == a3.substep_shaping && (a3.substep_shaping = 2), a3.noise_shaping_amp = 2, a3.noise_shaping_stop = 1, -1 == a3.subblock_gain && (a3.subblock_gain = 1), a3.use_best_huffman = 1, a3.full_outer_loop = 0;\n        }\n      }(e7), i2(e7.scale >= 0), e7.athaa_type < 0 ? f3.ATH.useAdjust = 3 : f3.ATH.useAdjust = e7.athaa_type, f3.ATH.aaSensitivityP = Math.pow(10, e7.athaa_sensitivity / -10), null == e7.short_blocks && (e7.short_blocks = s2.short_block_allowed), e7.short_blocks != s2.short_block_allowed || e7.mode != M2.JOINT_STEREO && e7.mode != M2.STEREO || (e7.short_blocks = s2.short_block_coupled), e7.quant_comp < 0 && (e7.quant_comp = 1), e7.quant_comp_short < 0 && (e7.quant_comp_short = 0), e7.msfix < 0 && (e7.msfix = 0), e7.exp_nspsytune = 1 | e7.exp_nspsytune, e7.internal_flags.nsPsy.attackthre < 0 && (e7.internal_flags.nsPsy.attackthre = o2.NSATTACKTHRE), e7.internal_flags.nsPsy.attackthre_s < 0 && (e7.internal_flags.nsPsy.attackthre_s = o2.NSATTACKTHRE_S), i2(e7.scale >= 0), e7.scale < 0 && (e7.scale = 1), e7.ATHtype < 0 && (e7.ATHtype = 4), e7.ATHcurve < 0 && (e7.ATHcurve = 4), e7.athaa_loudapprox < 0 && (e7.athaa_loudapprox = 2), e7.interChRatio < 0 && (e7.interChRatio = 0), null == e7.useTemporal && (e7.useTemporal = true), f3.slot_lag = f3.frac_SpF = 0, e7.VBR == t2.vbr_off && (f3.slot_lag = f3.frac_SpF = 72e3 * (e7.version + 1) * e7.brate % e7.out_samplerate | 0), S2.iteration_init(e7), k2.psymodel_init(e7), i2(e7.scale >= 0), 0;\n    }, this.lame_encode_flush = function(e7, a3, t3, s3) {\n      var n3, r3, i3, o3, l3 = e7.internal_flags, f3 = _2([2, 1152]), c3 = 0, h3 = l3.mf_samples_to_encode - v2.POSTDELAY, u3 = X2(e7);\n      if (l3.mf_samples_to_encode < 1) return 0;\n      for (n3 = 0, e7.in_samplerate != e7.out_samplerate && (h3 += 16 * e7.out_samplerate / e7.in_samplerate), (i3 = e7.framesize - h3 % e7.framesize) < 576 && (i3 += e7.framesize), e7.encoder_padding = i3, o3 = (h3 + i3) / e7.framesize; o3 > 0 && c3 >= 0; ) {\n        var b3 = u3 - l3.mf_size, m3 = e7.frameNum;\n        b3 *= e7.in_samplerate, (b3 /= e7.out_samplerate) > 1152 && (b3 = 1152), b3 < 1 && (b3 = 1), r3 = s3 - n3, 0 == s3 && (r3 = 0), t3 += c3 = this.lame_encode_buffer(e7, f3[0], f3[1], b3, a3, t3, r3), n3 += c3, o3 -= m3 != e7.frameNum ? 1 : 0;\n      }\n      if (l3.mf_samples_to_encode = 0, c3 < 0) return c3;\n      if (r3 = s3 - n3, 0 == s3 && (r3 = 0), d2.flush_bitstream(e7), (c3 = d2.copy_buffer(l3, a3, t3, r3, 1)) < 0) return c3;\n      if (t3 += c3, r3 = s3 - (n3 += c3), 0 == s3 && (r3 = 0), e7.write_id3tag_automatic) {\n        if (T2.id3tag_write_v1(e7), (c3 = d2.copy_buffer(l3, a3, t3, r3, 0)) < 0) return c3;\n        n3 += c3;\n      }\n      return n3;\n    }, this.lame_encode_buffer = function(e7, a3, t3, s3, r3, _3, o3) {\n      var l3 = e7.internal_flags, c3 = [null, null];\n      if (l3.Class_ID != I2) return -3;\n      if (0 == s3) return 0;\n      !function(e8, a4) {\n        (null == e8.in_buffer_0 || e8.in_buffer_nsamples < a4) && (e8.in_buffer_0 = n2(a4), e8.in_buffer_1 = n2(a4), e8.in_buffer_nsamples = a4);\n      }(l3, s3), c3[0] = l3.in_buffer_0, c3[1] = l3.in_buffer_1;\n      for (var h3 = 0; h3 < s3; h3++) c3[0][h3] = a3[h3], l3.channels_in > 1 && (c3[1][h3] = t3[h3]);\n      return function(e8, a4, t4, s4, n3, r4, _4) {\n        var o4, l4, c4, h4, u3, m3 = e8.internal_flags, g3 = 0, S3 = [null, null], R2 = [null, null];\n        if (m3.Class_ID != I2) return -3;\n        if (0 == s4) return 0;\n        if (u3 = d2.copy_buffer(m3, n3, r4, _4, 0), u3 < 0) return u3;\n        if (r4 += u3, g3 += u3, R2[0] = a4, R2[1] = t4, b2.NEQ(e8.scale, 0) && b2.NEQ(e8.scale, 1)) for (l4 = 0; l4 < s4; ++l4) R2[0][l4] *= e8.scale, 2 == m3.channels_out && (R2[1][l4] *= e8.scale);\n        if (b2.NEQ(e8.scale_left, 0) && b2.NEQ(e8.scale_left, 1)) for (l4 = 0; l4 < s4; ++l4) R2[0][l4] *= e8.scale_left;\n        if (b2.NEQ(e8.scale_right, 0) && b2.NEQ(e8.scale_right, 1)) for (l4 = 0; l4 < s4; ++l4) R2[1][l4] *= e8.scale_right;\n        if (2 == e8.num_channels && 1 == m3.channels_out) for (l4 = 0; l4 < s4; ++l4) R2[0][l4] = 0.5 * (R2[0][l4] + R2[1][l4]), R2[1][l4] = 0;\n        h4 = X2(e8), S3[0] = m3.mfbuf[0], S3[1] = m3.mfbuf[1];\n        var A3 = 0;\n        for (; s4 > 0; ) {\n          var M3 = [null, null], B3 = 0, w3 = 0;\n          M3[0] = R2[0], M3[1] = R2[1];\n          var T3 = new Y2();\n          if (G2(e8, S3, M3, A3, s4, T3), B3 = T3.n_in, w3 = T3.n_out, m3.findReplayGain && !m3.decode_on_the_fly && p2.AnalyzeSamples(m3.rgdata, S3[0], m3.mf_size, S3[1], m3.mf_size, w3, m3.channels_out) == GainAnalysis.GAIN_ANALYSIS_ERROR) return -6;\n          if (s4 -= B3, A3 += B3, m3.channels_out, m3.mf_size += w3, i2(m3.mf_size <= f2.MFSIZE), m3.mf_samples_to_encode < 1 && (m3.mf_samples_to_encode = v2.ENCDELAY + v2.POSTDELAY), m3.mf_samples_to_encode += w3, m3.mf_size >= h4) {\n            var E3 = _4 - g3;\n            if (0 == _4 && (E3 = 0), (o4 = D2(e8, S3[0], S3[1], n3, r4, E3)) < 0) return o4;\n            for (r4 += o4, g3 += o4, m3.mf_size -= e8.framesize, m3.mf_samples_to_encode -= e8.framesize, c4 = 0; c4 < m3.channels_out; c4++) for (l4 = 0; l4 < m3.mf_size; l4++) S3[c4][l4] = S3[c4][l4 + e8.framesize];\n          }\n        }\n        return g3;\n      }(e7, c3[0], c3[1], s3, r3, _3, o3);\n    };\n  }, ra;\n}\nvar ha = p.VbrMode;\nvar ua = function() {\n  var e5, a2 = ca();\n  function t2(e6, a3, t3, s3, n3, r3, _3, i3, o3, l2, f2, c2, h2, u2, b2) {\n    this.vbr_q = e6, this.quant_comp = a3, this.quant_comp_s = t3, this.expY = s3, this.st_lrm = n3, this.st_s = r3, this.masking_adj = _3, this.masking_adj_short = i3, this.ath_lower = o3, this.ath_curve = l2, this.ath_sensitivity = f2, this.interch = c2, this.safejoint = h2, this.sfb21mod = u2, this.msfix = b2;\n  }\n  function s2(e6, a3, t3, s3, n3, r3, _3, i3, o3, l2, f2, c2, h2, u2) {\n    this.quant_comp = a3, this.quant_comp_s = t3, this.safejoint = s3, this.nsmsfix = n3, this.st_lrm = r3, this.st_s = _3, this.nsbass = i3, this.scale = o3, this.masking_adj = l2, this.ath_lower = f2, this.ath_curve = c2, this.interch = h2, this.sfscale = u2;\n  }\n  this.setModules = function(a3) {\n    e5 = a3;\n  };\n  var n2 = [new t2(0, 9, 9, 0, 5.2, 125, -4.2, -6.3, 4.8, 1, 0, 0, 2, 21, 0.97), new t2(1, 9, 9, 0, 5.3, 125, -3.6, -5.6, 4.5, 1.5, 0, 0, 2, 21, 1.35), new t2(2, 9, 9, 0, 5.6, 125, -2.2, -3.5, 2.8, 2, 0, 0, 2, 21, 1.49), new t2(3, 9, 9, 1, 5.8, 130, -1.8, -2.8, 2.6, 3, -4, 0, 2, 20, 1.64), new t2(4, 9, 9, 1, 6, 135, -0.7, -1.1, 1.1, 3.5, -8, 0, 2, 0, 1.79), new t2(5, 9, 9, 1, 6.4, 140, 0.5, 0.4, -7.5, 4, -12, 2e-4, 0, 0, 1.95), new t2(6, 9, 9, 1, 6.6, 145, 0.67, 0.65, -14.7, 6.5, -19, 4e-4, 0, 0, 2.3), new t2(7, 9, 9, 1, 6.6, 145, 0.8, 0.75, -19.7, 8, -22, 6e-4, 0, 0, 2.7), new t2(8, 9, 9, 1, 6.6, 145, 1.2, 1.15, -27.5, 10, -23, 7e-4, 0, 0, 0), new t2(9, 9, 9, 1, 6.6, 145, 1.6, 1.6, -36, 11, -25, 8e-4, 0, 0, 0), new t2(10, 9, 9, 1, 6.6, 145, 2, 2, -36, 12, -25, 8e-4, 0, 0, 0)], r2 = [new t2(0, 9, 9, 0, 4.2, 25, -7, -4, 7.5, 1, 0, 0, 2, 26, 0.97), new t2(1, 9, 9, 0, 4.2, 25, -5.6, -3.6, 4.5, 1.5, 0, 0, 2, 21, 1.35), new t2(2, 9, 9, 0, 4.2, 25, -4.4, -1.8, 2, 2, 0, 0, 2, 18, 1.49), new t2(3, 9, 9, 1, 4.2, 25, -3.4, -1.25, 1.1, 3, -4, 0, 2, 15, 1.64), new t2(4, 9, 9, 1, 4.2, 25, -2.2, 0.1, 0, 3.5, -8, 0, 2, 0, 1.79), new t2(5, 9, 9, 1, 4.2, 25, -1, 1.65, -7.7, 4, -12, 2e-4, 0, 0, 1.95), new t2(6, 9, 9, 1, 4.2, 25, -0, 2.47, -7.7, 6.5, -19, 4e-4, 0, 0, 2), new t2(7, 9, 9, 1, 4.2, 25, 0.5, 2, -14.5, 8, -22, 6e-4, 0, 0, 2), new t2(8, 9, 9, 1, 4.2, 25, 1, 2.4, -22, 10, -23, 7e-4, 0, 0, 2), new t2(9, 9, 9, 1, 4.2, 25, 1.5, 2.95, -30, 11, -25, 8e-4, 0, 0, 2), new t2(10, 9, 9, 1, 4.2, 25, 2, 2.95, -36, 12, -30, 8e-4, 0, 0, 2)];\n  function _2(e6, a3, t3) {\n    var s3 = e6.VBR == ha.vbr_rh ? n2 : r2, _3 = e6.VBR_q_frac, i3 = s3[a3], o3 = s3[a3 + 1], l2 = i3;\n    i3.st_lrm = i3.st_lrm + _3 * (o3.st_lrm - i3.st_lrm), i3.st_s = i3.st_s + _3 * (o3.st_s - i3.st_s), i3.masking_adj = i3.masking_adj + _3 * (o3.masking_adj - i3.masking_adj), i3.masking_adj_short = i3.masking_adj_short + _3 * (o3.masking_adj_short - i3.masking_adj_short), i3.ath_lower = i3.ath_lower + _3 * (o3.ath_lower - i3.ath_lower), i3.ath_curve = i3.ath_curve + _3 * (o3.ath_curve - i3.ath_curve), i3.ath_sensitivity = i3.ath_sensitivity + _3 * (o3.ath_sensitivity - i3.ath_sensitivity), i3.interch = i3.interch + _3 * (o3.interch - i3.interch), i3.msfix = i3.msfix + _3 * (o3.msfix - i3.msfix), function(e7, a4) {\n      0 > a4 && (a4 = 0);\n      9 < a4 && (a4 = 9);\n      e7.VBR_q = a4, e7.VBR_q_frac = 0;\n    }(e6, l2.vbr_q), 0 != t3 ? e6.quant_comp = l2.quant_comp : Math.abs(e6.quant_comp - -1) > 0 || (e6.quant_comp = l2.quant_comp), 0 != t3 ? e6.quant_comp_short = l2.quant_comp_s : Math.abs(e6.quant_comp_short - -1) > 0 || (e6.quant_comp_short = l2.quant_comp_s), 0 != l2.expY && (e6.experimentalY = 0 != l2.expY), 0 != t3 ? e6.internal_flags.nsPsy.attackthre = l2.st_lrm : Math.abs(e6.internal_flags.nsPsy.attackthre - -1) > 0 || (e6.internal_flags.nsPsy.attackthre = l2.st_lrm), 0 != t3 ? e6.internal_flags.nsPsy.attackthre_s = l2.st_s : Math.abs(e6.internal_flags.nsPsy.attackthre_s - -1) > 0 || (e6.internal_flags.nsPsy.attackthre_s = l2.st_s), 0 != t3 ? e6.maskingadjust = l2.masking_adj : Math.abs(e6.maskingadjust - 0) > 0 || (e6.maskingadjust = l2.masking_adj), 0 != t3 ? e6.maskingadjust_short = l2.masking_adj_short : Math.abs(e6.maskingadjust_short - 0) > 0 || (e6.maskingadjust_short = l2.masking_adj_short), 0 != t3 ? e6.ATHlower = -l2.ath_lower / 10 : Math.abs(10 * -e6.ATHlower - 0) > 0 || (e6.ATHlower = -l2.ath_lower / 10), 0 != t3 ? e6.ATHcurve = l2.ath_curve : Math.abs(e6.ATHcurve - -1) > 0 || (e6.ATHcurve = l2.ath_curve), 0 != t3 ? e6.athaa_sensitivity = l2.ath_sensitivity : Math.abs(e6.athaa_sensitivity - -1) > 0 || (e6.athaa_sensitivity = l2.ath_sensitivity), l2.interch > 0 && (0 != t3 ? e6.interChRatio = l2.interch : Math.abs(e6.interChRatio - -1) > 0 || (e6.interChRatio = l2.interch)), l2.safejoint > 0 && (e6.exp_nspsytune = e6.exp_nspsytune | l2.safejoint), l2.sfb21mod > 0 && (e6.exp_nspsytune = e6.exp_nspsytune | l2.sfb21mod << 20), 0 != t3 ? e6.msfix = l2.msfix : Math.abs(e6.msfix - -1) > 0 || (e6.msfix = l2.msfix), 0 == t3 && (e6.VBR_q = a3, e6.VBR_q_frac = _3);\n  }\n  var i2 = [new s2(8, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -30, 11, 12e-4, 1), new s2(16, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -25, 11, 1e-3, 1), new s2(24, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -20, 11, 1e-3, 1), new s2(32, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -15, 11, 1e-3, 1), new s2(40, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -10, 11, 9e-4, 1), new s2(48, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -10, 11, 9e-4, 1), new s2(56, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -6, 11, 8e-4, 1), new s2(64, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, -2, 11, 8e-4, 1), new s2(80, 9, 9, 0, 0, 6.6, 145, 0, 0.95, 0, 0, 8, 7e-4, 1), new s2(96, 9, 9, 0, 2.5, 6.6, 145, 0, 0.95, 0, 1, 5.5, 6e-4, 1), new s2(112, 9, 9, 0, 2.25, 6.6, 145, 0, 0.95, 0, 2, 4.5, 5e-4, 1), new s2(128, 9, 9, 0, 1.95, 6.4, 140, 0, 0.95, 0, 3, 4, 2e-4, 1), new s2(160, 9, 9, 1, 1.79, 6, 135, 0, 0.95, -2, 5, 3.5, 0, 1), new s2(192, 9, 9, 1, 1.49, 5.6, 125, 0, 0.97, -4, 7, 3, 0, 0), new s2(224, 9, 9, 1, 1.25, 5.2, 125, 0, 0.98, -6, 9, 2, 0, 0), new s2(256, 9, 9, 1, 0.97, 5.2, 125, 0, 1, -8, 10, 1, 0, 0), new s2(320, 9, 9, 1, 0.9, 5.2, 125, 0, 1, -10, 12, 0, 0, 0)];\n  function o2(a3, t3, s3) {\n    var n3 = t3, r3 = e5.nearestBitrateFullIndex(t3);\n    if (a3.VBR = ha.vbr_abr, a3.VBR_mean_bitrate_kbps = n3, a3.VBR_mean_bitrate_kbps = Math.min(a3.VBR_mean_bitrate_kbps, 320), a3.VBR_mean_bitrate_kbps = Math.max(a3.VBR_mean_bitrate_kbps, 8), a3.brate = a3.VBR_mean_bitrate_kbps, a3.VBR_mean_bitrate_kbps > 320 && (a3.disable_reservoir = true), i2[r3].safejoint > 0 && (a3.exp_nspsytune = 2 | a3.exp_nspsytune), i2[r3].sfscale > 0 && (a3.internal_flags.noise_shaping = 2), Math.abs(i2[r3].nsbass) > 0) {\n      var _3 = int(4 * i2[r3].nsbass);\n      _3 < 0 && (_3 += 64), a3.exp_nspsytune = a3.exp_nspsytune | _3 << 2;\n    }\n    return 0 != s3 ? a3.quant_comp = i2[r3].quant_comp : Math.abs(a3.quant_comp - -1) > 0 || (a3.quant_comp = i2[r3].quant_comp), 0 != s3 ? a3.quant_comp_short = i2[r3].quant_comp_s : Math.abs(a3.quant_comp_short - -1) > 0 || (a3.quant_comp_short = i2[r3].quant_comp_s), 0 != s3 ? a3.msfix = i2[r3].nsmsfix : Math.abs(a3.msfix - -1) > 0 || (a3.msfix = i2[r3].nsmsfix), 0 != s3 ? a3.internal_flags.nsPsy.attackthre = i2[r3].st_lrm : Math.abs(a3.internal_flags.nsPsy.attackthre - -1) > 0 || (a3.internal_flags.nsPsy.attackthre = i2[r3].st_lrm), 0 != s3 ? a3.internal_flags.nsPsy.attackthre_s = i2[r3].st_s : Math.abs(a3.internal_flags.nsPsy.attackthre_s - -1) > 0 || (a3.internal_flags.nsPsy.attackthre_s = i2[r3].st_s), 0 != s3 ? a3.scale = i2[r3].scale : Math.abs(a3.scale - -1) > 0 || (a3.scale = i2[r3].scale), 0 != s3 ? a3.maskingadjust = i2[r3].masking_adj : Math.abs(a3.maskingadjust - 0) > 0 || (a3.maskingadjust = i2[r3].masking_adj), i2[r3].masking_adj > 0 ? 0 != s3 ? a3.maskingadjust_short = 0.9 * i2[r3].masking_adj : Math.abs(a3.maskingadjust_short - 0) > 0 || (a3.maskingadjust_short = 0.9 * i2[r3].masking_adj) : 0 != s3 ? a3.maskingadjust_short = 1.1 * i2[r3].masking_adj : Math.abs(a3.maskingadjust_short - 0) > 0 || (a3.maskingadjust_short = 1.1 * i2[r3].masking_adj), 0 != s3 ? a3.ATHlower = -i2[r3].ath_lower / 10 : Math.abs(10 * -a3.ATHlower - 0) > 0 || (a3.ATHlower = -i2[r3].ath_lower / 10), 0 != s3 ? a3.ATHcurve = i2[r3].ath_curve : Math.abs(a3.ATHcurve - -1) > 0 || (a3.ATHcurve = i2[r3].ath_curve), 0 != s3 ? a3.interChRatio = i2[r3].interch : Math.abs(a3.interChRatio - -1) > 0 || (a3.interChRatio = i2[r3].interch), t3;\n  }\n  this.apply_preset = function(e6, t3, s3) {\n    switch (t3) {\n      case a2.R3MIX:\n        t3 = a2.V3, e6.VBR = ha.vbr_mtrh;\n        break;\n      case a2.MEDIUM:\n        t3 = a2.V4, e6.VBR = ha.vbr_rh;\n        break;\n      case a2.MEDIUM_FAST:\n        t3 = a2.V4, e6.VBR = ha.vbr_mtrh;\n        break;\n      case a2.STANDARD:\n        t3 = a2.V2, e6.VBR = ha.vbr_rh;\n        break;\n      case a2.STANDARD_FAST:\n        t3 = a2.V2, e6.VBR = ha.vbr_mtrh;\n        break;\n      case a2.EXTREME:\n        t3 = a2.V0, e6.VBR = ha.vbr_rh;\n        break;\n      case a2.EXTREME_FAST:\n        t3 = a2.V0, e6.VBR = ha.vbr_mtrh;\n        break;\n      case a2.INSANE:\n        return t3 = 320, e6.preset = t3, o2(e6, t3, s3), e6.VBR = ha.vbr_off, t3;\n    }\n    switch (e6.preset = t3, t3) {\n      case a2.V9:\n        return _2(e6, 9, s3), t3;\n      case a2.V8:\n        return _2(e6, 8, s3), t3;\n      case a2.V7:\n        return _2(e6, 7, s3), t3;\n      case a2.V6:\n        return _2(e6, 6, s3), t3;\n      case a2.V5:\n        return _2(e6, 5, s3), t3;\n      case a2.V4:\n        return _2(e6, 4, s3), t3;\n      case a2.V3:\n        return _2(e6, 3, s3), t3;\n      case a2.V2:\n        return _2(e6, 2, s3), t3;\n      case a2.V1:\n        return _2(e6, 1, s3), t3;\n      case a2.V0:\n        return _2(e6, 0, s3), t3;\n    }\n    return 8 <= t3 && t3 <= 320 ? o2(e6, t3, s3) : (e6.preset = 0, t3);\n  };\n};\nvar ba = function() {\n  this.setModules = function(e5, a2) {\n  };\n};\nvar ma = function() {\n  this.over_noise = 0, this.tot_noise = 0, this.max_noise = 0, this.over_count = 0, this.over_SSD = 0, this.bits = 0;\n}, pa = p, va = pa.new_float, da = pa.new_int;\nvar ga = function() {\n  this.global_gain = 0, this.sfb_count1 = 0, this.step = da(39), this.noise = va(39), this.noise_log = va(39);\n}, Sa = p, Ra = Sa.System, Aa = Sa.VbrMode, Ma = Sa.Util, Ba = Sa.Arrays, wa = Sa.new_float, Ta = Sa.assert, Ea = ba, ka = ma, ya = ga, xa = A(), Pa = Q, Ia = G;\nvar Ha = function() {\n  var e5, a2, t2;\n  this.rv = null, this.qupvt = null;\n  var s2, n2 = new Ea();\n  function r2(e6) {\n    this.ordinal = e6;\n  }\n  function _2(e6) {\n    for (var a3 = 0; a3 < e6.sfbmax; a3++) if (e6.scalefac[a3] + e6.subblock_gain[e6.window[a3]] == 0) return false;\n    return true;\n  }\n  function i2(e6, a3, t3, s3, n3) {\n    var r3;\n    switch (e6) {\n      default:\n      case 9:\n        a3.over_count > 0 ? (r3 = t3.over_SSD <= a3.over_SSD, t3.over_SSD == a3.over_SSD && (r3 = t3.bits < a3.bits)) : r3 = t3.max_noise < 0 && 10 * t3.max_noise + t3.bits <= 10 * a3.max_noise + a3.bits;\n        break;\n      case 0:\n        r3 = t3.over_count < a3.over_count || t3.over_count == a3.over_count && t3.over_noise < a3.over_noise || t3.over_count == a3.over_count && BitStream.EQ(t3.over_noise, a3.over_noise) && t3.tot_noise < a3.tot_noise;\n        break;\n      case 8:\n        t3.max_noise = function(e7, a4) {\n          for (var t4, s4 = 1e-37, n4 = 0; n4 < a4.psymax; n4++) s4 += (t4 = e7[n4], Ma.FAST_LOG10(0.368 + 0.632 * t4 * t4 * t4));\n          return Math.max(1e-20, s4);\n        }(n3, s3);\n      case 1:\n        r3 = t3.max_noise < a3.max_noise;\n        break;\n      case 2:\n        r3 = t3.tot_noise < a3.tot_noise;\n        break;\n      case 3:\n        r3 = t3.tot_noise < a3.tot_noise && t3.max_noise < a3.max_noise;\n        break;\n      case 4:\n        r3 = t3.max_noise <= 0 && a3.max_noise > 0.2 || t3.max_noise <= 0 && a3.max_noise < 0 && a3.max_noise > t3.max_noise - 0.2 && t3.tot_noise < a3.tot_noise || t3.max_noise <= 0 && a3.max_noise > 0 && a3.max_noise > t3.max_noise - 0.2 && t3.tot_noise < a3.tot_noise + a3.over_noise || t3.max_noise > 0 && a3.max_noise > -0.05 && a3.max_noise > t3.max_noise - 0.1 && t3.tot_noise + t3.over_noise < a3.tot_noise + a3.over_noise || t3.max_noise > 0 && a3.max_noise > -0.1 && a3.max_noise > t3.max_noise - 0.15 && t3.tot_noise + t3.over_noise + t3.over_noise < a3.tot_noise + a3.over_noise + a3.over_noise;\n        break;\n      case 5:\n        r3 = t3.over_noise < a3.over_noise || BitStream.EQ(t3.over_noise, a3.over_noise) && t3.tot_noise < a3.tot_noise;\n        break;\n      case 6:\n        r3 = t3.over_noise < a3.over_noise || BitStream.EQ(t3.over_noise, a3.over_noise) && (t3.max_noise < a3.max_noise || BitStream.EQ(t3.max_noise, a3.max_noise) && t3.tot_noise <= a3.tot_noise);\n        break;\n      case 7:\n        r3 = t3.over_count < a3.over_count || t3.over_noise < a3.over_noise;\n    }\n    return 0 == a3.over_count && (r3 = r3 && t3.bits < a3.bits), r3;\n  }\n  function o2(e6, a3, n3, r3, i3) {\n    var o3 = e6.internal_flags;\n    !function(e7, a4, t3, s3, n4) {\n      var r4, _3 = e7.internal_flags;\n      r4 = 0 == a4.scalefac_scale ? 1.2968395546510096 : 1.6817928305074292;\n      for (var i4 = 0, o4 = 0; o4 < a4.sfbmax; o4++) i4 < t3[o4] && (i4 = t3[o4]);\n      var l3 = _3.noise_shaping_amp;\n      switch (3 == l3 && (l3 = n4 ? 2 : 1), l3) {\n        case 2:\n          break;\n        case 1:\n          i4 > 1 ? i4 = Math.pow(i4, 0.5) : i4 *= 0.95;\n          break;\n        default:\n          i4 > 1 ? i4 = 1 : i4 *= 0.95;\n      }\n      var f2 = 0;\n      for (o4 = 0; o4 < a4.sfbmax; o4++) {\n        var c2, h2 = a4.width[o4];\n        if (f2 += h2, !(t3[o4] < i4)) {\n          if (0 != (2 & _3.substep_shaping) && (_3.pseudohalf[o4] = 0 == _3.pseudohalf[o4] ? 1 : 0, 0 == _3.pseudohalf[o4] && 2 == _3.noise_shaping_amp)) return;\n          for (a4.scalefac[o4]++, c2 = -h2; c2 < 0; c2++) s3[f2 + c2] *= r4, s3[f2 + c2] > a4.xrpow_max && (a4.xrpow_max = s3[f2 + c2]);\n          if (2 == _3.noise_shaping_amp) return;\n        }\n      }\n    }(e6, a3, n3, r3, i3);\n    var l2 = _2(a3);\n    return !l2 && (!(l2 = 2 == o3.mode_gr ? s2.scale_bitcount(a3) : s2.scale_bitcount_lsf(o3, a3)) || (o3.noise_shaping > 1 && (Ba.fill(o3.pseudohalf, 0), 0 == a3.scalefac_scale ? (!function(e7, a4) {\n      for (var s3 = 0, n4 = 0; n4 < e7.sfbmax; n4++) {\n        var r4 = e7.width[n4], _3 = e7.scalefac[n4];\n        if (0 != e7.preflag && (_3 += t2.pretab[n4]), s3 += r4, 0 != (1 & _3)) {\n          _3++;\n          for (var i4 = -r4; i4 < 0; i4++) a4[s3 + i4] *= 1.2968395546510096, a4[s3 + i4] > e7.xrpow_max && (e7.xrpow_max = a4[s3 + i4]);\n        }\n        e7.scalefac[n4] = _3 >> 1;\n      }\n      e7.preflag = 0, e7.scalefac_scale = 1;\n    }(a3, r3), l2 = false) : a3.block_type == xa.SHORT_TYPE && o3.subblock_gain > 0 && (l2 = function(e7, a4, s3) {\n      var n4, r4 = a4.scalefac;\n      for (n4 = 0; n4 < a4.sfb_lmax; n4++) if (r4[n4] >= 16) return true;\n      for (var _3 = 0; _3 < 3; _3++) {\n        var i4 = 0, o4 = 0;\n        for (n4 = a4.sfb_lmax + _3; n4 < a4.sfbdivide; n4 += 3) i4 < r4[n4] && (i4 = r4[n4]);\n        for (; n4 < a4.sfbmax; n4 += 3) o4 < r4[n4] && (o4 = r4[n4]);\n        if (!(i4 < 16 && o4 < 8)) {\n          if (a4.subblock_gain[_3] >= 7) return true;\n          a4.subblock_gain[_3]++;\n          var l3 = e7.scalefac_band.l[a4.sfb_lmax];\n          for (n4 = a4.sfb_lmax + _3; n4 < a4.sfbmax; n4 += 3) {\n            var f2 = a4.width[n4], c2 = r4[n4];\n            if ((c2 -= 4 >> a4.scalefac_scale) >= 0) r4[n4] = c2, l3 += 3 * f2;\n            else {\n              r4[n4] = 0;\n              var h2 = 210 + (c2 << a4.scalefac_scale + 1);\n              b2 = t2.IPOW20(h2), l3 += f2 * (_3 + 1);\n              for (var u2 = -f2; u2 < 0; u2++) s3[l3 + u2] *= b2, s3[l3 + u2] > a4.xrpow_max && (a4.xrpow_max = s3[l3 + u2]);\n              l3 += f2 * (3 - _3 - 1);\n            }\n          }\n          var b2 = t2.IPOW20(202);\n          for (l3 += a4.width[n4] * (_3 + 1), u2 = -a4.width[n4]; u2 < 0; u2++) s3[l3 + u2] *= b2, s3[l3 + u2] > a4.xrpow_max && (a4.xrpow_max = s3[l3 + u2]);\n        }\n      }\n      return false;\n    }(o3, a3, r3) || _2(a3))), l2 || (l2 = 2 == o3.mode_gr ? s2.scale_bitcount(a3) : s2.scale_bitcount_lsf(o3, a3)), !l2));\n  }\n  this.setModules = function(r3, _3, i3, o3) {\n    e5 = r3, a2 = _3, this.rv = _3, t2 = i3, this.qupvt = i3, s2 = o3, n2.setModules(t2, s2);\n  }, this.ms_convert = function(e6, a3) {\n    for (var t3 = 0; t3 < 576; ++t3) {\n      var s3 = e6.tt[a3][0].xr[t3], n3 = e6.tt[a3][1].xr[t3];\n      e6.tt[a3][0].xr[t3] = (s3 + n3) * (0.5 * Ma.SQRT2), e6.tt[a3][1].xr[t3] = (s3 - n3) * (0.5 * Ma.SQRT2);\n    }\n  }, this.init_xrpow = function(e6, a3, t3) {\n    var s3 = 0, n3 = 0 | a3.max_nonzero_coeff;\n    if (a3.xrpow_max = 0, Ba.fill(t3, n3, 576, 0), s3 = function(e7, a4, t4, s4) {\n      s4 = 0;\n      for (var n4 = 0; n4 <= t4; ++n4) {\n        var r4 = Math.abs(e7.xr[n4]);\n        s4 += r4, a4[n4] = Math.sqrt(r4 * Math.sqrt(r4)), a4[n4] > e7.xrpow_max && (e7.xrpow_max = a4[n4]);\n      }\n      return s4;\n    }(a3, t3, n3, s3), s3 > 1e-20) {\n      var r3 = 0;\n      0 != (2 & e6.substep_shaping) && (r3 = 1);\n      for (var _3 = 0; _3 < a3.psymax; _3++) e6.pseudohalf[_3] = r3;\n      return true;\n    }\n    return Ba.fill(a3.l3_enc, 0, 576, 0), false;\n  }, this.init_outer_loop = function(e6, a3) {\n    a3.part2_3_length = 0, a3.big_values = 0, a3.count1 = 0, a3.global_gain = 210, a3.scalefac_compress = 0, a3.table_select[0] = 0, a3.table_select[1] = 0, a3.table_select[2] = 0, a3.subblock_gain[0] = 0, a3.subblock_gain[1] = 0, a3.subblock_gain[2] = 0, a3.subblock_gain[3] = 0, a3.region0_count = 0, a3.region1_count = 0, a3.preflag = 0, a3.scalefac_scale = 0, a3.count1table_select = 0, a3.part2_length = 0, a3.sfb_lmax = xa.SBPSY_l, a3.sfb_smin = xa.SBPSY_s, a3.psy_lmax = e6.sfb21_extra ? xa.SBMAX_l : xa.SBPSY_l, a3.psymax = a3.psy_lmax, a3.sfbmax = a3.sfb_lmax, a3.sfbdivide = 11;\n    for (var s3 = 0; s3 < xa.SBMAX_l; s3++) a3.width[s3] = e6.scalefac_band.l[s3 + 1] - e6.scalefac_band.l[s3], a3.window[s3] = 3;\n    if (a3.block_type == xa.SHORT_TYPE) {\n      var n3 = wa(576);\n      a3.sfb_smin = 0, a3.sfb_lmax = 0, 0 != a3.mixed_block_flag && (a3.sfb_smin = 3, a3.sfb_lmax = 2 * e6.mode_gr + 4), a3.psymax = a3.sfb_lmax + 3 * ((e6.sfb21_extra ? xa.SBMAX_s : xa.SBPSY_s) - a3.sfb_smin), a3.sfbmax = a3.sfb_lmax + 3 * (xa.SBPSY_s - a3.sfb_smin), a3.sfbdivide = a3.sfbmax - 18, a3.psy_lmax = a3.sfb_lmax;\n      var r3 = e6.scalefac_band.l[a3.sfb_lmax];\n      Ra.arraycopy(a3.xr, 0, n3, 0, 576);\n      for (s3 = a3.sfb_smin; s3 < xa.SBMAX_s; s3++) for (var _3 = e6.scalefac_band.s[s3], i3 = e6.scalefac_band.s[s3 + 1], o3 = 0; o3 < 3; o3++) for (var l2 = _3; l2 < i3; l2++) a3.xr[r3++] = n3[3 * l2 + o3];\n      var f2 = a3.sfb_lmax;\n      for (s3 = a3.sfb_smin; s3 < xa.SBMAX_s; s3++) a3.width[f2] = a3.width[f2 + 1] = a3.width[f2 + 2] = e6.scalefac_band.s[s3 + 1] - e6.scalefac_band.s[s3], a3.window[f2] = 0, a3.window[f2 + 1] = 1, a3.window[f2 + 2] = 2, f2 += 3;\n    }\n    a3.count1bits = 0, a3.sfb_partition_table = t2.nr_of_sfb_block[0][0], a3.slen[0] = 0, a3.slen[1] = 0, a3.slen[2] = 0, a3.slen[3] = 0, a3.max_nonzero_coeff = 575, Ba.fill(a3.scalefac, 0), function(e7, a4) {\n      var s4 = e7.ATH, n4 = a4.xr;\n      if (a4.block_type != xa.SHORT_TYPE) for (var r4 = false, _4 = xa.PSFB21 - 1; _4 >= 0 && !r4; _4--) {\n        var i4 = e7.scalefac_band.psfb21[_4], o4 = e7.scalefac_band.psfb21[_4 + 1], l3 = t2.athAdjust(s4.adjust, s4.psfb21[_4], s4.floor);\n        e7.nsPsy.longfact[21] > 1e-12 && (l3 *= e7.nsPsy.longfact[21]);\n        for (var f3 = o4 - 1; f3 >= i4; f3--) {\n          if (!(Math.abs(n4[f3]) < l3)) {\n            r4 = true;\n            break;\n          }\n          n4[f3] = 0;\n        }\n      }\n      else for (var c2 = 0; c2 < 3; c2++) for (r4 = false, _4 = xa.PSFB12 - 1; _4 >= 0 && !r4; _4--) {\n        o4 = (i4 = 3 * e7.scalefac_band.s[12] + (e7.scalefac_band.s[13] - e7.scalefac_band.s[12]) * c2 + (e7.scalefac_band.psfb12[_4] - e7.scalefac_band.psfb12[0])) + (e7.scalefac_band.psfb12[_4 + 1] - e7.scalefac_band.psfb12[_4]);\n        var h2 = t2.athAdjust(s4.adjust, s4.psfb12[_4], s4.floor);\n        for (e7.nsPsy.shortfact[12] > 1e-12 && (h2 *= e7.nsPsy.shortfact[12]), f3 = o4 - 1; f3 >= i4; f3--) {\n          if (!(Math.abs(n4[f3]) < h2)) {\n            r4 = true;\n            break;\n          }\n          n4[f3] = 0;\n        }\n      }\n    }(e6, a3);\n  }, r2.BINSEARCH_NONE = new r2(0), r2.BINSEARCH_UP = new r2(1), r2.BINSEARCH_DOWN = new r2(2), this.trancate_smallspectrums = function(e6, a3, n3, r3) {\n    var _3 = wa(Ia.SFBMAX);\n    if ((0 != (4 & e6.substep_shaping) || a3.block_type != xa.SHORT_TYPE) && 0 == (128 & e6.substep_shaping)) {\n      t2.calc_noise(a3, n3, _3, new ka(), null);\n      for (var i3 = 0; i3 < 576; i3++) {\n        var o3 = 0;\n        0 != a3.l3_enc[i3] && (o3 = Math.abs(a3.xr[i3])), r3[i3] = o3;\n      }\n      i3 = 0;\n      var l2 = 8;\n      a3.block_type == xa.SHORT_TYPE && (l2 = 6);\n      do {\n        var f2, c2, h2, u2, b2 = a3.width[l2];\n        if (i3 += b2, !(_3[l2] >= 1 || (Ba.sort(r3, i3 - b2, b2), BitStream.EQ(r3[i3 - 1], 0)))) {\n          f2 = (1 - _3[l2]) * n3[l2], c2 = 0, u2 = 0;\n          do {\n            var m2;\n            for (h2 = 1; u2 + h2 < b2 && !BitStream.NEQ(r3[u2 + i3 - b2], r3[u2 + i3 + h2 - b2]); h2++) ;\n            if (f2 < (m2 = r3[u2 + i3 - b2] * r3[u2 + i3 - b2] * h2)) {\n              0 != u2 && (c2 = r3[u2 + i3 - b2 - 1]);\n              break;\n            }\n            f2 -= m2, u2 += h2;\n          } while (u2 < b2);\n          if (!BitStream.EQ(c2, 0)) do {\n            Math.abs(a3.xr[i3 - b2]) <= c2 && (a3.l3_enc[i3 - b2] = 0);\n          } while (--b2 > 0);\n        }\n      } while (++l2 < a3.psymax);\n      a3.part2_3_length = s2.noquant_count_bits(e6, a3, null);\n    }\n  }, this.outer_loop = function(e6, a3, n3, _3, l2, f2) {\n    var c2 = e6.internal_flags, h2 = new Pa(), u2 = wa(576), b2 = wa(Ia.SFBMAX), m2 = new ka(), p2 = new ya(), v2 = 9999999, d2 = false, g2 = false, S2 = 0;\n    if (function(e7, a4, t3, n4, _4) {\n      var i3, o3 = e7.CurrentStep[n4], l3 = false, f3 = e7.OldValue[n4], c3 = r2.BINSEARCH_NONE;\n      for (a4.global_gain = f3, t3 -= a4.part2_length; ; ) {\n        var h3;\n        if (i3 = s2.count_bits(e7, _4, a4, null), 1 == o3 || i3 == t3) break;\n        i3 > t3 ? (c3 == r2.BINSEARCH_DOWN && (l3 = true), l3 && (o3 /= 2), c3 = r2.BINSEARCH_UP, h3 = o3) : (c3 == r2.BINSEARCH_UP && (l3 = true), l3 && (o3 /= 2), c3 = r2.BINSEARCH_DOWN, h3 = -o3), a4.global_gain += h3, a4.global_gain < 0 && (a4.global_gain = 0, l3 = true), a4.global_gain > 255 && (a4.global_gain = 255, l3 = true);\n      }\n      for (Ta(a4.global_gain >= 0), Ta(a4.global_gain < 256); i3 > t3 && a4.global_gain < 255; ) a4.global_gain++, i3 = s2.count_bits(e7, _4, a4, null);\n      e7.CurrentStep[n4] = f3 - a4.global_gain >= 4 ? 4 : 2, e7.OldValue[n4] = a4.global_gain, a4.part2_3_length = i3;\n    }(c2, a3, f2, l2, _3), 0 == c2.noise_shaping) return 100;\n    t2.calc_noise(a3, n3, b2, m2, p2), m2.bits = a3.part2_3_length, h2.assign(a3);\n    var R2 = 0;\n    for (Ra.arraycopy(_3, 0, u2, 0, 576); !d2; ) {\n      do {\n        var A2, M2 = new ka(), B2 = 255;\n        if (A2 = 0 != (2 & c2.substep_shaping) ? 20 : 3, c2.sfb21_extra) {\n          if (b2[h2.sfbmax] > 1) break;\n          if (h2.block_type == xa.SHORT_TYPE && (b2[h2.sfbmax + 1] > 1 || b2[h2.sfbmax + 2] > 1)) break;\n        }\n        if (!o2(e6, h2, b2, _3, g2)) break;\n        0 != h2.scalefac_scale && (B2 = 254);\n        var w2 = f2 - h2.part2_length;\n        if (w2 <= 0) break;\n        for (; (h2.part2_3_length = s2.count_bits(c2, _3, h2, p2)) > w2 && h2.global_gain <= B2; ) h2.global_gain++;\n        if (h2.global_gain > B2) break;\n        if (0 == m2.over_count) {\n          for (; (h2.part2_3_length = s2.count_bits(c2, _3, h2, p2)) > v2 && h2.global_gain <= B2; ) h2.global_gain++;\n          if (h2.global_gain > B2) break;\n        }\n        if (t2.calc_noise(h2, n3, b2, M2, p2), M2.bits = h2.part2_3_length, 0 != (i2(a3.block_type != xa.SHORT_TYPE ? e6.quant_comp : e6.quant_comp_short, m2, M2, h2, b2) ? 1 : 0)) v2 = a3.part2_3_length, m2 = M2, a3.assign(h2), R2 = 0, Ra.arraycopy(_3, 0, u2, 0, 576);\n        else if (0 == c2.full_outer_loop) {\n          if (++R2 > A2 && 0 == m2.over_count) break;\n          if (3 == c2.noise_shaping_amp && g2 && R2 > 30) break;\n          if (3 == c2.noise_shaping_amp && g2 && h2.global_gain - S2 > 15) break;\n        }\n      } while (h2.global_gain + h2.scalefac_scale < 255);\n      3 == c2.noise_shaping_amp ? g2 ? d2 = true : (h2.assign(a3), Ra.arraycopy(u2, 0, _3, 0, 576), R2 = 0, S2 = h2.global_gain, g2 = true) : d2 = true;\n    }\n    return Ta(a3.global_gain + a3.scalefac_scale <= 255), e6.VBR == Aa.vbr_rh || e6.VBR == Aa.vbr_mtrh ? Ra.arraycopy(u2, 0, _3, 0, 576) : 0 != (1 & c2.substep_shaping) && trancate_smallspectrums(c2, a3, n3, _3), m2.over_count;\n  }, this.iteration_finish_one = function(e6, t3, n3) {\n    var r3 = e6.l3_side, _3 = r3.tt[t3][n3];\n    s2.best_scalefac_store(e6, t3, n3, r3), 1 == e6.use_best_huffman && s2.best_huffman_divide(e6, _3), a2.ResvAdjust(e6, _3);\n  }, this.VBR_encode_granule = function(e6, a3, t3, s3, n3, r3, _3) {\n    var i3, o3 = e6.internal_flags, l2 = new Pa(), f2 = wa(576), c2 = _3, h2 = _3 + 1, u2 = (_3 + r3) / 2, b2 = 0, m2 = o3.sfb21_extra;\n    Ta(c2 <= LameInternalFlags.MAX_BITS_PER_CHANNEL), Ba.fill(l2.l3_enc, 0);\n    do {\n      o3.sfb21_extra = !(u2 > c2 - 42) && m2, outer_loop(e6, a3, t3, s3, n3, u2) <= 0 ? (b2 = 1, h2 = a3.part2_3_length, l2.assign(a3), Ra.arraycopy(s3, 0, f2, 0, 576), i3 = (_3 = h2 - 32) - r3, u2 = (_3 + r3) / 2) : (i3 = _3 - (r3 = u2 + 32), u2 = (_3 + r3) / 2, 0 != b2 && (b2 = 2, a3.assign(l2), Ra.arraycopy(f2, 0, s3, 0, 576)));\n    } while (i3 > 12);\n    o3.sfb21_extra = m2, 2 == b2 && Ra.arraycopy(l2.l3_enc, 0, a3.l3_enc, 0, 576), Ta(a3.part2_3_length <= c2);\n  }, this.get_framebits = function(t3, s3) {\n    var n3 = t3.internal_flags;\n    n3.bitrate_index = n3.VBR_min_bitrate;\n    var r3 = e5.getframebits(t3);\n    n3.bitrate_index = 1, r3 = e5.getframebits(t3);\n    for (var _3 = 1; _3 <= n3.VBR_max_bitrate; _3++) {\n      n3.bitrate_index = _3;\n      var i3 = new MeanBits(r3);\n      s3[_3] = a2.ResvFrameBegin(t3, i3), r3 = i3.bits;\n    }\n  }, this.VBR_old_prepare = function(e6, s3, n3, r3, _3, i3, o3, l2, f2) {\n    var c2, h2 = e6.internal_flags, u2 = 0, b2 = 1, m2 = 0;\n    h2.bitrate_index = h2.VBR_max_bitrate;\n    var p2 = a2.ResvFrameBegin(e6, new MeanBits(0)) / h2.mode_gr;\n    get_framebits(e6, i3);\n    for (var v2 = 0; v2 < h2.mode_gr; v2++) {\n      var d2 = t2.on_pe(e6, s3, l2[v2], p2, v2, 0);\n      h2.mode_ext == xa.MPG_MD_MS_LR && (ms_convert(h2.l3_side, v2), t2.reduce_side(l2[v2], n3[v2], p2, d2));\n      for (var g2 = 0; g2 < h2.channels_out; ++g2) {\n        var S2 = h2.l3_side.tt[v2][g2];\n        S2.block_type != xa.SHORT_TYPE ? (u2 = 1.28 / (1 + Math.exp(3.5 - s3[v2][g2] / 300)) - 0.05, c2 = h2.PSY.mask_adjust - u2) : (u2 = 2.56 / (1 + Math.exp(3.5 - s3[v2][g2] / 300)) - 0.14, c2 = h2.PSY.mask_adjust_short - u2), h2.masking_lower = Math.pow(10, 0.1 * c2), init_outer_loop(h2, S2), f2[v2][g2] = t2.calc_xmin(e6, r3[v2][g2], S2, _3[v2][g2]), 0 != f2[v2][g2] && (b2 = 0), o3[v2][g2] = 126, m2 += l2[v2][g2];\n      }\n    }\n    for (v2 = 0; v2 < h2.mode_gr; v2++) for (g2 = 0; g2 < h2.channels_out; g2++) m2 > i3[h2.VBR_max_bitrate] && (l2[v2][g2] *= i3[h2.VBR_max_bitrate], l2[v2][g2] /= m2), o3[v2][g2] > l2[v2][g2] && (o3[v2][g2] = l2[v2][g2]);\n    return b2;\n  }, this.bitpressure_strategy = function(e6, a3, t3, s3) {\n    for (var n3 = 0; n3 < e6.mode_gr; n3++) for (var r3 = 0; r3 < e6.channels_out; r3++) {\n      for (var _3 = e6.l3_side.tt[n3][r3], i3 = a3[n3][r3], o3 = 0, l2 = 0; l2 < _3.psy_lmax; l2++) i3[o3++] *= 1 + 0.029 * l2 * l2 / xa.SBMAX_l / xa.SBMAX_l;\n      if (_3.block_type == xa.SHORT_TYPE) for (l2 = _3.sfb_smin; l2 < xa.SBMAX_s; l2++) i3[o3++] *= 1 + 0.029 * l2 * l2 / xa.SBMAX_s / xa.SBMAX_s, i3[o3++] *= 1 + 0.029 * l2 * l2 / xa.SBMAX_s / xa.SBMAX_s, i3[o3++] *= 1 + 0.029 * l2 * l2 / xa.SBMAX_s / xa.SBMAX_s;\n      s3[n3][r3] = 0 | Math.max(t3[n3][r3], 0.9 * s3[n3][r3]);\n    }\n  }, this.VBR_new_prepare = function(e6, s3, n3, r3, _3, i3) {\n    var o3, l2 = e6.internal_flags, f2 = 1, c2 = 0, h2 = 0;\n    if (e6.free_format) {\n      l2.bitrate_index = 0;\n      u2 = new MeanBits(c2);\n      o3 = a2.ResvFrameBegin(e6, u2), c2 = u2.bits, _3[0] = o3;\n    } else {\n      l2.bitrate_index = l2.VBR_max_bitrate;\n      var u2 = new MeanBits(c2);\n      a2.ResvFrameBegin(e6, u2), c2 = u2.bits, get_framebits(e6, _3), o3 = _3[l2.VBR_max_bitrate];\n    }\n    for (var b2 = 0; b2 < l2.mode_gr; b2++) {\n      t2.on_pe(e6, s3, i3[b2], c2, b2, 0), l2.mode_ext == xa.MPG_MD_MS_LR && ms_convert(l2.l3_side, b2);\n      for (var m2 = 0; m2 < l2.channels_out; ++m2) {\n        var p2 = l2.l3_side.tt[b2][m2];\n        l2.masking_lower = Math.pow(10, 0.1 * l2.PSY.mask_adjust), init_outer_loop(l2, p2), 0 != t2.calc_xmin(e6, n3[b2][m2], p2, r3[b2][m2]) && (f2 = 0), h2 += i3[b2][m2];\n      }\n    }\n    for (b2 = 0; b2 < l2.mode_gr; b2++) for (m2 = 0; m2 < l2.channels_out; m2++) h2 > o3 && (i3[b2][m2] *= o3, i3[b2][m2] /= h2);\n    return f2;\n  }, this.calc_target_bits = function(s3, n3, r3, _3, i3, o3) {\n    var l2, f2, c2, h2, u2 = s3.internal_flags, b2 = u2.l3_side, m2 = 0;\n    u2.bitrate_index = u2.VBR_max_bitrate;\n    var p2 = new MeanBits(m2);\n    for (o3[0] = a2.ResvFrameBegin(s3, p2), m2 = p2.bits, u2.bitrate_index = 1, m2 = e5.getframebits(s3) - 8 * u2.sideinfo_len, i3[0] = m2 / (u2.mode_gr * u2.channels_out), m2 = s3.VBR_mean_bitrate_kbps * s3.framesize * 1e3, 0 != (1 & u2.substep_shaping) && (m2 *= 1.09), m2 /= s3.out_samplerate, m2 -= 8 * u2.sideinfo_len, m2 /= u2.mode_gr * u2.channels_out, (l2 = 0.93 + 0.07 * (11 - s3.compression_ratio) / 5.5) < 0.9 && (l2 = 0.9), l2 > 1 && (l2 = 1), f2 = 0; f2 < u2.mode_gr; f2++) {\n      var v2 = 0;\n      for (c2 = 0; c2 < u2.channels_out; c2++) {\n        if (_3[f2][c2] = int(l2 * m2), n3[f2][c2] > 700) {\n          var d2 = int((n3[f2][c2] - 700) / 1.4), g2 = b2.tt[f2][c2];\n          _3[f2][c2] = int(l2 * m2), g2.block_type == xa.SHORT_TYPE && d2 < m2 / 2 && (d2 = m2 / 2), d2 > 3 * m2 / 2 ? d2 = 3 * m2 / 2 : d2 < 0 && (d2 = 0), _3[f2][c2] += d2;\n        }\n        _3[f2][c2] > LameInternalFlags.MAX_BITS_PER_CHANNEL && (_3[f2][c2] = LameInternalFlags.MAX_BITS_PER_CHANNEL), v2 += _3[f2][c2];\n      }\n      if (v2 > LameInternalFlags.MAX_BITS_PER_GRANULE) for (c2 = 0; c2 < u2.channels_out; ++c2) _3[f2][c2] *= LameInternalFlags.MAX_BITS_PER_GRANULE, _3[f2][c2] /= v2;\n    }\n    if (u2.mode_ext == xa.MPG_MD_MS_LR) for (f2 = 0; f2 < u2.mode_gr; f2++) t2.reduce_side(_3[f2], r3[f2], m2 * u2.channels_out, LameInternalFlags.MAX_BITS_PER_GRANULE);\n    for (h2 = 0, f2 = 0; f2 < u2.mode_gr; f2++) for (c2 = 0; c2 < u2.channels_out; c2++) _3[f2][c2] > LameInternalFlags.MAX_BITS_PER_CHANNEL && (_3[f2][c2] = LameInternalFlags.MAX_BITS_PER_CHANNEL), h2 += _3[f2][c2];\n    if (h2 > o3[0]) for (f2 = 0; f2 < u2.mode_gr; f2++) for (c2 = 0; c2 < u2.channels_out; c2++) _3[f2][c2] *= o3[0], _3[f2][c2] /= h2;\n  };\n}, Va = p.assert;\nvar La = function() {\n  var e5;\n  this.setModules = function(a2) {\n    e5 = a2;\n  }, this.ResvFrameBegin = function(a2, t2) {\n    var s2, n2 = a2.internal_flags, r2 = n2.l3_side, _2 = e5.getframebits(a2);\n    t2.bits = (_2 - 8 * n2.sideinfo_len) / n2.mode_gr;\n    var i2 = 2048 * n2.mode_gr - 8;\n    a2.brate > 320 ? s2 = 8 * int(1e3 * a2.brate / (a2.out_samplerate / 1152) / 8 + 0.5) : (s2 = 11520, a2.strict_ISO && (s2 = 8 * int(32e4 / (a2.out_samplerate / 1152) / 8 + 0.5))), n2.ResvMax = s2 - _2, n2.ResvMax > i2 && (n2.ResvMax = i2), (n2.ResvMax < 0 || a2.disable_reservoir) && (n2.ResvMax = 0);\n    var o2 = t2.bits * n2.mode_gr + Math.min(n2.ResvSize, n2.ResvMax);\n    return o2 > s2 && (o2 = s2), Va(0 == n2.ResvMax % 8), Va(n2.ResvMax >= 0), r2.resvDrain_pre = 0, null != n2.pinfo && (n2.pinfo.mean_bits = t2.bits / 2, n2.pinfo.resvsize = n2.ResvSize), o2;\n  }, this.ResvMaxBits = function(e6, a2, t2, s2) {\n    var n2, r2 = e6.internal_flags, _2 = r2.ResvSize, i2 = r2.ResvMax;\n    0 != s2 && (_2 += a2), 0 != (1 & r2.substep_shaping) && (i2 *= 0.9), t2.bits = a2, 10 * _2 > 9 * i2 ? (n2 = _2 - 9 * i2 / 10, t2.bits += n2, r2.substep_shaping |= 128) : (n2 = 0, r2.substep_shaping &= 127, e6.disable_reservoir || 0 != (1 & r2.substep_shaping) || (t2.bits -= 0.1 * a2));\n    var o2 = _2 < 6 * r2.ResvMax / 10 ? _2 : 6 * r2.ResvMax / 10;\n    return (o2 -= n2) < 0 && (o2 = 0), o2;\n  }, this.ResvAdjust = function(e6, a2) {\n    e6.ResvSize -= a2.part2_3_length + a2.part2_length;\n  }, this.ResvFrameEnd = function(e6, a2) {\n    var t2, s2 = e6.l3_side;\n    e6.ResvSize += a2 * e6.mode_gr;\n    var n2 = 0;\n    s2.resvDrain_post = 0, s2.resvDrain_pre = 0, 0 != (t2 = e6.ResvSize % 8) && (n2 += t2), (t2 = e6.ResvSize - n2 - e6.ResvMax) > 0 && (n2 += t2);\n    var r2 = Math.min(8 * s2.main_data_begin, n2) / 8;\n    s2.resvDrain_pre += 8 * r2, n2 -= 8 * r2, e6.ResvSize -= 8 * r2, s2.main_data_begin -= r2, s2.resvDrain_post += n2, e6.ResvSize -= n2;\n  };\n};\nvar Na = function() {\n  this.getLameVersion = function() {\n    return \"3.98.4\";\n  }, this.getLameShortVersion = function() {\n    return \"3.98.4\";\n  }, this.getLameVeryShortVersion = function() {\n    return \"LAME3.98r\";\n  }, this.getPsyVersion = function() {\n    return \"0.93\";\n  }, this.getLameUrl = function() {\n    return \"http://www.mp3dev.org/\";\n  }, this.getLameOsBitness = function() {\n    return \"32bits\";\n  };\n}, Oa = p, Xa = Oa.System, Da = Oa.VbrMode, Ya = Oa.ShortBlock, qa = Oa.Arrays, Fa = Oa.new_byte, Ca = Oa.assert;\nfunction ja() {\n  var e5, a2, t2;\n  this.setModules = function(s3, n3, r3) {\n    e5 = s3, a2 = n3, t2 = r3;\n  };\n  var s2 = ja.NUMTOCENTRIES, n2 = ja.MAXFRAMESIZE, r2 = s2 + 4 + 4 + 4 + 4 + 4 + 9 + 1 + 1 + 8 + 1 + 1 + 3 + 1 + 1 + 2 + 4 + 2 + 2, _2 = \"Xing\", i2 = \"Info\", o2 = [0, 49345, 49537, 320, 49921, 960, 640, 49729, 50689, 1728, 1920, 51009, 1280, 50625, 50305, 1088, 52225, 3264, 3456, 52545, 3840, 53185, 52865, 3648, 2560, 51905, 52097, 2880, 51457, 2496, 2176, 51265, 55297, 6336, 6528, 55617, 6912, 56257, 55937, 6720, 7680, 57025, 57217, 8e3, 56577, 7616, 7296, 56385, 5120, 54465, 54657, 5440, 55041, 6080, 5760, 54849, 53761, 4800, 4992, 54081, 4352, 53697, 53377, 4160, 61441, 12480, 12672, 61761, 13056, 62401, 62081, 12864, 13824, 63169, 63361, 14144, 62721, 13760, 13440, 62529, 15360, 64705, 64897, 15680, 65281, 16320, 16e3, 65089, 64001, 15040, 15232, 64321, 14592, 63937, 63617, 14400, 10240, 59585, 59777, 10560, 60161, 11200, 10880, 59969, 60929, 11968, 12160, 61249, 11520, 60865, 60545, 11328, 58369, 9408, 9600, 58689, 9984, 59329, 59009, 9792, 8704, 58049, 58241, 9024, 57601, 8640, 8320, 57409, 40961, 24768, 24960, 41281, 25344, 41921, 41601, 25152, 26112, 42689, 42881, 26432, 42241, 26048, 25728, 42049, 27648, 44225, 44417, 27968, 44801, 28608, 28288, 44609, 43521, 27328, 27520, 43841, 26880, 43457, 43137, 26688, 30720, 47297, 47489, 31040, 47873, 31680, 31360, 47681, 48641, 32448, 32640, 48961, 32e3, 48577, 48257, 31808, 46081, 29888, 30080, 46401, 30464, 47041, 46721, 30272, 29184, 45761, 45953, 29504, 45313, 29120, 28800, 45121, 20480, 37057, 37249, 20800, 37633, 21440, 21120, 37441, 38401, 22208, 22400, 38721, 21760, 38337, 38017, 21568, 39937, 23744, 23936, 40257, 24320, 40897, 40577, 24128, 23040, 39617, 39809, 23360, 39169, 22976, 22656, 38977, 34817, 18624, 18816, 35137, 19200, 35777, 35457, 19008, 19968, 36545, 36737, 20288, 36097, 19904, 19584, 35905, 17408, 33985, 34177, 17728, 34561, 18368, 18048, 34369, 33281, 17088, 17280, 33601, 16640, 33217, 32897, 16448];\n  function l2(e6, a3) {\n    var t3 = 255 & e6[a3 + 0];\n    return t3 <<= 8, t3 |= 255 & e6[a3 + 1], t3 <<= 8, t3 |= 255 & e6[a3 + 2], t3 <<= 8, t3 |= 255 & e6[a3 + 3];\n  }\n  function f2(e6, a3, t3) {\n    e6[a3 + 0] = 255 & t3 >> 24, e6[a3 + 1] = 255 & t3 >> 16, e6[a3 + 2] = 255 & t3 >> 8, e6[a3 + 3] = 255 & t3;\n  }\n  function c2(e6, a3, t3) {\n    e6[a3 + 0] = 255 & t3 >> 8, e6[a3 + 1] = 255 & t3;\n  }\n  function h2(e6, a3, t3) {\n    return 255 & (e6 << a3 | t3 & ~(-1 << a3));\n  }\n  function u2(a3, t3) {\n    var s3 = a3.internal_flags;\n    t3[0] = h2(t3[0], 8, 255), t3[1] = h2(t3[1], 3, 7), t3[1] = h2(t3[1], 1, a3.out_samplerate < 16e3 ? 0 : 1), t3[1] = h2(t3[1], 1, a3.version), t3[1] = h2(t3[1], 2, 1), t3[1] = h2(t3[1], 1, a3.error_protection ? 0 : 1), t3[2] = h2(t3[2], 4, s3.bitrate_index), t3[2] = h2(t3[2], 2, s3.samplerate_index), t3[2] = h2(t3[2], 1, 0), t3[2] = h2(t3[2], 1, a3.extension), t3[3] = h2(t3[3], 2, a3.mode.ordinal()), t3[3] = h2(t3[3], 2, s3.mode_ext), t3[3] = h2(t3[3], 1, a3.copyright), t3[3] = h2(t3[3], 1, a3.original), t3[3] = h2(t3[3], 2, a3.emphasis), t3[0] = 255;\n    var n3, r3, _3 = 241 & t3[1];\n    n3 = 1 == a3.version ? 128 : a3.out_samplerate < 16e3 ? 32 : 64, a3.VBR == Da.vbr_off && (n3 = a3.brate), r3 = a3.free_format ? 0 : 255 & 16 * e5.BitrateIndex(n3, a3.version, a3.out_samplerate), 1 == a3.version ? (t3[1] = 255 & (10 | _3), _3 = 13 & t3[2], t3[2] = 255 & (r3 | _3)) : (t3[1] = 255 & (2 | _3), _3 = 13 & t3[2], t3[2] = 255 & (r3 | _3));\n  }\n  function b2(e6, a3) {\n    return a3 = a3 >> 8 ^ o2[255 & (a3 ^ e6)];\n  }\n  this.addVbrFrame = function(e6) {\n    var a3 = e6.internal_flags, t3 = Tables.bitrate_table[e6.version][a3.bitrate_index];\n    Ca(null != a3.VBR_seek_table.bag), function(e7, a4) {\n      if (e7.nVbrNumFrames++, e7.sum += a4, e7.seen++, !(e7.seen < e7.want) && (e7.pos < e7.size && (e7.bag[e7.pos] = e7.sum, e7.pos++, e7.seen = 0), e7.pos == e7.size)) {\n        for (var t4 = 1; t4 < e7.size; t4 += 2) e7.bag[t4 / 2] = e7.bag[t4];\n        e7.want *= 2, e7.pos /= 2;\n      }\n    }(a3.VBR_seek_table, t3);\n  }, this.getVbrTag = function(e6) {\n    var a3 = new VBRTagData(), t3 = 0;\n    a3.flags = 0;\n    var n3 = e6[t3 + 1] >> 3 & 1, r3 = e6[t3 + 2] >> 2 & 3, o3 = e6[t3 + 3] >> 6 & 3, f3 = e6[t3 + 2] >> 4 & 15;\n    if (f3 = Tables.bitrate_table[n3][f3], e6[t3 + 1] >> 4 == 14 ? a3.samprate = Tables.samplerate_table[2][r3] : a3.samprate = Tables.samplerate_table[n3][r3], !function(e7, a4) {\n      return new String(e7, a4, 4(), null).equals(_2) || new String(e7, a4, 4(), null).equals(i2);\n    }(e6, t3 += 0 != n3 ? 3 != o3 ? 36 : 21 : 3 != o3 ? 21 : 13)) return null;\n    t3 += 4, a3.hId = n3;\n    var c3 = a3.flags = l2(e6, t3);\n    if (t3 += 4, 0 != (1 & c3) && (a3.frames = l2(e6, t3), t3 += 4), 0 != (2 & c3) && (a3.bytes = l2(e6, t3), t3 += 4), 0 != (4 & c3)) {\n      if (null != a3.toc) for (var h3 = 0; h3 < s2; h3++) a3.toc[h3] = e6[t3 + h3];\n      t3 += s2;\n    }\n    a3.vbrScale = -1, 0 != (8 & c3) && (a3.vbrScale = l2(e6, t3), t3 += 4), a3.headersize = 72e3 * (n3 + 1) * f3 / a3.samprate;\n    var u3 = e6[(t3 += 21) + 0] << 4;\n    u3 += e6[t3 + 1] >> 4;\n    var b3 = (15 & e6[t3 + 1]) << 8;\n    return (u3 < 0 || u3 > 3e3) && (u3 = -1), ((b3 += 255 & e6[t3 + 2]) < 0 || b3 > 3e3) && (b3 = -1), a3.encDelay = u3, a3.encPadding = b3, a3;\n  }, this.InitVbrTag = function(e6) {\n    var t3, s3 = e6.internal_flags;\n    t3 = 1 == e6.version ? 128 : e6.out_samplerate < 16e3 ? 32 : 64, e6.VBR == Da.vbr_off && (t3 = e6.brate);\n    var _3 = 72e3 * (e6.version + 1) * t3 / e6.out_samplerate, i3 = s3.sideinfo_len + r2;\n    if (s3.VBR_seek_table.TotalFrameSize = _3, _3 < i3 || _3 > n2) e6.bWriteVbrTag = false;\n    else {\n      s3.VBR_seek_table.nVbrNumFrames = 0, s3.VBR_seek_table.nBytesWritten = 0, s3.VBR_seek_table.sum = 0, s3.VBR_seek_table.seen = 0, s3.VBR_seek_table.want = 1, s3.VBR_seek_table.pos = 0, null == s3.VBR_seek_table.bag && (s3.VBR_seek_table.bag = new int[400](), s3.VBR_seek_table.size = 400);\n      var o3 = Fa(n2);\n      u2(e6, o3);\n      for (var l3 = s3.VBR_seek_table.TotalFrameSize, f3 = 0; f3 < l3; ++f3) a2.add_dummy_byte(e6, 255 & o3[f3], 1);\n    }\n  }, this.updateMusicCRC = function(e6, a3, t3, s3) {\n    for (var n3 = 0; n3 < s3; ++n3) e6[0] = b2(a3[t3 + n3], e6[0]);\n  }, this.getLameTagFrame = function(e6, n3) {\n    var r3 = e6.internal_flags;\n    if (!e6.bWriteVbrTag) return 0;\n    if (r3.Class_ID != Lame.LAME_ID) return 0;\n    if (r3.VBR_seek_table.pos <= 0) return 0;\n    if (n3.length < r3.VBR_seek_table.TotalFrameSize) return r3.VBR_seek_table.TotalFrameSize;\n    qa.fill(n3, 0, r3.VBR_seek_table.TotalFrameSize, 0), u2(e6, n3);\n    var o3 = Fa(s2);\n    if (e6.free_format) for (var l3 = 1; l3 < s2; ++l3) o3[l3] = 255 & 255 * l3 / 100;\n    else !function(e7, a3) {\n      if (!(e7.pos <= 0)) for (var t3 = 1; t3 < s2; ++t3) {\n        var n4 = t3 / s2, r4 = 0 | Math.floor(n4 * e7.pos);\n        r4 > e7.pos - 1 && (r4 = e7.pos - 1);\n        var _3 = 0 | 256 * e7.bag[r4] / e7.sum;\n        _3 > 255 && (_3 = 255), a3[t3] = 255 & _3;\n      }\n    }(r3.VBR_seek_table, o3);\n    var h3 = r3.sideinfo_len;\n    e6.error_protection && (h3 -= 2), e6.VBR == Da.vbr_off ? (n3[h3++] = 255 & i2.charAt(0), n3[h3++] = 255 & i2.charAt(1), n3[h3++] = 255 & i2.charAt(2), n3[h3++] = 255 & i2.charAt(3)) : (n3[h3++] = 255 & _2.charAt(0), n3[h3++] = 255 & _2.charAt(1), n3[h3++] = 255 & _2.charAt(2), n3[h3++] = 255 & _2.charAt(3)), f2(n3, h3, 15), f2(n3, h3 += 4, r3.VBR_seek_table.nVbrNumFrames), h3 += 4;\n    var m2 = r3.VBR_seek_table.nBytesWritten + r3.VBR_seek_table.TotalFrameSize;\n    f2(n3, h3, 0 | m2), h3 += 4, Xa.arraycopy(o3, 0, n3, h3, o3.length), h3 += o3.length, e6.error_protection && a2.CRC_writeheader(r3, n3);\n    var p2 = 0;\n    for (l3 = 0; l3 < h3; l3++) p2 = b2(n3[l3], p2);\n    return h3 += function(e7, a3, s3, n4, r4) {\n      var _3, i3, o4, l4, h4, u3 = e7.internal_flags, m3 = 0, p3 = e7.encoder_delay, v2 = e7.encoder_padding, d2 = 100 - 10 * e7.VBR_q - e7.quality, g2 = t2.getLameVeryShortVersion(), S2 = [1, 5, 3, 2, 4, 0, 3], R2 = 0 | (e7.lowpassfreq / 100 + 0.5 > 255 ? 255 : e7.lowpassfreq / 100 + 0.5), A2 = 0, M2 = 0, B2 = e7.internal_flags.noise_shaping, w2 = 0, T2 = 0, E2 = 0, k2 = 0 != (1 & e7.exp_nspsytune), y2 = 0 != (2 & e7.exp_nspsytune), x2 = false, P2 = false, I2 = e7.internal_flags.nogap_total, H2 = e7.internal_flags.nogap_current, V2 = e7.ATHtype;\n      switch (e7.VBR) {\n        case vbr_abr:\n          h4 = e7.VBR_mean_bitrate_kbps;\n          break;\n        case vbr_off:\n          h4 = e7.brate;\n          break;\n        default:\n          h4 = e7.VBR_min_bitrate_kbps;\n      }\n      switch (_3 = 0 + (e7.VBR.ordinal() < S2.length ? S2[e7.VBR.ordinal()] : 0), u3.findReplayGain && (u3.RadioGain > 510 && (u3.RadioGain = 510), u3.RadioGain < -510 && (u3.RadioGain = -510), M2 = 8192, M2 |= 3072, u3.RadioGain >= 0 ? M2 |= u3.RadioGain : (M2 |= 512, M2 |= -u3.RadioGain)), u3.findPeakSample && (A2 = Math.abs(0 | u3.PeakSample / 32767 * Math.pow(2, 23) + 0.5)), -1 != I2 && (H2 > 0 && (P2 = true), H2 < I2 - 1 && (x2 = true)), l4 = V2 + ((k2 ? 1 : 0) << 4) + ((y2 ? 1 : 0) << 5) + ((x2 ? 1 : 0) << 6) + ((P2 ? 1 : 0) << 7), d2 < 0 && (d2 = 0), e7.mode) {\n        case MONO:\n          w2 = 0;\n          break;\n        case STEREO:\n          w2 = 1;\n          break;\n        case DUAL_CHANNEL:\n          w2 = 2;\n          break;\n        case JOINT_STEREO:\n          w2 = e7.force_ms ? 4 : 3;\n          break;\n        case NOT_SET:\n        default:\n          w2 = 7;\n      }\n      E2 = e7.in_samplerate <= 32e3 ? 0 : 48e3 == e7.in_samplerate ? 2 : e7.in_samplerate > 48e3 ? 3 : 1, (e7.short_blocks == Ya.short_block_forced || e7.short_blocks == Ya.short_block_dispensed || -1 == e7.lowpassfreq && -1 == e7.highpassfreq || e7.scale_left < e7.scale_right || e7.scale_left > e7.scale_right || e7.disable_reservoir && e7.brate < 320 || e7.noATH || e7.ATHonly || 0 == V2 || e7.in_samplerate <= 32e3) && (T2 = 1), i3 = B2 + (w2 << 2) + (T2 << 5) + (E2 << 6), o4 = u3.nMusicCRC, f2(s3, n4 + m3, d2), m3 += 4;\n      for (var L2 = 0; L2 < 9; L2++) s3[n4 + m3 + L2] = 255 & g2.charAt(L2);\n      s3[n4 + (m3 += 9)] = 255 & _3, s3[n4 + ++m3] = 255 & R2, f2(s3, n4 + ++m3, A2), c2(s3, n4 + (m3 += 4), M2), c2(s3, n4 + (m3 += 2), 0), s3[n4 + (m3 += 2)] = 255 & l4, s3[n4 + ++m3] = h4 >= 255 ? 255 : 255 & h4, s3[n4 + ++m3] = 255 & p3 >> 4, s3[n4 + m3 + 1] = 255 & (p3 << 4) + (v2 >> 8), s3[n4 + m3 + 2] = 255 & v2, s3[n4 + (m3 += 3)] = 255 & i3, m3++, s3[n4 + m3++] = 0, c2(s3, n4 + m3, e7.preset), f2(s3, n4 + (m3 += 2), a3), c2(s3, n4 + (m3 += 4), o4), m3 += 2;\n      for (var N2 = 0; N2 < m3; N2++) r4 = b2(s3[n4 + N2], r4);\n      return c2(s3, n4 + m3, r4), m3 + 2;\n    }(e6, m2, n3, h3, p2), r3.VBR_seek_table.TotalFrameSize;\n  }, this.putVbrTag = function(e6, a3) {\n    if (e6.internal_flags.VBR_seek_table.pos <= 0) return -1;\n    if (a3.seek(a3.length()), 0 == a3.length()) return -1;\n    var t3 = function(e7) {\n      e7.seek(0);\n      var a4 = Fa(10);\n      return e7.readFully(a4), new String(a4, \"ISO-8859-1\").startsWith(\"ID3\") ? 0 : ((127 & a4[6]) << 21 | (127 & a4[7]) << 14 | (127 & a4[8]) << 7 | 127 & a4[9]) + a4.length;\n    }(a3);\n    a3.seek(t3);\n    var s3 = Fa(n2), r3 = getLameTagFrame(e6, s3);\n    return r3 > s3.length ? -1 : (r3 < 1 || a3.write(s3, 0, r3), 0);\n  };\n}\nja.NUMTOCENTRIES = 100, ja.MAXFRAMESIZE = 2880;\nvar Ga = ja, za = p, Ka = za.new_byte, Za = za.assert, Ua = ca(), Qa = ua, Wa = Le, Ja = oa(), $a = Ha, et = la(), at = La, tt = R, st = fa();\nA();\nvar nt = Na, rt = Ga;\nfunction _t() {\n  this.setModules = function(e5, a2) {\n  };\n}\nfunction it() {\n  this.setModules = function(e5, a2, t2) {\n  };\n}\nfunction ot() {\n}\nfunction lt() {\n  this.setModules = function(e5, a2) {\n  };\n}\nfunction ft() {\n  this.dataOffset = 0, this.dataLen = 0, this.channels = 0, this.sampleRate = 0;\n}\nfunction ct(e5) {\n  return e5.charCodeAt(0) << 24 | e5.charCodeAt(1) << 16 | e5.charCodeAt(2) << 8 | e5.charCodeAt(3);\n}\nft.RIFF = ct(\"RIFF\"), ft.WAVE = ct(\"WAVE\"), ft.fmt_ = ct(\"fmt \"), ft.data = ct(\"data\"), ft.readHeader = function(e5) {\n  var a2 = new ft(), t2 = e5.getUint32(0, false);\n  if (ft.RIFF == t2 && (e5.getUint32(4, true), ft.WAVE == e5.getUint32(8, false) && ft.fmt_ == e5.getUint32(12, false))) {\n    var s2 = e5.getUint32(16, true), n2 = 20;\n    switch (s2) {\n      case 16:\n      case 18:\n        a2.channels = e5.getUint16(n2 + 2, true), a2.sampleRate = e5.getUint32(n2 + 4, true);\n        break;\n      default:\n        throw \"extended fmt chunk not implemented\";\n    }\n    n2 += s2;\n    for (var r2 = ft.data, _2 = 0; r2 != t2 && (t2 = e5.getUint32(n2, false), _2 = e5.getUint32(n2 + 4, true), r2 != t2); ) n2 += _2 + 8;\n    return a2.dataLen = _2, a2.dataOffset = n2 + 8, a2;\n  }\n};\nvar ht = function(e5, a2, t2) {\n  3 != arguments.length && (console.error(\"WARN: Mp3Encoder(channels, samplerate, kbps) not specified\"), e5 = 1, a2 = 44100, t2 = 128);\n  var s2 = new Ua(), n2 = new _t(), r2 = new Wa(), _2 = new st(), i2 = new Qa(), o2 = new Ja(), l2 = new $a(), f2 = new rt(), c2 = new nt(), h2 = new lt(), u2 = new at(), b2 = new et(), m2 = new it(), p2 = new ot();\n  s2.setModules(r2, _2, i2, o2, l2, f2, c2, h2, p2), _2.setModules(r2, p2, c2, f2), h2.setModules(_2, c2), i2.setModules(s2), l2.setModules(_2, u2, o2, b2), o2.setModules(b2, u2, s2.enc.psy), u2.setModules(_2), b2.setModules(o2), f2.setModules(s2, _2, c2), n2.setModules(m2, p2), m2.setModules(c2, h2, i2);\n  var v2 = s2.lame_init();\n  v2.num_channels = e5, v2.in_samplerate = a2, v2.brate = t2, v2.mode = tt.STEREO, v2.quality = 3, v2.bWriteVbrTag = false, v2.disable_reservoir = true, v2.write_id3tag_automatic = false, s2.lame_init_params(v2);\n  var d2 = 1152, g2 = 0 | 1.25 * d2 + 7200, S2 = Ka(g2);\n  this.encodeBuffer = function(a3, t3) {\n    1 == e5 && (t3 = a3), Za(a3.length == t3.length), a3.length > d2 && (d2 = a3.length, S2 = Ka(g2 = 0 | 1.25 * d2 + 7200));\n    var n3 = s2.lame_encode_buffer(v2, a3, t3, a3.length, S2, 0, g2);\n    return new Int8Array(S2.subarray(0, n3));\n  }, this.flush = function() {\n    var e6 = s2.lame_encode_flush(v2, S2, 0, g2);\n    return new Int8Array(S2.subarray(0, e6));\n  };\n}, ut = ft;\nfunction encodeMp3(arrayBuffer) {\n  var wav = ut.readHeader(new DataView(arrayBuffer));\n  var dataView = new Int16Array(arrayBuffer, wav.dataOffset, wav.dataLen / 2);\n  var mp3Encoder = new ht(wav.channels, wav.sampleRate, 128);\n  var maxSamples = 1152;\n  var samplesLeft = wav.channels === 1 ? dataView : new Int16Array(wav.dataLen / (2 * wav.channels));\n  var samplesRight = wav.channels === 2 ? new Int16Array(wav.dataLen / (2 * wav.channels)) : void 0;\n  if (wav.channels > 1) {\n    for (var j2 = 0; j2 < samplesLeft.length; j2++) {\n      samplesLeft[j2] = dataView[j2 * 2];\n      if (samplesRight) {\n        samplesRight[j2] = dataView[j2 * 2 + 1];\n      }\n    }\n  }\n  var dataBuffer = [];\n  var remaining = samplesLeft.length;\n  for (var i2 = 0; remaining >= maxSamples; i2 += maxSamples) {\n    var left = samplesLeft.subarray(i2, i2 + maxSamples);\n    var right = void 0;\n    if (samplesRight) {\n      right = samplesRight.subarray(i2, i2 + maxSamples);\n    }\n    var mp3buf = mp3Encoder.encodeBuffer(left, right);\n    dataBuffer.push(new Int8Array(mp3buf));\n    remaining -= maxSamples;\n  }\n  var mp3Lastbuf = mp3Encoder.flush();\n  dataBuffer.push(new Int8Array(mp3Lastbuf));\n  return dataBuffer;\n}\nfunction downsampleToWav(file, callback) {\n  var audioCtx = new AudioContext({ sampleRate: _index_DknuPJHO_js__WEBPACK_IMPORTED_MODULE_0__[\"a\"] });\n  var fileReader = new FileReader();\n  fileReader.onload = function(ev) {\n    var _a2;\n    audioCtx.decodeAudioData((_a2 = ev.target) === null || _a2 === void 0 ? void 0 : _a2.result, function(buffer) {\n      var usingWebkit = !window.OfflineAudioContext;\n      var offlineAudioCtx = new OfflineAudioContext(1, 16e3 * buffer.duration, 16e3);\n      var soundSource = offlineAudioCtx.createBufferSource();\n      soundSource.buffer = buffer;\n      soundSource.connect(offlineAudioCtx.destination);\n      var reader = new FileReader();\n      reader.onload = function() {\n        var renderCompleteHandler = function(evt) {\n          var renderedBuffer = usingWebkit ? evt.renderedBuffer : evt;\n          var buffer2 = bufferToWav(renderedBuffer, renderedBuffer.length);\n          if (callback) {\n            callback(buffer2);\n          }\n        };\n        if (usingWebkit) {\n          offlineAudioCtx.oncomplete = renderCompleteHandler;\n          offlineAudioCtx.startRendering();\n        } else {\n          offlineAudioCtx.startRendering().then(renderCompleteHandler).catch(function(err) {\n            return console.warn(err);\n          });\n        }\n      };\n      reader.readAsArrayBuffer(file);\n      soundSource.start(0);\n    });\n  };\n  fileReader.readAsArrayBuffer(file);\n}\nfunction bufferToWav(abuffer, len) {\n  var numOfChan = abuffer.numberOfChannels;\n  var length = len * numOfChan * 2 + 44;\n  var buffer = new ArrayBuffer(length);\n  var view = new DataView(buffer);\n  var channels = [];\n  var i2 = 0;\n  var sample;\n  var offset = 0;\n  var pos = 0;\n  setUint32(1179011410);\n  setUint32(length - 8);\n  setUint32(1163280727);\n  setUint32(544501094);\n  setUint32(16);\n  setUint16(1);\n  setUint16(numOfChan);\n  setUint32(abuffer.sampleRate);\n  setUint32(abuffer.sampleRate * 2 * numOfChan);\n  setUint16(numOfChan * 2);\n  setUint16(16);\n  setUint32(1635017060);\n  setUint32(length - pos - 4);\n  for (i2 = 0; i2 < abuffer.numberOfChannels; i2++) {\n    channels.push(abuffer.getChannelData(i2));\n  }\n  while (pos < length) {\n    for (i2 = 0; i2 < numOfChan; i2++) {\n      sample = Math.max(-1, Math.min(1, channels[i2][offset]));\n      sample = (0.5 + sample < 0 ? sample * 32768 : sample * 32767) | 0;\n      view.setInt16(pos, sample, true);\n      pos += 2;\n    }\n    offset++;\n  }\n  return buffer;\n  function setUint16(data) {\n    view.setUint16(pos, data, true);\n    pos += 2;\n  }\n  function setUint32(data) {\n    view.setUint32(pos, data, true);\n    pos += 4;\n  }\n}\n\n//# sourceMappingURL=bundle-CzgB87O4-KLZEOica.js.map\n\n\n//# sourceURL=webpack://BottomSticky/./node_modules/@practo/practo-ai/dist/bundle-CzgB87O4-KLZEOica.js?");

/***/ })

}]);